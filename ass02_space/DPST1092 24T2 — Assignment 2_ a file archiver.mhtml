From: <Saved by Blink>
Snapshot-Content-Location: https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#galaxy-format
Subject: =?utf-8?Q?DPST1092=2024T2=20=E2=80=94=20Assignment=202:=20a=20file=20arch?=
 =?utf-8?Q?iver?=
Date: Wed, 3 Jul 2024 20:05:46 +1000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----"


------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/html
Content-ID: <frame-27CF3F60D16CBB61EA3D6D11341DB0FA@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#galaxy-format

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-e3013ce7-b4d4-46c4-9da5-0e633734b964@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-b3ae9039-2ea7-4396=
-9f6e-0272ce745125@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-4ed8598d-2777-4d6c-a17b-65ecfd97292f@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-dd2e10b2-d2c1-44a5-b4=
6d-c4c37277ba11@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" h=
ref=3D"cid:css-bfa1865b-ca34-4d76-9c5e-ae8ab8b6e8df@mhtml.blink" /><link re=
l=3D"stylesheet" type=3D"text/css" href=3D"cid:css-c40fd951-4099-40a5-85d1-=
611299df5cde@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-a39a12d0-2870-4739-847e-7a14a4d10dd4@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-6a01a8ca-cabc-4ca6-a851-a=
5acbf4e095a@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-174f93e6-b02f-45c5-a029-53febb0ad5a8@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-65a8b4cf-7152-4dbc-ba2d-2=
18728d03a5e@mhtml.blink" />
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1, shrink-to-fit=3Dno">

    <title>
        DPST1092 24T2 =E2=80=94
       =20
Assignment 2: a file archiver

    </title><link rel=3D"canonical" href=3D"https://cgi.cse.unsw.edu.au/~dp=
1092/24T2/">

    <link rel=3D"stylesheet" href=3D"https://cdnjs.cloudflare.com/ajax/libs=
/twitter-bootstrap/4.5.0/css/bootstrap.min.css" crossorigin=3D"anonymous">
    <link rel=3D"stylesheet" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24=
T2/flask.cgi/static/course.css?209281714483221.0504942=3D">

   =20
   =20
   =20

   =20
   =20
    <link rel=3D"icon" type=3D"image/png" href=3D"https://cgi.cse.unsw.edu.=
au/~dp1092/24T2/flask.cgi/static/favicon.ico?27501714483221.0544944=3D">

    <!-- <script async src=3D"https://static.codepen.io/assets/embed/ei.js"=
></script> -->

    <!-- MathJax. -->
   =20

   =20
<link rel=3D"stylesheet" href=3D"https://cdn.rawgit.com/afeld/bootstrap-toc=
/v1.0.1/dist/bootstrap-toc.min.css">
<!-- add after bootstrap.min.js -->



   =20
</head>
<body class=3D"d-flex flex-column" style=3D"min-height: 100vh;"><div id=3D"=
MathJax_Message" style=3D"display: none;"></div>
<nav class=3D"navbar fixed-top navbar-expand-lg navbar-light no-print" id=
=3D"header-navbar">
    <div class=3D"container">
        <a class=3D"navbar-brand" href=3D"https://cgi.cse.unsw.edu.au/~dp10=
92/24T2/">
            DPST1092 - 24T2
        </a>
        <button class=3D"navbar-toggler navbar-toggler-right" type=3D"butto=
n" data-toggle=3D"collapse" data-target=3D"#navmenu" aria-controls=3D"navme=
nu" aria-label=3D"Toggle navigation" aria-expanded=3D"false">
            <span class=3D"navbar-toggler-icon"></span>
        </button>
        <div class=3D"collapse navbar-collapse" id=3D"navmenu">
            <ul class=3D"navbar-nav mr-auto">
               =20
                    <li class=3D"nav-item active">
                        <a class=3D"nav-link" href=3D"https://cgi.cse.unsw.=
edu.au/~dp1092/24T2/resources/outline.pdf">
                            Outline
                        </a>
                    </li>
               =20
                    <li class=3D"nav-item active">
                        <a class=3D"nav-link" href=3D"https://cgi.cse.unsw.=
edu.au/~dp1092/24T2/resources/timetable.html">
                            Timetable
                        </a>
                    </li>
               =20
               =20
               =20
            </ul>
        </div>
    </div>
</nav>
<main class=3D"container" aria-label=3D"Content" style=3D"flex: 1; padding-=
top: 4rem;">
   =20

        <header>
           =20
                <h1 class=3D"text-center">
Assignment 2: a file archiver
</h1>
           =20
        </header>

       =20


<div class=3D"row" id=3D"assignment-body">
<div class=3D"col-lg-10 col-12">





























 =20
  <!--<aside class=3D"note">
    <p>
    You may find the <a href=3D"https://youtu.be/UCE1BhecXlw">assignment ov=
erview video</a> to be a useful place to start.
    </p></aside>-->
  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h2 id=3D"contents">Contents</h2>
  <ul>
    <li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass=
2/index.html#aims">Aims</a>
    </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignment=
s/ass2/index.html#the-task">The Task</a>
      <ul>
        <li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments=
/ass2/index.html#getting-started">Getting Started</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#subset-0">Subset 0</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#subset-1">Subset 1</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#subset-2">Subset 2</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#subset-3">Subset 3</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#handling-errors">Handling Errors</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#reference-implementation">Reference implementation</a=
>
      </li></ul>
    </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignment=
s/ass2/index.html#galaxy-format">The galaxy and star format</a>
    </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignment=
s/ass2/index.html#star-hash">The star hash</a>
    </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignment=
s/ass2/index.html#assumptions-clarifications">Assumptions and Clarification=
s</a>
    </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignment=
s/ass2/index.html#assessment">Assessment</a>
      <ul>
        <li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments=
/ass2/index.html#assessment--testing">Testing</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#assessment--submission">Submission</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#assessment--due-date">Due Date</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#assessment--assessment-scheme">Assessment Scheme</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#assessment--intermediate-versions-of-work">Intermedia=
te Versions of Work</a>
        </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#assignment-conditions">Assignment Conditions</a>
      </li></ul>
    </li><li><a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignment=
s/ass2/index.html#change-log">Change Log</a>
  </li></ul>

  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h2 id=3D"aims">Aims</h2>
  <ul>
   =20
    <li> building a concrete understanding of file system objects;
     =20
    </li><li> practising C, including byte-level operations and robust erro=
r handling;
     =20
    </li><li> understanding file operations, including input-output operati=
ons on binary data
     =20
  </li></ul>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h2 id=3D"the-task">The Task</h2>
  <p>
    A file archive is a single file which can contain
    the contents, names and other metadata of multiple files.
    These can make backup and transport of files more convenient,
    and can often make compression more efficient.
    We often refer to tools that can create or manipulate these as
    <em><a href=3D"https://en.wikipedia.org/wiki/File_archiver">file archiv=
ers</a></em>.

  </p><p>
    There are a vast number of archive formats:
    on *nix-like systems, <cite><a title=3D"man 5 tar" href=3D"https://manp=
ages.debian.org/jump?q=3Dtar.5">tar</a></cite> is common;
    whereas on Windows, <a href=3D"https://en.wikipedia.org/wiki/Zip_(file_=
format)">Zip</a> is common.
    Wikipedia's <a href=3D"https://en.wikipedia.org/wiki/List_of_archive_fo=
rmats">list of archive formats</a>
    is a marvellous rabbit-hole to explore.

  </p><p>
    In this assignment,
    you will be implementing <strong>space</strong>,
    a file archiver for the galaxy format.

  </p><p>
    The galaxy format is made up of one or more stars;
    where a star records one file system object;
    This format is described in more detail below.

  </p><p>
    A complete implementation of space can

  </p><ul>
    <li>
      <p>
        list the path names of each object in a galaxy
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-0">subset 0</a>)</small>;

    </p></li><li>
      <p>
        list the permissions of each object in a galaxy
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-0">subset 0</a>)</small>;

    </p></li><li>
      <p>
        list the size (number of bytes) of files in a galaxy
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-0">subset 0</a>)</small>;

    </p></li><li>
      <p>
        check the star magic number
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-0">subset 0</a>)</small>;

    </p></li><li>
      <p>
        extract files from a galaxy
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-1">subset 1</a>)</small>;

    </p></li><li>
      <p>
        check a galaxy for integrity,
        by checking star hashes;
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-1">subset 1</a>)</small>;

    </p></li><li>
      <p>
        set the file permissions of files extracted from a galaxy
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-1">subset 1</a>)</small>;

    </p></li><li>
      <p>
        create a galaxy from a list of files
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-2">subset 2</a>)</small>;

    </p></li><li>
      <p>
        list, extract, and create galaxies that include directories
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-3">subset 3</a>)</small>; and

    </p></li><li>
      <p>
        extract, and create galaxies in 7-bit and 6-bit formats
        <small>(<a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#subset-3">subset 3</a>)</small>.
  </p></li></ul>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h3 id=3D"getting-started">Getting Started</h3>
  <p>
    Create a new directory for this assignment,
    change to this directory,
    and fetch the provided code by running

  </p><pre is=3D"tty"><kbd is=3D"sh">mkdir -m 700 space</kbd>
<kbd is=3D"sh">cd space</kbd>
<kbd is=3D"sh">1092 fetch space</kbd>
</pre>

  <p>
    If you're not working at CSE,
    you can download the provided files
    as a <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/as=
s2/provided.zip">zip file</a>
    or a <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/as=
s2/provided.tar">tar file</a>.

  </p><p>
    This will give you the following files:

  </p><dl class=3D"row">

    <dt class=3D"col-3"><code>space.c</code></dt>
    <dd class=3D"col-9">
      is the only file you need to change:
      it contains partial definitions of four functions,
      <em>list_galaxy</em>, <em>check_galaxy</em>,
      <em>extract_galaxy</em>, and <em>create_galaxy</em>,
      to which you need to add code to complete the assignment.
      You can also add your own functions to this file.

    </dd><dt class=3D"col-3"><code>space_main.c</code></dt>
    <dd class=3D"col-9">
      contains a <em>main</em>,
      which has code to parse the command line arguments,
      and which then calls one of
      <em>list_galaxy</em>,
      <em>extract_galaxy</em>,
      <em>create_galaxy</em>, or
      <em>check_galaxy</em>,
      depending on the command line arguments given to space.
      <em class=3D"text-danger">Do not change this file.</em>

    </dd><dt class=3D"col-3">
      <code>space.h</code>
    </dt>
    <dd class=3D"col-9">
      contains shared function declarations
      and some useful constant definitions.
      <em class=3D"text-danger">Do not change this file.</em>

    </dd><dt class=3D"col-3"><code>space_hash.c</code></dt>
    <dd class=3D"col-9">
      contains the <em>galaxy_hash</em> function;
      you should call this function to calculate hashes for subset 1.
      <em class=3D"text-danger">Do not change this file.</em>

    </dd><dt class=3D"col-3"><code>space_6_bit.c</code></dt>
    <dd class=3D"col-9">
      contains the <em>galaxy_to_6_bit</em>
      and <em>galaxy_from_6_bit</em> functions.
      You should call these to implement the 6-bit format for subset 3.
      <em class=3D"text-danger">Do not change this file.</em>

    </dd><dt class=3D"col-3"><code>space.mk</code></dt>
    <dd class=3D"col-9">
      contains a Makefile fragment for space.
  </dd></dl>

  <p>
    You can run <cite><a title=3D"man 1 make" href=3D"https://manpages.debi=
an.org/jump?q=3Dmake.1">make</a></cite> to compile the provided code;
    and you should be able to run the result.

  </p><pre is=3D"tty"><kbd is=3D"sh">make</kbd>
dcc -c -o space.o space.c
dcc -c -o space_main.o space_main.c
dcc -c -o space_hash.o space_hash.c
dcc -c -o space_6_bit.o space_6_bit.c
dcc space.o space_main.o space_hash.o space_6_bit.o -o space
<kbd is=3D"sh">./space -l a.galaxy</kbd>
list_galaxy called to list galaxy: 'a.galaxy'
</pre>


  <!-- <p>
    If you are running <cite>make(1)</cite> without <code>dcc</code> availa=
ble you can compile like this:

  <pre is=3D"tty">
    <kbd is=3D"sh">make CC=3Dgcc</kbd>
    gcc -c -o space.o space.c
    gcc -c -o space_main.o space_main.c
    gcc -c -o space_hash.o space_hash.c
    gcc -c -o space_6_bit.o space_6_bit.c
    gcc space.o space_main.o space_hash.o space_6_bit.o -o space
    <kbd is=3D"sh">./space -l a.galaxy</kbd>
    list_galaxy called to list galaxy: 'a.galaxy'
  </pre>

  <aside class=3D"warning">
    <p>
      <code>dcc</code> does more error checking than <cite>gcc(1)</cite>

    <p>
      Make sure your program can compile with <code>dcc</code>
  </aside> -->

  <p>
    If you don't have <cite><a title=3D"man 1 make" href=3D"https://manpage=
s.debian.org/jump?q=3Dmake.1">make</a></cite> available you can compile lik=
e this:

  </p><pre is=3D"tty"><kbd is=3D"sh">dcc space.c space_main.c space_hash.c =
space_6_bit.c -o space</kbd>
<kbd is=3D"sh">./space -C b.galaxy</kbd>
check_galaxy called to check galaxy: 'a.galaxy'
</pre>

<!--
  <p>
    If you don't have <cite>make(1)</cite> or <code>dcc</code> available yo=
u can compile like this:

  <pre is=3D"tty">
    <kbd is=3D"sh">gcc -Wall space.c space_main.c space_hash.c space_6_bit.=
c -o space</kbd>
    <kbd is=3D"sh">./space -C b.galaxy</kbd>
    check_galaxy called to check galaxy: 'a.galaxy'
  </pre>

  <aside class=3D"warning">
    <p>
      <code>dcc</code> does more error checking than <cite>gcc(1)</cite>

    <p>
      Make sure your program can compile with <code>dcc</code>
  </aside>
-->
  <p>
    You may optionally create extra <code>.c</code> or <code>.h</code> file=
s.

  </p><p>
    You should run <cite><a title=3D"man 1 unzip" href=3D"https://manpages.=
debian.org/jump?q=3Dunzip.1">unzip</a></cite> to get a directory called <co=
de>examples/</code>
    full of <var>.galaxy</var> files to test your program against.

  </p><pre is=3D"tty"><kbd is=3D"sh">unzip examples.zip</kbd>
</pre>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h3 id=3D"subset-0">Subset 0</h3>
  <p>
    To complete subset 0,
    you need to implement code that can
  </p><ul>
    <li> print a list of the contents of a galaxy, and
    </li><li> print a detailed list of the contents of a galaxy.
  </li></ul>


  <h4>Subset 0: Print a list of the contents of a galaxy</h4>
  <p>
    Given the <code>-l</code> command-line argument,
    <em>space</em> should print the path names of
    the files/directories in a galaxy.

  </p><p>
    For example:

  </p><pre is=3D"tty"><kbd is=3D"sh_comment">List each item in the galaxy c=
alled text_file.galaxy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -l examples/text_file.galaxy</kbd>
hello.txt
<kbd is=3D"sh_comment">List each item in the galaxy called 4_files.galaxy, =
which is in the examples directory</kbd>
<kbd is=3D"sh">./space -l examples/4_files.galaxy</kbd>
256.bin
hello.txt
last_goodbye.txt
these_days.txt
<kbd is=3D"sh_comment">List each item in the galaxy called hello_world.gala=
xy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -l examples/hello_world.galaxy</kbd>
hello.c
hello.cpp
hello.d
hello.go
hello.hs
hello.java
hello.js
hello.pl
hello.py
hello.rs
hello.s
hello.sh
hello.sql
</pre>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h4>Subset 0: Print a detailed list of the contents of a galaxy</h4>
  <p>
    Given the <code>-L</code> command-line argument,
    <em>space</em> should,
    for each file in the specified galaxy, print:

  </p><ol>
    <li> the file/directory permissions,
    </li><li> the star format which will be one of 6, 7 or 8 (the default),
    </li><li> the file/directory size in bytes, and
    </li><li> the file/directory path name.
  </li></ol>

<pre is=3D"tty"><kbd is=3D"sh">./space -L examples/text_file.galaxy</kbd>
-rw-r--r--  8     56  hello.txt
<kbd is=3D"sh_comment">List the details of each item in the galaxy called 4=
_files.galaxy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -L examples/4_files.galaxy</kbd>
-rw-r--r--  8    256  256.bin
-rw-r--r--  8     56  hello.txt
-r--r--r--  8    166  last_goodbye.txt
-r--rw-r--  8    148  these_days.txt
<kbd is=3D"sh_comment">List the details of each item in the galaxy called h=
ello_world.galaxy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -L examples/hello_world.galaxy</kbd>
-rw-r--r--  8     93  hello.c
-rw-r--r--  8     82  hello.cpp
-rw-r--r--  8     65  hello.d
-rw-r--r--  8     77  hello.go
-rw-r--r--  8     32  hello.hs
-rw-r--r--  8    117  hello.java
-rw-r--r--  8     30  hello.js
-rwxr-xr-x  8     47  hello.pl
-rwxr-xr-x  8    103  hello.py
-rw-r--r--  8     45  hello.rs
-rw-r--r--  8    123  hello.s
-rwxr-xr-x  8     41  hello.sh
-rw-r--r--  8     24  hello.sql
</pre>

  <aside class=3D"hint">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          <code>space_main.c</code> calls
          the function <em>list_galaxy</em> in <code>space.c</code>
          when either of the <code>-l</code> or <code>-L</code> options
          are specified on the command line.

      </p></li><li>
        <p>
          Add code to <em>list_galaxy</em> in <code>space.c</code>.

      </p></li><li>
        <p>
          Use <cite><a title=3D"man 3 fopen" href=3D"https://manpages.debia=
n.org/jump?q=3Dfopen.3">fopen</a></cite> to open the galaxy file.

      </p></li><li>
        <p>
          Use <cite><a title=3D"man 3 fgetc" href=3D"https://manpages.debia=
n.org/jump?q=3Dfgetc.3">fgetc</a></cite> to read bytes.

      </p></li><li>
        <p>
          Make sure you understand the <a href=3D"https://cgi.cse.unsw.edu.=
au/~dp1092/24T2/assignments/ass2/index.html#galaxy-format">star format spec=
ification</a> below

      </p></li><li>
        <p>
          Use C bitwise operations such as <code>&lt;&lt;</code> <code>&amp=
;</code> and <code>|</code> to combine bytes
          into integers.

      </p></li><li>
        <p>
          Think carefully about the functions you can construct to avoid re=
peated code.

      </p></li><li>
        <p>
          Review
          <!-- <code>print_borts_file.c</code> from our <a href=3D"https://=
cgi.cse.unsw.edu.au/~dp1092/24T2/tut/08/answers">week 8 tutorial</a> and --=
>
          <code>print_bytes.c</code> from our <a href=3D"https://cgi.cse.un=
sw.edu.au/~dp1092/24T2/lab/08/questions">week 8 lab</a>.

      </p></li><li>
        <p>
          <cite><a title=3D"man 3 fseek" href=3D"https://manpages.debian.or=
g/jump?q=3Dfseek.3">fseek</a></cite> can be used to skip over parts of the =
galaxy file,
          but you can also use a loop and <cite><a title=3D"man 3 fgetc" hr=
ef=3D"https://manpages.debian.org/jump?q=3Dfgetc.3">fgetc</a></cite>

    </p></li></ul>
  </aside>

  <aside class=3D"note">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          The order you list files is the order they appear in the galaxy.

      </p></li><li>
        <p>
          galaxy files do not necessarily end with .galaxy.
          This has been done with the provided example files purely as a co=
nvenience.

      </p></li><li>
        <p>
          Hint: use a format like <code>"%5lu"</code> to print the file siz=
e.

    </p></li></ul>
  </aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h3 id=3D"subset-1">Subset 1</h3>
  <p>
    To complete subset 1,
    you need to implement code that can
  </p><ul>
    <li> check the contents of a galaxy, and
    </li><li> extract files from a galaxy.
  </li></ul>

  <h4>Subset 1: Check the contents of a galaxy</h4>
  <p>
    Given the <code>-C</code> command-line argument,
    <em>space</em> should check the hashes in the specified galaxy.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh_comment">Check the galaxy called 4_files.=
galaxy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -C examples/4_files.galaxy</kbd>
256.bin - correct hash
hello.txt - correct hash
last_goodbye.txt - correct hash
these_days.txt - correct hash
<kbd is=3D"sh_comment">Check the galaxy called examples/hello_world.bad_has=
h.galaxy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -C examples/hello_world.bad_hash.galaxy</kbd>
hello.c - correct hash
hello.cpp - correct hash
hello.d - correct hash
hello.go - correct hash
hello.hs - correct hash
hello.java - correct hash
hello.js - correct hash
hello.pl - correct hash
hello.py - correct hash
hello.rs - correct hash
hello.s - correct hash
hello.sh - correct hash
hello.sql - incorrect hash 0x19 should be 0x43
</pre>

  <p>
    It should also check the star magic number (first byte) of each star,
    and emit an error if it is incorrect.

</p><pre is=3D"tty"><kbd is=3D"sh_comment">Check the galaxy called text_fil=
e.bad_magic.galaxy, which is in the examples directory</kbd>
<kbd is=3D"sh">./space -C examples/text_file.bad_magic.galaxy</kbd>
error: incorrect first star byte: 0x39 should be 0x63
</pre>

  <aside class=3D"hint">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          <code>space_main.c</code> calls
          the function <em>check_galaxy</em> in <code>space.c</code>
          when the <code>-C</code> option is specified on the command line.

      </p></li><li>
        <p>
          Add code to <code>check_galaxy</code> in <code>space.c</code>.

      </p></li><li>
        <p>
          The correct and incorrect hash messages in this part of subset 1
          are part of the normal output of space, and so should be to
          <code>stdout</code>.

      </p></li><li>
        <p>
          Call <code>galaxy_hash</code> to calculate hash values.

      </p></li><li>
        <p>
          Think carefully about the functions you can construct to avoid re=
peated code.

      </p></li><li>
        <p>
          For example, for every byte you read with <code>fgetc</code> you =
need to
          call <code>galaxy_hash</code> to calculate a new hash value, so w=
rite a function
          that does both. Hint: have the function take a pointer to a hash =
value which it can update.

    </p></li></ul>
  </aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h4>Subset 1: Extract files from a galaxy</h4>
  <p>
    Given the <code>-x</code> command-line argument,
    <em>space</em> should
    extract the files in the specified galaxy.

  </p><p>
    It should set file permissions for extracted files to the permissions s=
pecified in the galaxy.

</p><pre is=3D"tty"><kbd is=3D"sh_comment">space will extract files into th=
e current working directory.</kbd>
<kbd is=3D"sh_comment">So as not to clutter your assignment directory, you =
should create a</kbd>
<kbd is=3D"sh_comment">temporary directory, 'tmp', and change to it. Once i=
n that directory,</kbd>
<kbd is=3D"sh_comment">both your space program and 'examples/' will be in i=
ts parent</kbd>
<kbd is=3D"sh_comment">directory --- hence the use of '..' in these path na=
mes.</kbd>

<kbd is=3D"sh_comment">Make a directory called tmp.</kbd>
<kbd is=3D"sh">mkdir -p tmp/</kbd>
<kbd is=3D"sh_comment">Change into the tmp directory.</kbd>
<kbd is=3D"sh">cd tmp/</kbd>
<kbd is=3D"sh_comment">Forcibly remove all files inside the tmp directory.<=
/kbd>
<kbd is=3D"sh">rm -f * .*</kbd>
<kbd is=3D"sh_comment">Use your program to extract the contents of text_fil=
e.galaxy.</kbd>
<kbd is=3D"sh">../space -x ../examples/text_file.galaxy</kbd>
Extracting: hello.txt
<kbd is=3D"sh_comment">Show the contents of hello.txt in the terminal.</kbd=
>
<kbd is=3D"sh_comment">You can manually open it in your text editor too, if=
 you like.</kbd>
<kbd is=3D"sh">cat hello.txt</kbd>
Hello DPST1092
I hope you are enjoying this assignment.
<kbd is=3D"sh_comment">Forcibly remove all files inside the tmp directory.<=
/kbd>
<kbd is=3D"sh">rm -f * .*</kbd>
<kbd is=3D"sh_comment">Use your program to extract the contents of hello_wo=
rld.galaxy.</kbd>
<kbd is=3D"sh">../space -x ../examples/hello_world.galaxy</kbd>
Extracting: hello.c
Extracting: hello.cpp
Extracting: hello.d
Extracting: hello.go
Extracting: hello.hs
Extracting: hello.java
Extracting: hello.js
Extracting: hello.pl
Extracting: hello.py
Extracting: hello.rs
Extracting: hello.s
Extracting: hello.sh
Extracting: hello.sql
<kbd is=3D"sh_comment">Show the first 25 lines from the extracted files to =
confirm the extraction was successful.</kbd>
<kbd is=3D"sh">cat $(echo * | sort) | head -n 25</kbd>
extern int puts(const char *s);

int main(void)
{
    puts("Hello, World!");
    return 0;
}
#include &lt;iostream&gt;

int main () {
  std::cout &lt;&lt; "Hello, world!" &lt;&lt; std::endl;
}
import std.stdio;

void main() {
    writeln("Hello, world!");
}
package main

import "fmt"

func main() {
    fmt.Println("Hello, World!")
}
main =3D putStrLn "Hello, World!"
<kbd is=3D"sh_comment">Forcibly remove all files inside the tmp directory</=
kbd>
<kbd is=3D"sh">rm -f * .*</kbd>
<kbd is=3D"sh_comment">Use your program to extract the contents of meta.gal=
axy.</kbd>
<kbd is=3D"sh">../space -x ../examples/meta.galaxy</kbd>
Extracting: 1_file.subdirectory.7-bit.galaxy
Extracting: 1_file.subdirectory.galaxy
Extracting: 2_files.7-bit.galaxy
Extracting: 2_files.galaxy
Extracting: 3_files.7-bit.galaxy
Extracting: 3_files.bad_hash.galaxy
Extracting: 3_files.bad_magic.galaxy
Extracting: 3_files.galaxy
Extracting: 3_files.subdirectory.7-bit.galaxy
Extracting: 3_files.subdirectory.bad_hash.galaxy
Extracting: 3_files.subdirectory.bad_magic.galaxy
Extracting: 3_files.subdirectory.galaxy
Extracting: 4_files.galaxy
Extracting: all_the_modes.subdirectory.7-bit.galaxy
Extracting: all_the_modes.subdirectory.galaxy
Extracting: all_three_formats.6-bit.galaxy
Extracting: binary_file.galaxy
Extracting: hello_world.7-bit.galaxy
Extracting: hello_world.bad_hash.galaxy
Extracting: hello_world.bad_magic.galaxy
Extracting: hello_world.galaxy
Extracting: lecture_code.subdirectory.7-bit.galaxy
Extracting: lecture_code.subdirectory.galaxy
Extracting: small.6-bit.galaxy
Extracting: small.7-bit.galaxy
Extracting: small.galaxy
Extracting: text_file.7-bit.galaxy
Extracting: text_file.bad_hash.galaxy
Extracting: text_file.bad_magic.galaxy
Extracting: text_file.galaxy
Extracting: tiny.6-bit.galaxy
Extracting: tiny.7-bit.galaxy
Extracting: tiny.galaxy
<kbd is=3D"sh_comment">Show the first 10 items in this directory alphabetic=
ally to check extraction was successful.</kbd>
<kbd is=3D"sh">ls -1 $(echo * | sort) | head</kbd>
1_file.subdirectory.galaxy
1_file.subdirectory.compressed.galaxy
2_files.galaxy
2_files.compressed.galaxy
3_files.bad_hash.galaxy
3_files.bad_magic.galaxy
3_files.galaxy
3_files.compressed.galaxy
3_files.subdirectory.bad_hash.galaxy
3_files.subdirectory.bad_magic.galaxy
<kbd is=3D"sh_comment">Go back into the directory with your code.</kbd>
<kbd is=3D"sh">cd ../</kbd>
<kbd is=3D"sh_comment">Remove the tmp directory and everything inside it.</=
kbd>
<kbd is=3D"sh">rm -rf tmp/</kbd>
</pre>

  <aside class=3D"hint">
    <ul class=3D"list-unstyled">

      <li>
        <p>
      </p></li><li>
        <p>
          <code>space_main.c</code> calls
          the function <em>extract_galaxy</em> in <code>space.c</code>
          when the <code>-x</code> option is specified on the command line.

      </p></li><li>
        <p>
          Add code to <em>extract_galaxy</em> in <code>space.c</code>.

      </p></li><li>
        <p>
          Use <cite><a title=3D"man 3 fopen" href=3D"https://manpages.debia=
n.org/jump?q=3Dfopen.3">fopen</a></cite> to open each file you are extracti=
ng.

      </p></li><li>
        <p>
          Use <cite><a title=3D"man 3 fputc" href=3D"https://manpages.debia=
n.org/jump?q=3Dfputc.3">fputc</a></cite> to write bytes to each file.

      </p></li><li>
        <p>
          In our <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/topic/=
files/slides">lectures on files</a>
          we covered copying bytes to a file in the <a href=3D"https://cgi.=
cse.unsw.edu.au/~dp1092/24T2/topic/files/code/cp_fgetc.c">cp_fgetc.c</a>
          example
          and setting the permissions of a file in the <a href=3D"https://c=
gi.cse.unsw.edu.au/~dp1092/24T2/topic/files/code/chmod.c">chmod.c</a>
          example.

    </p></li></ul>
  </aside>

  <aside class=3D"note">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          space should overwrite an files that already exist.

      </p></li><li>
        <p>
          space can leave already extracted/partially extracted files in th=
e event of an error.

    </p></li></ul>
  </aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h3 id=3D"subset-2">Subset 2</h3>
  <p>
    To complete subset 2,
    you need to implement code that can
  </p><ul>
    <li> create a galaxy from a list of files.
  </li></ul>

  <h4>Subset 2: Create a galaxy from a list of files</h4>
  <p>
    Given the <code>-c</code> command-line argument, <em>space</em> should
    create a galaxy containing the specified files.

</p><pre is=3D"tty"><kbd is=3D"sh_comment">These "echo" lines show you how =
to create these test files and what their contents are.</kbd>

<kbd is=3D"sh_comment">Create a file called hello.txt with the contents "he=
llo".</kbd>
<kbd is=3D"sh">echo hello &gt;hello.txt</kbd>
<kbd is=3D"sh_comment">Create a file called hola.txt with the contents "hol=
a".</kbd>
<kbd is=3D"sh">echo hola &gt;hola.txt</kbd>
<kbd is=3D"sh_comment">Create a file called hi.txt with the contents "hi".<=
/kbd>
<kbd is=3D"sh">echo hi &gt;hi.txt</kbd>
<kbd is=3D"sh_comment">Set the permissions of these files to 644 (octal per=
mission string (equivalent to rw-r--r--)).</kbd>
<kbd is=3D"sh_comment">When you list the contents of the galaxy, the permis=
sions should match this.</kbd>
<kbd is=3D"sh">chmod 644 hello.txt hola.txt hi.txt</kbd>
<kbd is=3D"sh_comment">Create a galaxy called selamat.galaxy with the files=
 hello.txt, hola.txt, and hi.txt.</kbd>
<kbd is=3D"sh">./space -c selamat.galaxy hello.txt hola.txt hi.txt</kbd>
Adding: hello.txt
Adding: hola.txt
Adding: hi.txt
<kbd is=3D"sh_comment">List the contents of selamat.galaxy.</kbd>
<kbd is=3D"sh">./space -L selamat.galaxy</kbd>
-rw-r--r-- 8 6 hello.txt
-rw-r--r-- 8 5 hola.txt
-rw-r--r-- 8 3 hi.txt
<kbd is=3D"sh_comment">Make a directory called tmp.</kbd>
<kbd is=3D"sh">mkdir -p tmp/</kbd>
<kbd is=3D"sh_comment">Change into the tmp directory.</kbd>
<kbd is=3D"sh">cd tmp/</kbd>
<kbd is=3D"sh_comment">Forcibly remove all files inside the tmp directory.<=
/kbd>
<kbd is=3D"sh">rm -f * .*</kbd>
<kbd is=3D"sh_comment">Use your program to extract the contents of selamat.=
galaxy.</kbd>
<kbd is=3D"sh">../space -x ../selamat.galaxy</kbd>
Extracting: hello.txt
Extracting: hola.txt
Extracting: hi.txt
<kbd is=3D"sh_comment">Check that the extracted file hello.txt is the same =
as the source file ../hello.txt.</kbd>
<kbd is=3D"sh">diff -s ../hello.txt hello.txt</kbd>
Files ../hello.txt and hello.txt are identical
<kbd is=3D"sh_comment">Check that the extracted file hola.txt is the same a=
s the source file ../hola.txt.</kbd>
<kbd is=3D"sh">diff -s ../hola.txt hola.txt</kbd>
Files ../hola.txt and hola.txt are identical
<kbd is=3D"sh_comment">Check that the extracted file hi.txt is the same as =
the source file ../hi.txt.</kbd>
<kbd is=3D"sh">diff -s ../hi.txt hi.txt</kbd>
Files ../hi.txt and hi.txt are identical
<kbd is=3D"sh_comment">Go back into the directory with your code.</kbd>
<kbd is=3D"sh">cd ../</kbd>
<kbd is=3D"sh_comment">Remove the tmp directory and everything inside it.</=
kbd>
<kbd is=3D"sh">rm -rf tmp/</kbd>
</pre>

  <p>
    It is also possible to append stars
    to an existing galaxy file
    using the <code>-a</code> command-line option.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh">./space -a bonjour.galaxy hello.txt</kbd=
>
Adding: hello.txt
<kbd is=3D"sh">./space -L bonjour.galaxy</kbd>
-rw-r--r--  8      6  hello.txt
<kbd is=3D"sh">./space -a bonjour.galaxy hola.txt hi.txt</kbd>
Adding: hola.txt
Adding: hi.txt
<kbd is=3D"sh">./space -L bonjour.galaxy</kbd>
-rw-r--r--  8      6  hello.txt
-rw-r--r--  8      5  hola.txt
-rw-r--r--  8      3  hi.txt
</pre>

  <aside class=3D"hint">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          <code>space_main.c</code> calls
          the function <em>create_galaxy</em> in <code>space.c</code>
          when either of the <code>-c</code> or <code>-a</code> options
          are specified on the command line.

      </p></li><li>
        <p>
          Add code to <em>create_galaxy</em> in <code>space.c</code>.

      </p></li><li>
        <p>
          Use <cite><a title=3D"man 3 fopen" href=3D"https://manpages.debia=
n.org/jump?q=3Dfopen.3">fopen</a></cite> and <cite><a title=3D"man 3 fputc"=
 href=3D"https://manpages.debian.org/jump?q=3Dfputc.3">fputc</a></cite> to =
create the new galaxy.

      </p></li><li>
        <p>
          In our <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/topic/=
files/code/slides">lectures on files</a>
          we covered obtaining file metadata including its size and mode (p=
ermissions) in the <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/topi=
c/files/code/stat.c">stat.c</a> example.

    </p></li></ul>
  </aside>

  <aside class=3D"note">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          You must add/store files in the order they are given.

    </p></li></ul>
  </aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h3 id=3D"subset-3">Subset 3</h3>
  <p>
    To complete subset 3,
    you need to implement code that can
  </p><ul>
    <li> create a galaxy from a list of files and directories,
    </li><li> extract directories from a galaxy, and
    </li><li> manipulate 6-bit and 7-bit storage formats.
  </li></ul>

  <h4>Subset 3: Create a galaxy from a list of files and directories</h4>
  <p>
    Given the <code>-c</code> command-line argument, <em>space</em> should
    be able to add files in sub-directories.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh_comment">Create a galaxy called a.galaxy =
with the file "hello.txt" that is contained within 2 levels of directories.=
</kbd>
<kbd is=3D"sh">./space -c a.galaxy examples/2_files.d/hello.txt </kbd>
Adding: examples
Adding: examples/2_files.d
Adding: examples/2_files.d/hello.txt
</pre>

  <p>
    If a directory is specified when creating a galaxy,
    <em>space</em> should add the entire directory tree to the galaxy.

</p><pre is=3D"tty"><kbd is=3D"sh_comment">Create a galaxy called a.galaxy =
with *all* the contents within the directory "3_files.subdirectory.d"</kbd>
<kbd is=3D"sh_comment">which is in the "examples" directory.</kbd>
<kbd is=3D"sh">./space -c a.galaxy examples/3_files.subdirectory.d</kbd>
Adding: examples
Adding: examples/3_files.subdirectory.d
Adding: examples/3_files.subdirectory.d/goodbye
Adding: examples/3_files.subdirectory.d/goodbye/last_goodbye.txt
Adding: examples/3_files.subdirectory.d/hello
Adding: examples/3_files.subdirectory.d/hello/hello.txt
Adding: examples/3_files.subdirectory.d/these_days.txt
</pre>

  <p>
    Given the <code>-L</code> command-line argument and a galaxy containing=
 directories,
    <em>space</em> should be able to list files and directories.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh">./space -L examples/1_file.subdirectory.=
galaxy </kbd>
drwxr-xr-x  8      0  hello
-rw-r--r--  8     56  hello/hello.txt
</pre>

  <aside class=3D"hint">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          In our <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/topic/=
files/slides">lectures on files</a>
          we covered listing a directory's contents in the <a href=3D"https=
://cgi.cse.unsw.edu.au/~dp1092/24T2/topic/files/code/list_directory.c">list=
_directory.c</a> example.

      </p></li><li>
        <p>
          Traversing a directory tree is challenging and can be done in sev=
eral ways.

    </p></li></ul>
  </aside>

  <aside class=3D"note">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          The space reference implementation will add subdirectories in alp=
habetical order.
          You do not need to match this behaviour:
          your implementation can add subdirectories in any order.

      </p></li><li>
        <p>
          If a file in a different directory is added to a galaxy, then
          the directories in the path need to be added to the galaxy.

    </p></li></ul>
  </aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h4>Subset 3: Extract directories from a galaxy</h4>
  <p>
    Given the <code>-x</code> command-line argument,
    and a galaxy containing directories,
    <em>space</em> should be able to extract files and directories.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh">./space -x examples/3_files.subdirectory=
.galaxy </kbd>
Creating directory: goodbye
Extracting: goodbye/last_goodbye.txt
Creating directory: hello
Extracting: hello/hello.txt
Extracting: these_days.txt
</pre>
  <p>

  </p><aside class=3D"hint">
    <ul class=3D"list-unstyled">

      <li>
        <p>
          In our <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/topic/=
files/slides">lectures on files</a>
          we covered creating a directory in the <a href=3D"https://cgi.cse=
.unsw.edu.au/~dp1092/24T2/topic/files/code/mkdir.c">mkdir.c</a> example

    </p></li></ul>
  </aside>

  <aside class=3D"note">
    <p>
      When extracting a galaxy with directories,
      the directory needs to be created if it does not already exist,
      and its permissions need to be set
      to those specified in the galaxy.
  </p></aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h4>Subset 3: Manipulate 6-bit and 7-bit storage formats</h4>
  <p>
    The <code>-7</code> and <code>-6</code> options
    allow stars to be created in 7-bit and 6-bit format.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh">./space -7 -c seven.galaxy hello.txt</kb=
d>
Adding: hello.txt
<kbd is=3D"sh">./space -L seven.galaxy</kbd>
-rw-r--r-- 7 6 hello.txt
<kbd is=3D"sh">./space -6 -c six.galaxy hola.txt hi.txt</kbd>
Adding: hola.txt
Adding: hi.txt
<kbd is=3D"sh">./space -L six.galaxy</kbd>
-rw-r--r--  6      5  hola.txt
-rw-r--r--  6      3  hi.txt
</pre>

  <p>
    It is possible for galaxies to contain stars in multiple formats.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh">./space -a mixed.galaxy hello.txt</kbd>
Adding: hello.txt
<kbd is=3D"sh">./space -L mixed.galaxy</kbd>
-rw-r--r--  8      6  hello.txt
<kbd is=3D"sh">./space -7 -a mixed.galaxy hi.txt</kbd>
Adding: hi.txt
<kbd is=3D"sh">./space -L mixed.galaxy</kbd>
-rw-r--r--  8      6  hello.txt
-rw-r--r--  7      3  hi.txt
<kbd is=3D"sh">./space -6 -a mixed.galaxy hola.txt</kbd>
Adding: hola.txt
<kbd is=3D"sh">./space -L mixed.galaxy</kbd>
-rw-r--r--  8      6  hello.txt
-rw-r--r--  7      3  hi.txt
-rw-r--r--  6      5  hola.txt
</pre>

  <p>
    Your code should handle creating, listing, checking, and extracting gal=
axies in 7-bit and 6-bit format.

  </p><p>
    Your code should produce an error if asked to create a star
    containing bytes which cannot be encoded in the specified format.
    For example:

</p><pre is=3D"tty"><kbd is=3D"sh">echo Hello &gt;Hello.txt</kbd>
<kbd is=3D"sh">./space -6 -c broken.galaxy Hello.txt</kbd>
error: byte 0x48 can not be represented in 6-bit format
</pre>

  <aside class=3D"hint">
    <p>
      The functions <em>galaxy_to_6_bit</em> and <em>galaxy_from_6_bit</em>
      in <code>space_6_bit.c</code> convert 8-bit values to and from 6-bit =
format.
  </p></aside>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h2 id=3D"handling-errors">Handling Errors</h2>

  <p>
    Error checking is an important part of this assignment.
    Automarking will test error handling.

  </p><p>
    Error messages should be one line (only) and be written to <code>stderr=
</code> (not <code>stdout</code>).

  </p><p>
    <em>space</em> should <code>exit</code> with status 1 after an error.

  </p><p>
    <em>space</em> should check all file operations for errors.

  </p><p>
    As much as possible match the reference implementation error messages e=
xactly.

  </p><p>
    The reference implementation uses <cite><a title=3D"man 3 perror" href=
=3D"https://manpages.debian.org/jump?q=3Dperror.3">perror</a></cite> to rep=
ort errors
    from file operations and other system calls.

  </p><p>
    It is not necessary to remove files and directories already created or =
partially created
    when an error occurs.

  </p><p>
    You may extract a file or directory from star before
    determining if the star hash is correct.

  </p><p>
    You can extract previous file or directory from a star.

  </p><p>
    Where multiple errors messages could be produced, for example,
    if two non-existent files are specified to be added to a galaxy,
    <em>space</em> may produce any one of the error messages.


    <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  </p><h3 id=3D"reference-implementation">Reference implementation</h3>
  <p>
    A reference implementation is
    a common, efficient, and effective method
    to provide or define an operational specification;
    and it's something you will likely work with
    after you leave UNSW.

  </p><p>
    We've provided a reference implementation,
    <code>1092 space</code>,
    which you can use to find
    the correct outputs and behaviours for any input:

</p><pre is=3D"tty"><kbd is=3D"sh">1092 space -L examples/tiny.6-bit.galaxy=
</kbd>
-rw-r--r--  6      0  a
</pre>

  <p>
    Every concrete example shown below is runnable using the reference impl=
ementation;
    run <code>1092 space</code> instead of <code>./space</code>.

  </p><p>
    Where any aspect of this assignment
    is undefined in this specification,
    you should match the behaviour
    exhibited by the reference implementation.
    Discovering and matching
    the reference implementation's behaviour
    is deliberately a part of this assignment.

  </p><p>
    If you discover what you believe to be
    a bug in the reference implementation,
    please report it in the class forum.
    If it is a bug, we may fix the bug;
    or otherwise indicate that
    you do not need to match
    the reference implementation's behaviour
    in that specific case.


    <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  </p><h2 id=3D"galaxy-format">The galaxy and star format</h2>

  <p>
    galaxies must follow exactly the format
    produced by the reference implementation.

  </p><p>
    A galaxy consists of a sequence of one or more stars.
    Each star contains the information about one file or directory.

  </p><p>
    The first byte of a galaxy file is the first byte of the first star.
    That star is immediately followed by either another star,
    or by the end of the galaxy file.

   =20
  </p><table class=3D"table table-sm table-striped">
    <thead>
      <tr>
        <th>name
        </th><th>length
        </th><th>type
        </th><th>description
      </th></tr>
    </thead>
    <tbody>
      <tr>
        <th scope=3D"row">magic number
        </th><td>1&nbsp;<abbr title=3D"byte">B</abbr>
   =20
        </td><td>unsigned, 8-bit, little-endian
        </td><td>byte 0 in every star must be
          0x63 (ASCII <code>'c'</code>)

      </td></tr><tr>
        <th scope=3D"row">star format
        </th><td>1&nbsp;<abbr title=3D"byte">B</abbr>
   =20
        </td><td>unsigned, 8-bit, little-endian
        </td><td>byte 1 in every star must be one of 0x36, 0x37, 0x38
          (ASCII <code>'6'</code>, <code>'7'</code>, <code>'8'</code>)

      </td></tr><tr>
        <th scope=3D"row">permissions
        </th><td>10&nbsp;<abbr title=3D"byte">B</abbr>
   =20
        </td><td>characters
        </td><td>bytes 2=E2=80=9411 are the type and permissions as a
          <cite><a title=3D"man 1 ls" href=3D"https://manpages.debian.org/j=
ump?q=3Dls.1">ls</a></cite>-like character array;
          e.g., <code>"-rwxr-xr-x"</code>

      </td></tr><tr>
        <th scope=3D"row">pathname length
        </th><td>2&nbsp;<abbr title=3D"byte">B</abbr>
   =20
        </td><td>unsigned, 16-bit, little-endian
        </td><td>bytes 12=E2=80=9413 are an unsigned 2-byte (16-bit)
          little-endian integer, giving the length of

      </td></tr><tr>
        <th scope=3D"row">pathname
        </th><td><var>pathname-length</var>
        </td><td>characters
        </td><td>the filename of the object in this star.

      </td></tr><tr>
        <th scope=3D"row">content length
        </th><td>6&nbsp;<abbr title=3D"byte">B</abbr>
   =20
        </td><td>unsigned, 48-bit, little-endian
        </td><td>the next bytes are an unsigned 6-byte (48-bit)
          little-endian integer giving the length of the
          file that was encoded to give

      </td></tr><tr>
        <th scope=3D"row">content
        </th><td><var>content-length</var> for 8-bit format, see below for =
other formats
        </td><td>bytes
        </td><td>the data of the object in this star.

      </td></tr><tr>
        <th scope=3D"row">hash
        </th><td>1&nbsp;<abbr title=3D"byte">B</abbr>
   =20
        </td><td>unsigned, 8-bit, little-endian
        </td><td>the last byte of a star is a star-hash
          of all bytes of this star except this byte.
    </td></tr></tbody>
  </table>


  <h3 id=3D"star-content-encodings-subset-3-only">star content encodings (S=
ubset 3 only)</h3>
  <ul>
    <li>
      <p>
        <strong>8-bit format (star format =3D=3D 0x38</strong>
        <em>contents</em> is an array of bytes,
        which are exactly equivalent to
        the bytes in the original file.

    </p></li><li>
      <p>
        <strong>7-bit format (star format =3D=3D 0x37)</strong>
        <em>contents</em> is an array of bytes
        representing packed seven-bit values,
        with the trailing bits set to zero.
        Every byte of the original file
        is taken as a seven-bit value,
        and packed as described below.
        This format can store any seven bit value =E2=80=94
        so, for example, any byte containing valid ASCII can be stored.
      </p><p>
        This format needs <span class=3D"MathJax_Preview" style=3D"color: i=
nherit;"></span><span id=3D"MathJax-Element-1-Frame" class=3D"mjx-chtml Mat=
hJax_CHTML" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3=
.org/1998/Math/MathML&quot;><mo fence=3D&quot;false&quot; stretchy=3D&quot;=
false&quot;>&amp;#x2308;</mo><mo stretchy=3D&quot;false&quot;>(</mo><mn>7.0=
</mn><mrow class=3D&quot;MJX-TeXAtom-ORD&quot;><mo>/</mo></mrow><mn>8</mn><=
mo stretchy=3D&quot;false&quot;>)</mo><mo>&amp;#x2217;</mo><mtext>content-l=
ength</mtext><mo fence=3D&quot;false&quot; stretchy=3D&quot;false&quot;>&am=
p;#x2309;</mo></math>" role=3D"presentation" style=3D"font-size: 113%; posi=
tion: relative;"><span id=3D"MJXc-Node-1" class=3D"mjx-math" aria-hidden=3D=
"true"><span id=3D"MJXc-Node-2" class=3D"mjx-mrow"><span id=3D"MJXc-Node-3"=
 class=3D"mjx-mo"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding=
-top: 0.445em; padding-bottom: 0.611em;">=E2=8C=88</span></span><span id=3D=
"MJXc-Node-4" class=3D"mjx-mo"><span class=3D"mjx-char MJXc-TeX-main-R" sty=
le=3D"padding-top: 0.445em; padding-bottom: 0.611em;">(</span></span><span =
id=3D"MJXc-Node-5" class=3D"mjx-mn"><span class=3D"mjx-char MJXc-TeX-main-R=
" style=3D"padding-top: 0.39em; padding-bottom: 0.39em;">7.0</span></span><=
span id=3D"MJXc-Node-6" class=3D"mjx-texatom"><span id=3D"MJXc-Node-7" clas=
s=3D"mjx-mrow"><span id=3D"MJXc-Node-8" class=3D"mjx-mo"><span class=3D"mjx=
-char MJXc-TeX-main-R" style=3D"padding-top: 0.445em; padding-bottom: 0.611=
em;">/</span></span></span></span><span id=3D"MJXc-Node-9" class=3D"mjx-mn"=
><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: 0.39em; pad=
ding-bottom: 0.39em;">8</span></span><span id=3D"MJXc-Node-10" class=3D"mjx=
-mo"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: 0.445em=
; padding-bottom: 0.611em;">)</span></span><span id=3D"MJXc-Node-11" class=
=3D"mjx-mo MJXc-space2"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"p=
adding-top: 0.169em; padding-bottom: 0.335em;">=E2=88=97</span></span><span=
 id=3D"MJXc-Node-12" class=3D"mjx-mtext MJXc-space2"><span class=3D"mjx-cha=
r MJXc-TeX-main-R" style=3D"padding-top: 0.39em; padding-bottom: 0.556em;">=
content-length</span></span><span id=3D"MJXc-Node-13" class=3D"mjx-mo"><spa=
n class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: 0.445em; padding=
-bottom: 0.611em;">=E2=8C=89</span></span></span></span><span class=3D"MJX_=
Assistive_MathML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/19=
98/Math/MathML"><mo fence=3D"false" stretchy=3D"false">=E2=8C=88</mo><mo st=
retchy=3D"false">(</mo><mn>7.0</mn><mrow class=3D"MJX-TeXAtom-ORD"><mo>/</m=
o></mrow><mn>8</mn><mo stretchy=3D"false">)</mo><mo>=E2=88=97</mo><mtext>co=
ntent-length</mtext><mo fence=3D"false" stretchy=3D"false">=E2=8C=89</mo></=
math></span></span> bytes.
        7-bit format is used only in subset 3.

    </p></li><li>
      <p>
        <strong>6-bit format (star format =3D=3D 0x36)</strong>
        <em>contents</em> is an array of bytes of packed six-bit values
        where the trailing bits in the last byte are zero,
        and which are translated using the functions <em>galaxy_to_6_bit</e=
m> and <em>galaxy_from_6_bit</em> in
        <em>space_6_bit.c</em>.
      </p><p>
        This format cannot store all ASCII values, for example upper case l=
etters can't be stored in 6-bit format.
      </p><p>
        This format needs <span class=3D"MathJax_Preview" style=3D"color: i=
nherit;"></span><span id=3D"MathJax-Element-2-Frame" class=3D"mjx-chtml Mat=
hJax_CHTML" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3=
.org/1998/Math/MathML&quot;><mo fence=3D&quot;false&quot; stretchy=3D&quot;=
false&quot;>&amp;#x2308;</mo><mo stretchy=3D&quot;false&quot;>(</mo><mn>6.0=
</mn><mrow class=3D&quot;MJX-TeXAtom-ORD&quot;><mo>/</mo></mrow><mn>8</mn><=
mo stretchy=3D&quot;false&quot;>)</mo><mo>&amp;#x2217;</mo><mtext>content-l=
ength</mtext><mo fence=3D&quot;false&quot; stretchy=3D&quot;false&quot;>&am=
p;#x2309;</mo></math>" role=3D"presentation" style=3D"font-size: 113%; posi=
tion: relative;"><span id=3D"MJXc-Node-14" class=3D"mjx-math" aria-hidden=
=3D"true"><span id=3D"MJXc-Node-15" class=3D"mjx-mrow"><span id=3D"MJXc-Nod=
e-16" class=3D"mjx-mo"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"pa=
dding-top: 0.445em; padding-bottom: 0.611em;">=E2=8C=88</span></span><span =
id=3D"MJXc-Node-17" class=3D"mjx-mo"><span class=3D"mjx-char MJXc-TeX-main-=
R" style=3D"padding-top: 0.445em; padding-bottom: 0.611em;">(</span></span>=
<span id=3D"MJXc-Node-18" class=3D"mjx-mn"><span class=3D"mjx-char MJXc-TeX=
-main-R" style=3D"padding-top: 0.39em; padding-bottom: 0.39em;">6.0</span><=
/span><span id=3D"MJXc-Node-19" class=3D"mjx-texatom"><span id=3D"MJXc-Node=
-20" class=3D"mjx-mrow"><span id=3D"MJXc-Node-21" class=3D"mjx-mo"><span cl=
ass=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: 0.445em; padding-bot=
tom: 0.611em;">/</span></span></span></span><span id=3D"MJXc-Node-22" class=
=3D"mjx-mn"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: =
0.39em; padding-bottom: 0.39em;">8</span></span><span id=3D"MJXc-Node-23" c=
lass=3D"mjx-mo"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-t=
op: 0.445em; padding-bottom: 0.611em;">)</span></span><span id=3D"MJXc-Node=
-24" class=3D"mjx-mo MJXc-space2"><span class=3D"mjx-char MJXc-TeX-main-R" =
style=3D"padding-top: 0.169em; padding-bottom: 0.335em;">=E2=88=97</span></=
span><span id=3D"MJXc-Node-25" class=3D"mjx-mtext MJXc-space2"><span class=
=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: 0.39em; padding-bottom:=
 0.556em;">content-length</span></span><span id=3D"MJXc-Node-26" class=3D"m=
jx-mo"><span class=3D"mjx-char MJXc-TeX-main-R" style=3D"padding-top: 0.445=
em; padding-bottom: 0.611em;">=E2=8C=89</span></span></span></span><span cl=
ass=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http://ww=
w.w3.org/1998/Math/MathML"><mo fence=3D"false" stretchy=3D"false">=E2=8C=88=
</mo><mo stretchy=3D"false">(</mo><mn>6.0</mn><mrow class=3D"MJX-TeXAtom-OR=
D"><mo>/</mo></mrow><mn>8</mn><mo stretchy=3D"false">)</mo><mo>=E2=88=97</m=
o><mtext>content-length</mtext><mo fence=3D"false" stretchy=3D"false">=E2=
=8C=89</mo></math></span></span> bytes.
  </p></li></ul>
  7-bit and 6-bit format is used only in subset 3.


  <h3 id=3D"packed-n-bit-encoding-subset-3-only">Packed <var>n</var>-bit en=
coding (Subset 3 only)</h3>
  <p>
    We often store smaller values inside larger types.
    For example, the integer 42 only needs six bits;
    but we often will store it in a full thirty-two-bit integer,
    wasting many bits of zeroes.
    Assuming we know how many bits the value needs,
    we could only store the relevant bits.

  </p><p>
    For example, let's say we have three seven-bit values <em>a</em>, <em>b=
</em>, <em>c</em>,
    made up of arbitrary bit-strings, and stored in eight-bit variables
  </p><ul class=3D"list-unstyled">
    <li> a: <code>0b0<var>AAA</var>_<var>AAAA</var></code>,
    </li><li> b: <code>0b0<var>BBB</var>_<var>BBBB</var></code>,
    </li><li> c: <code>0b0<var>CCC</var>_<var>CCCC</var></code>,
  </li></ul>
  then a packed seven-bit encoding of these values in order would be:
<pre>0b<var>AAAA</var>_<var>AAAB</var>_<var>BBBB</var>_<var>BBCC</var>_<var=
>CCCC</var>_<var>C</var>???
</pre>
  <p>
    However, we have a problem: what happens to the trailing bits, which
    don't have a value? Note that we've defined all trailing bits to be
    zero above, which would here give:
</p><pre>0b<var>AAAA</var>_<var>AAAB</var>_<var>BBBB</var>_<var>BBCC</var>_=
<var>CCCC</var>_<var>C</var>000
</pre>


  <h3 id=3D"inspecting-galaxies-and-stars">Inspecting galaxies and stars</h=
3>
  <p>
    The <cite><a title=3D"man 1 hexdump" href=3D"https://manpages.debian.or=
g/jump?q=3Dhexdump.1">hexdump</a></cite> utility
    can show the individual bytes of a file.
    We can use this to inspect galaxies and stars.

  </p><p>
    For example, here is a galaxy,
    made up of two stars.

</p><pre is=3D"tty"><kbd is=3D"sh">hexdump -vC examples/2_files.galaxy</kbd=
>
00000000 63 38 2d 72 77 2d 72 2d 2d 72 2d 2d 09 00 68 65 |c8-rw-r--r--..he|
00000010 6c 6c 6f 2e 74 78 74 38 00 00 00 00 00 48 65 6c |llo.txt8.....Hel|
00000020 6c 6f 20 43 4f 4d 50 31 35 32 31 0a 49 20 68 6f |lo DPST1092.I ho|
00000030 70 65 20 79 6f 75 20 61 72 65 20 65 6e 6a 6f 79 |pe you are enjoy|
00000040 69 6e 67 20 74 68 69 73 20 61 73 73 69 67 6e 6d |ing this assignm|
00000050 65 6e 74 2e 0a 2d 63 38 2d 72 77 2d 72 2d 2d 72 |ent..-c8-rw-r--r|
00000060 2d 2d 10 00 6c 61 73 74 5f 67 6f 6f 64 62 79 65 |--..last_goodbye|
00000070 2e 74 78 74 a6 00 00 00 00 00 54 68 69 73 20 69 |.txt......This i|
00000080 73 20 6f 75 72 20 6c 61 73 74 20 67 6f 6f 64 62 |s our last goodb|
00000090 79 65 0a 49 20 68 61 74 65 20 74 6f 20 66 65 65 |ye.I hate to fee|
000000a0 6c 20 74 68 65 20 6c 6f 76 65 20 62 65 74 77 65 |l the love betwe|
000000b0 65 6e 20 75 73 20 64 69 65 0a 42 75 74 20 69 74 |en us die.But it|
000000c0 27 73 20 6f 76 65 72 0a 4a 75 73 74 20 68 65 61 |'s over.Just hea|
000000d0 72 20 74 68 69 73 20 61 6e 64 20 74 68 65 6e 20 |r this and then |
000000e0 49 27 6c 6c 20 67 6f 0a 59 6f 75 20 67 61 76 65 |I'll go.You gave|
000000f0 20 6d 65 20 6d 6f 72 65 20 74 6f 20 6c 69 76 65 | me more to live|
00000100 20 66 6f 72 0a 4d 6f 72 65 20 74 68 61 6e 20 79 | for.More than y|
00000110 6f 75 27 6c 6c 20 65 76 65 72 20 6b 6e 6f 77 0a |ou'll ever know.|
00000120 60 |`|
00000121
</pre>

  <p>
    Each line of <cite><a title=3D"man 1 hexdump" href=3D"https://manpages.=
debian.org/jump?q=3Dhexdump.1">hexdump</a></cite> output is in three groups=
:

  </p><ul>
    <li>
      <p>
        the <strong>address column</strong>:
        this starts at <code>0x00000000</code>,
        and increases by 0x10 (or 16 in base 10) each line;

    </p></li><li>
      <p>
        the <strong>data columns</strong>:
        after the address,
        we get (up to) 16 two-digit hexadecimal values,
        grouped into two blocks of eight values each,
        which represents the actual data of the file, and

    </p></li><li>
      <p>
        the <strong>human readable stripe</strong>:
        at the very end of each line,
        between the vertical bars (<code>|</code>)
        is the human readable version of the bytes preceding,
        or a <code>'.'</code> if the byte wouldn't ordinarily be visible.
  </p></li></ul>

  <p>
    You could also use the
    <cite><a title=3D"man 1 hd" href=3D"https://manpages.debian.org/jump?q=
=3Dhd.1">hd</a></cite>,
    <cite><a title=3D"man 1 od" href=3D"https://manpages.debian.org/jump?q=
=3Dod.1">od</a></cite>, or
    <cite><a title=3D"man 1 xxd" href=3D"https://manpages.debian.org/jump?q=
=3Dxxd.1">xxd</a></cite> utilities instead of <cite><a title=3D"man 1 hexdu=
mp" href=3D"https://manpages.debian.org/jump?q=3Dhexdump.1">hexdump</a></ci=
te> .

    Also provided for the assignment is <b>1092 show-galaxy</b> which
    prints the contents of a galaxy in a more structured way, e.g.:

<!-- TODO: fix -->
</p><pre is=3D"tty"><kbd is=3D"sh">1092 show-galaxy examples/2_files.galaxy=
</kbd>
Field name   Offset        Bytes                           ASCII/Numeric
------------------------------------------------------------------------
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D Star   0 =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
magic        0x00000000    63                             chr c
format       0x00000001    38                             chr 8
mode         0x00000002    2d 72 77 2d 72 2d 2d 72 2d 2d  chr -rw-r--r--
path len     0x0000000c    09 00                          dec 9
pathname     0x0000000e    68 65 6c 6c 6f 2e 74 78 74     chr hello.txt
content len  0x00000017    38 00 00 00 00 00              dec 56
content      0x0000001d    48 65 6c 6c 6f 20 43 4f 4d 50  chr Hello DPST
             0x00000027    31 35 32 31 0a 49 20 68 6f 70  chr 1092.I hop
             0x00000031    65 20 79 6f 75 20 61 72 65 20  chr e you are
             0x0000003b    65 6e 6a 6f 79 69 6e 67 20 74  chr enjoying t
             0x00000045    68 69 73 20 61 73 73 69 67 6e  chr his assign
             0x0000004f    6d 65 6e 74 2e 0a              chr ment..
hash         0x00000055    2d                             dec 45
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D Star   1 =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
magic        0x00000056    63                             chr c
format       0x00000057    38                             chr 8
mode         0x00000058    2d 72 77 2d 72 2d 2d 72 2d 2d  chr -rw-r--r--
path len     0x00000062    10 00                          dec 16
pathname     0x00000064    6c 61 73 74 5f 67 6f 6f 64 62  chr last_goodb
             0x0000006e    79 65 2e 74 78 74              chr ye.txt
content len  0x00000074    a6 00 00 00 00 00              dec 166
content      0x0000007a    54 68 69 73 20 69 73 20 6f 75  chr This is ou
             0x00000084    72 20 6c 61 73 74 20 67 6f 6f  chr r last goo
             0x0000008e    64 62 79 65 0a 49 20 68 61 74  chr dbye.I hat
             0x00000098    65 20 74 6f 20 66 65 65 6c 20  chr e to feel
             0x000000a2    74 68 65 20 6c 6f 76 65 20 62  chr the love b
             0x000000ac    65 74 77 65 65 6e 20 75 73 20  chr etween us
             0x000000b6    64 69 65 0a 42 75 74 20 69 74  chr die.But it
             0x000000c0    27 73 20 6f 76 65 72 0a 4a 75  chr 's over.Ju
             0x000000ca    73 74 20 68 65 61 72 20 74 68  chr st hear th
             0x000000d4    69 73 20 61 6e 64 20 74 68 65  chr is and the
             0x000000de    6e 20 49 27 6c 6c 20 67 6f 0a  chr n I'll go.
             0x000000e8    59 6f 75 20 67 61 76 65 20 6d  chr You gave m
             0x000000f2    65 20 6d 6f 72 65 20 74 6f 20  chr e more to
             0x000000fc    6c 69 76 65 20 66 6f 72 0a 4d  chr live for.M
             0x00000106    6f 72 65 20 74 68 61 6e 20 79  chr ore than y
             0x00000110    6f 75 27 6c 6c 20 65 76 65 72  chr ou'll ever
             0x0000011a    20 6b 6e 6f 77 0a              chr  know.
hash         0x00000120    60                             dec 96
</pre>

  <h3 id=3D"6-bit-format-subset-3-only">6-bit format (Subset 3 only)</h3>
  <p>
    star 6-bit format defines a subset of 64 8-bit values (bytes) to have a=
 six-bit encoding; those six bits are
    then stored packed.

  </p><p>
    The remaining 192 8-bit values can not be encoded in 6-bit format.

  </p><p>
    The functions <em>galaxy_to_6_bit</em> and <em>galaxy_from_6_bit</em> i=
n <em>space_6_bit.c</em>
    to convert 8-bit values to and from 6-bit format.

  </p><p>
    You can find the mapping by reading the code in <em>space_6_bit.c</em>.


    <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  </p><h2 id=3D"star-hash">The star hash (Subsets 1, 2, 3)</h2>
  <p>
    Each star ends with a <em>hash</em>
    (sometimes referred to as a <em>digest</em>)
    which calculated from the other values of the star.
    This allows us to detect if
    any bytes of the galaxy have changed,
    for example by disk or network errors.

  </p><p>
    The <code>galaxy_hash()</code> function
    makes one step of computation
    of the hash of a sequence of bytes:

    </p><div class=3D"highlight"><pre><span></span><span class=3D"kt">uint8=
_t</span><span class=3D"w"> </span><span class=3D"nf">galaxy_hash</span><sp=
an class=3D"p">(</span><span class=3D"kt">uint8_t</span><span class=3D"w"> =
</span><span class=3D"n">current_hash_value</span><span class=3D"p">,</span=
><span class=3D"w"> </span><span class=3D"kt">uint8_t</span><span class=3D"=
w"> </span><span class=3D"n">byte_value</span><span class=3D"p">)</span><sp=
an class=3D"w"> </span><span class=3D"p">{</span>
<span class=3D"w">    </span><span class=3D"k">return</span><span class=3D"=
w"> </span><span class=3D"p">((</span><span class=3D"n">current_hash_value<=
/span><span class=3D"w"> </span><span class=3D"o">*</span><span class=3D"w"=
> </span><span class=3D"mi">33</span><span class=3D"p">)</span><span class=
=3D"w"> </span><span class=3D"o">&amp;</span><span class=3D"w"> </span><spa=
n class=3D"mh">0xff</span><span class=3D"p">)</span><span class=3D"w"> </sp=
an><span class=3D"o">^</span><span class=3D"w"> </span><span class=3D"n">by=
te_value</span><span class=3D"p">;</span>
<span class=3D"p">}</span>
<span class=3D"w">    </span>
</pre></div>


  <p>
    Given the hash value of the sequence up to this byte,
    and the value of this byte it calculates the new hash value.

  </p><p>
    If we create a galaxy of a single one-byte file, like this:

</p><pre is=3D"tty"><kbd is=3D"sh">echo &gt;a</kbd>
<kbd is=3D"sh">1092space -c a.galaxy a</kbd>
</pre>

  <p>
    We can then inspect the galaxy,
    and see its hash is <code>0x15</code>.

</p><pre is=3D"tty"><kbd is=3D"sh">hexdump -Cv a.galaxy</kbd>
00000000 63 38 2d 72 77 2d 72 2d 2d 72 2d 2d 01 00 61 01 |c8-rw-r--r--..a.|
00000010 00 00 00 00 00 0a <mark>15</mark> |......<mark>.</mark>|
00000017
</pre>

  <p>
    Here's the sequence of calls that calculated that value:

   =20
</p><pre>galaxy_hash(0x00, 0x63) =3D 0x63
galaxy_hash(0x63, 0x38) =3D 0xfb
galaxy_hash(0xfb, 0x2d) =3D 0x76
galaxy_hash(0x76, 0x72) =3D 0x44
galaxy_hash(0x44, 0x77) =3D 0xb3
galaxy_hash(0xb3, 0x2d) =3D 0x3e
galaxy_hash(0x3e, 0x72) =3D 0x8c
galaxy_hash(0x8c, 0x2d) =3D 0x21
galaxy_hash(0x21, 0x2d) =3D 0x6c
galaxy_hash(0x6c, 0x72) =3D 0x9e
galaxy_hash(0x9e, 0x2d) =3D 0x73
galaxy_hash(0x73, 0x2d) =3D 0xfe
galaxy_hash(0xfe, 0x01) =3D 0xbf
galaxy_hash(0xbf, 0x00) =3D 0x9f
galaxy_hash(0x9f, 0x61) =3D 0x1e
galaxy_hash(0x1e, 0x01) =3D 0xdf
galaxy_hash(0xdf, 0x00) =3D 0xbf
galaxy_hash(0xbf, 0x00) =3D 0x9f
galaxy_hash(0x9f, 0x00) =3D 0x7f
galaxy_hash(0x7f, 0x00) =3D 0x5f
galaxy_hash(0x5f, 0x00) =3D 0x3f
galaxy_hash(0x3f, 0x0a) =3D 0x15
</pre>


  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <h2 id=3D"assumptions-clarifications">Assumptions and Clarifications</h2>

 =20
 =20

    <p>
      Like all good programmers,
      you should make as few assumptions as possible.
      If in doubt, match the output of the reference implementation.

    </p><ul>
      <li>
        <p>
          Your submitted code must be a single C program only.
          You may not submit code in other languages.

      </p></li><li>
        <p>
          You can call functions from the C standard library
          available by default on CSE Linux systems:
          including, <abbr>e.g.</abbr>,
          <code>stdio.h</code>,
          <code>stdlib.h</code>,
          <code>string.h</code>,
          <code>math.h</code>,
          <code>assert.h</code>.

      </p></li><li>
        <p>
          We will compile your code with <code>dcc</code> when marking.
          Run-time errors from illegal or invalid C
          will cause your code to fail automarking
          (and will likely result in you losing marks).

      </p></li><li>
        <p>
          Your program must not require extra compile options.
          It must compile successfully with:
</p><pre is=3D"tty"><kbd is=3D"sh">dcc *.c -o space</kbd>
</pre>

      </li><li>
        <p>
          You may not use functions from other libraries.
          In other words, you cannot use the dcc <code>-l</code> flag.

      </p></li><li>
        <p>
          If your program prints debugging output,
          it will fail automarking tests.
          Make sure you disable any debugging output before submission.

      </p></li><li>
        <p>
          You may not create or use temporary files.

      </p></li><li>
        <p>
          You may not create subprocesses:
          you may not use
          <cite><a title=3D"man 3 posix_spawn" href=3D"https://manpages.deb=
ian.org/jump?q=3Dposix_spawn.3">posix_spawn</a></cite>, <cite><a title=3D"m=
an 3 posix_spawnp" href=3D"https://manpages.debian.org/jump?q=3Dposix_spawn=
p.3">posix_spawnp</a></cite>,
          <cite><a title=3D"man 3 system" href=3D"https://manpages.debian.o=
rg/jump?q=3Dsystem.3">system</a></cite>,
          <cite><a title=3D"man 3 popen" href=3D"https://manpages.debian.or=
g/jump?q=3Dpopen.3">popen</a></cite>,
          <cite><a title=3D"man 2 fork" href=3D"https://manpages.debian.org=
/jump?q=3Dfork.2">fork</a></cite>, <cite><a title=3D"man 2 vfork" href=3D"h=
ttps://manpages.debian.org/jump?q=3Dvfork.2">vfork</a></cite>,
          <cite><a title=3D"man 2 clone" href=3D"https://manpages.debian.or=
g/jump?q=3Dclone.2">clone</a></cite>,
          or any of the <code>exec*</code> family of functions,
          like <cite><a title=3D"man 2 execve" href=3D"https://manpages.deb=
ian.org/jump?q=3Dexecve.2">execve</a></cite>.

      </p></li><li>
        <p>
          You may assume that the length
          of a galaxy is less than the maximum
          value supported by a <code>long</code>.

      </p></li><li>
        <p>
          <em>space</em> only has to handle ordinary files and directories.
        </p><p>
          <em>space</em> does not have to handle symbolic links, devices or=
 other special files.
        </p><p>
          <em>space</em> will not be given directories containing symbolic =
links, devices or other special files.
        </p><p>
          <em>space</em> does not have to handle hard links.

      </p></li><li>
        <p>
          If completing a <code>space</code> command would produce multiple=
 errors,
          you may produce any of the errors and stop.
        </p><p>
          In this case you do not have to produce the particular error that=
 the reference implementation does.

      </p></li><li>
        <p>
          If a star path name contains a directory then a star for the dire=
ctory
          will appear in the galaxy beforehand.
        </p><p>
          For example, if there is a star for the path name <code>a/b/file.=
txt</code> then
          there will be preceding stars for the directories <code>a</code> =
and <code>a/b</code>,
        </p><p>
          You may also assume the star for the directory specifies the dire=
ctory is writable.

      </p></li><li>
        <p>
          When adding an entire directory <small>(<a href=3D"https://cgi.cs=
e.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#subset-3">subset 3</=
a>)</small> to a galaxy you may add
          the directory contents in any order to the galaxy,
          after the directory star.
        </p><p>
          You do not have to match the order the reference implementation u=
ses.

      </p></li><li>
        <p>
          When a <code>space</code> command specifies adding files with a c=
ommon sub-directory.
          You may add a star for the sub-directory multiple times.
          For example, given this command:
</p><pre is=3D"tty"><kbd is=3D"sh">./space -c a.galaxy b/file1 b/file2</kbd=
>
</pre>
        You may add two (duplicate) stars for <code>b</code>.

      </li><li>
        <p>
          You can assume the path name of a galaxy being created with <code=
>-c</code>,
          will not also be added to the galaxy,
          and will not be in a directory being added to the galaxy.

      </p></li><li>
        <p>
          It is not necessary to check the hashes or magic numbers of stars=
 in subset 0.
          Subset 0 tests will only use valid stars.


      </p></li><li>
        <p>

          The reference implementation checks the magic number (first byte)=
, format and hash
          when listing (<code>-l</code> and <code>-L</code>) and extracting=
 (<code>-x</code>) galaxies
          and stops with an error message if they are are invalid, for exam=
ple:
        </p><p>
</p><pre is=3D"tty"><kbd is=3D"sh">./space -l examples/text_file.bad_hash.g=
alaxy</kbd>
error: incorrect star hash 0x2d should be 0x77
<kbd is=3D"sh">./space -L examples/text_file.bad_magic.galaxy</kbd>
error: incorrect first star byte: 0x39 should be 0x63
</pre>
        <p>
          This is very desirable behaviour and you can implement this in yo=
ur code.
          However it will not be tested with <code>-l</code>, <code>-L</cod=
e> and <code>-x</code> command line options
          to avoid problems in automarking.
        </p><p>
          Your code will only be tested with the <code>-C</code> option on =
galaxys with invalid hashes, magic numbers
          and formats




      </p></li><li>
        <p>
          It is not necessary to check the hashes or magic numbers in an ex=
isting galaxy when appending to it
          (<em>-a</em>).

    </p></li></ul>

    <p>
      If you need clarification on
      what you can and cannot use or do for this assignment,
      ask in the class forum.

    </p><p>
      You are required to submit
      intermediate versions of your assignment.
      See below for details.









</p><h2 id=3D"assessment" class=3D"mt-5">Assessment</h2>



<h3 id=3D"assessment--testing">Testing</h3>
<p>
When you think your program is working,
you can use <code>autotest</code>
to run some simple automated tests:
</p><p>

</p><pre is=3D"tty"><kbd is=3D"sh">1092 autotest space <var>[optionally: an=
y extra .c or .h files]</var></kbd>
</pre>
You can also run autotests for a specific subset. For example, to run all t=
ests from
subset 1:
<pre is=3D"tty"><kbd is=3D"sh">1092 autotest space subset1 <var>[optionally=
: any extra .c or .h files]</var></kbd>
</pre>
Some tests are more complex than others. If you are failing more than one t=
est,
you are encouraged to focus on solving the first of those failing tests. To=
 do so,
you can run a specific test by giving its name to the <code>autotest</code>=
 command:
<pre is=3D"tty"><kbd is=3D"sh">1092 autotest space test1_subset0 <var>[opti=
onally: any extra .c or .h files]</var></kbd>
</pre>





<p>
<code>1092 autotest</code> will not test everything.<br>
Always do your own testing.
</p><p>
Automarking will be run by the lecturer after the submission deadline,
using a superset of tests to those <code>autotest</code> runs for you.

</p><aside class=3D"warning">
<p>
Whilst we can detect errors have occurred,
it is often substantially harder
to automatically explain what that error was.
The errors from <code>1092 autotest</code>
will be less and less clear or useful than in labs.
You will need to do your own debugging and analysis.
</p></aside>



<h3 id=3D"assessment--submission">Submission</h3>
<p>
When you are finished working on the assignment,
you must submit your work by running <code>give</code>:


</p><pre is=3D"tty"><kbd is=3D"sh">give dp1092 ass2_space space.c <var>[oth=
er .c or .h files]</var></kbd>
</pre>


<p>
You must run <code>give</code> before <strong>Week 13 Monday    22:00:00</s=
trong>
to obtain the marks for this assignment.
Note that this is an individual exercise,
the work you submit with <code>give</code> must be entirely your own.

</p><p>
You can run <code>give</code> multiple times.<br>
Only your last submission will be marked.

</p><p>
If you are working at home, you may find it more convenient
to upload your work via
<a href=3D"https://cgi.cse.unsw.edu.au/~give/Student/give.php">give's web i=
nterface</a>.

</p><p>
You <em>cannot</em> obtain marks by emailing your code to tutors or lecture=
rs.

</p><p>
You can check your latest submission on CSE servers with:
</p><pre is=3D"tty"><kbd is=3D"sh">1092 classrun check ass2_space</kbd>
</pre>

<p>
You can check the files you have submitted <a href=3D"https://cgi.cse.unsw.=
edu.au/~dp1092/24T2/student/">here</a>.

</p><p>
Manual marking will be done by your tutor,
who will mark for style and readability,
as described in the <strong>Assessment</strong> section below.
After your tutor has assessed your work,
you can <a href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/student/">view =
your results here</a>;
The resulting mark will also be available
<a href=3D"https://cgi.cse.unsw.edu.au/~give/Student/sturec.php">via give's=
 web interface</a>.




</p><h3 id=3D"assessment--due-date" class=3D"mt-5">Due Date</h3>
<p>
This assignment is due <strong>Week 13 Monday    22:00:00</strong> (2024-07=
-29 22:00:00).
</p><p>
The UNSW standard late penalty for assessment is 5% per day for 5 days - th=
is is implemented hourly for this assignment.
</p><p>
Your assignment mark will be reduced by 0.2% for each hour (or part thereof=
) late past the submission deadline.
</p><p>
For example,
if an assignment worth 60% was submitted half an hour late,
it would be awarded 59.8%, whereas if it was submitted past 10 hours late,
it would be awarded 57.8%.
</p><p>
Beware - submissions 5 or more days late will receive zero marks.
This again is the UNSW standard assessment policy.



</p><h3 id=3D"assessment--assessment-scheme" class=3D"mt-5">Assessment Sche=
me</h3>
<p>
This assignment will contribute
<strong>15</strong> marks
to your final DPST1092 mark.

</p><p>
80% of the marks for assignment 2
will come from the performance of your code
on a large series of tests.

</p><p>
20% of the marks for assignment 2
will come from hand marking.
These marks will be awarded on the basis of
clarity, commenting, elegance and style.
In other words, you will be assessed on
how easy it is for a human to read and understand your program.


</p><p>
An indicative assessment scheme for performance follows.
The lecturer may vary the assessment scheme
after inspecting the assignment submissions,
but it is likely to be broadly similar to the following:

</p><table class=3D"table table-sm w-75 mx-auto">
<tbody>
<tr><th scope=3D"row">HD (90+%)
    </th><td>well documented code,<br>
        very readable code,<br>
        all stages fully working with support
        for directories.
</td></tr><tr><th scope=3D"row">DN (80+%)
    </th><td>some documentation in code,<br>
        readable code,<br>
        stage 1, 2 and 3 fully working.
</td></tr><tr><th scope=3D"row">CR (65%)
    </th><td>some documentation in code,<br>
        readable code,<br>
        stage 1 and 2 fully working.
</td></tr><tr><th scope=3D"row">PS (50%)
    </th><td>some documentation in code,<br>
        stage 1 fully working,<br>
        with readable code.
</td></tr><tr><th scope=3D"row">0%
    </th><td>knowingly providing your work to anyone <br>
        and it is subsequently submitted (by anyone).
</td></tr><tr><th scope=3D"row">0 FL for <br> DPST1092
    </th><td>submitting any other person's work; <br>
        this includes joint work.
</td></tr><tr><th scope=3D"row">academic <br> misconduct
    </th><td>submitting another person's work without their consent;<br>
        paying another person to do work for you.
</td></tr></tbody>
</table>=20

<p>
An indicative assessment scheme for style follows.
The lecturer may vary the assessment scheme
after inspecting the assignment submissions,
but it is likely to be broadly similar to the following:

</p><table class=3D"table table-sm w-75 mx-auto">
<tbody>
<tr><th scope=3D"row">100% for style
</th><td>perfect style
</td></tr><tr><th scope=3D"row">90% for style
</th><td>great style, almost all style characteristics perfect.
</td></tr><tr><th scope=3D"row">80% for style
</th><td>good style, one or two style characteristics not well done.
</td></tr><tr><th scope=3D"row">70% for style
</th><td>good style, a few style characteristics not well done.=20
</td></tr><tr><th scope=3D"row">60% for style
</th><td>ok style, an attempt at most style characteristics.=20
</td></tr><tr><th scope=3D"row">&lt;=3D 50% for style
</th><td>an attempt at style.=20
</td></tr></tbody></table>

<p>
An indicative style rubric follows:

</p><ul>
    <li>Formatting <strong>(6/20)</strong>:
    <ul>
        <li>Whitespace (<abbr>e.g.</abbr> <code>1 + 2</code> instead of <co=
de>1+2</code>)
        </li><li>Indentation (consistent, tabs or spaces are okay)
        </li><li>Line length (below 100 characters unless very exceptional)
        </li><li>Line breaks (using vertical whitespace to improve readabil=
ity)
    </li></ul>
    </li><li>Documentation <strong>(8/20)</strong>:
    <ul>
        <li>Header comment (with name, zID, description of program)
        </li><li>Function comments (above each function with a description)
        </li><li>Descriptive variable names (<abbr>e.g.</abbr> <code>char *=
home_directory</code> instead of <code>char *h</code>)
        </li><li>Descriptive function names (<abbr>e.g.</abbr> <code>get_ho=
me_directory</code> instead of <code>get_hd</code>)
        </li><li>Sensible commenting throughout the code (don't comment eve=
ry single line; leave comments when necessary)
    </li></ul>
    </li><li>Elegance <strong>(5/20)</strong>:
    <ul>
        <li>Does this code avoid redundancy? (<abbr>e.g.</abbr> <a target=
=3D"_blank" href=3D"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">=
Don't repeat yourself!</a>)
        </li><li>Are helper functions used to reduce complexity? (functions=
 should be small and simple where possible)
        </li><li>Are constants appropriately created and used? (magic numbe=
rs should be avoided)
    </li></ul>
    </li><li>Portability <strong>(1/20)</strong>:
    <ul>
        <li>Would this code be able to compile and behave as expected on ot=
her POSIX-compliant machines? (using standard libraries without platform-sp=
ecific code)
        </li><li>Does this code make any assumptions about the endianness o=
f the machine it is running on?</li>
    </ul>
</li></ul>

<p>
Note that the following penalties apply to your total mark for plagiarism:
</p><table class=3D"table table-sm w-75 mx-auto">
<tbody><tr><th scope=3D"row">0 for asst2
</th><td>knowingly providing your work to anyone <br>
    and it is subsequently submitted (by anyone).
</td></tr><tr><th scope=3D"row">0 FL for <br> DPST1092
</th><td>submitting any other person's work; this includes joint work.
</td></tr><tr><th scope=3D"row">academic <br> misconduct
</th><td>submitting another person's work without their consent;<br>
    paying another person to do work for you.
</td></tr></tbody>
</table>




<h3 id=3D"assessment--intermediate-versions-of-work" class=3D"mt-5">Interme=
diate Versions of Work</h3>
<p>
You are required to submit intermediate versions of your assignment.
</p><p>
Every time you work on the assignment
and make some progress
you should copy your work to your CSE account
and submit it using the <code>give</code> command below.
It is fine if intermediate versions do not compile
or otherwise fail submission tests.
Only the final submitted version of your assignment will be marked.



</p><h3 id=3D"assignment-conditions" class=3D"mt-5">Assignment Conditions</=
h3>
<ul>
<li><p>

<strong>Joint work</strong> is <strong>not permitted</strong> on this assig=
nment.
</p><p>
This is an individual assignment.
The work you submit must be entirely your own work:
submission of work even partly written by
any other person is not permitted.

</p><p>
Do not request help from anyone
other than the teaching staff of DPST1092 =E2=80=94
for example, in the course forum, or in help sessions.

</p><p>
Do not post your assignment code to the course forum.
The teaching staff can view code
you have recently submitted with give,
or recently autotested.

</p><p>
Assignment submissions are routinely examined
both automatically and manually
for work written by others.

</p><p>
<em>Rationale:</em>
this assignment is designed to
develop the individual skills needed
to produce an entire working program.
Using code written by, or taken from, other people
will stop you learning these skills.
Other courses focus on skills needed for working in a team.

</p></li><li><p>
</p><p>
The use of generative tools such as Github Copilot, ChatGPT, Google Bard
is <strong>not permitted</strong> on this assignment.

</p><p>
<em>Rationale:</em>
this assignment is designed to develop your understanding of basic concepts=
.
Using synthesis tools will stop you learning these fundamental concepts,
which will significantly impact your ability to complete future courses.

</p></li><li><p>
<strong>Sharing, publishing, or distributing</strong>
your assignment work is <strong>not permitted</strong>.

</p><p>
Do not provide or show your assignment work to any other person,
other than the teaching staff of DPST1092.
For example, do not message your work to friends.

</p><p>
Do not publish your assignment code via the Internet.
For example, do not place your assignment in a public GitHub repository.

</p><p>
<em>Rationale:</em>
by publishing or sharing your work,
you are facilitating other students using your work.
If other students find your assignment work
and submit part or all of it as their own work,
you may become involved in an academic integrity investigation.

</p></li><li><p>
<strong>Sharing, publishing, or distributing</strong>
your assignment work
after the completion of DPST1092
is <strong>not permitted</strong>.

</p><p>
For example, do not place your assignment in a public GitHub repository
after this offering of DPST1092 is over.

</p><p>
<em>Rationale:</em>
DPST1092 may reuse assignment themes
covering similar concepts and content.
If students in future terms find your assignment work
and submit part or all of it as their own work,
you may become involved in an academic integrity investigation.
</p></li></ul>

<p>
Violation of any of the above conditions
may result in an academic integrity investigation,
with possible penalties
up to and including a mark of 0 in DPST1092,
and exclusion from future studies at UNSW.
For more information,
read the <a href=3D"https://www.gs.unsw.edu.au/policy/documents/studentcode=
policy.pdf">UNSW Student Code</a>,
or contact your lecturer.



</p></div> <!-- big col -->
<div class=3D"d-none d-lg-block col-lg-2">
    <nav id=3D"toc" data-toggle=3D"toc"><ul class=3D"nav navbar-nav"><li><a=
 class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assign=
ments/ass2/index.html#contents">Contents</a></li><li><a class=3D"nav-link" =
href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.htm=
l#aims">Aims</a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw=
.edu.au/~dp1092/24T2/assignments/ass2/index.html#the-task">The Task</a><ul =
class=3D"nav navbar-nav"><li><a class=3D"nav-link" href=3D"https://cgi.cse.=
unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#getting-started">Getti=
ng Started</a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw.e=
du.au/~dp1092/24T2/assignments/ass2/index.html#subset-0">Subset 0</a></li><=
li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/a=
ssignments/ass2/index.html#subset-1">Subset 1</a></li><li><a class=3D"nav-l=
ink" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/inde=
x.html#subset-2">Subset 2</a></li><li><a class=3D"nav-link" href=3D"https:/=
/cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#subset-3">Sub=
set 3</a></li></ul></li><li><a class=3D"nav-link active" href=3D"https://cg=
i.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#handling-errors"=
>Handling Errors</a><ul class=3D"nav navbar-nav"><li><a class=3D"nav-link a=
ctive" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/in=
dex.html#reference-implementation">Reference implementation</a></li></ul></=
li><li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24=
T2/assignments/ass2/index.html#galaxy-format">The galaxy and star format</a=
><ul class=3D"nav navbar-nav"><li><a class=3D"nav-link" href=3D"https://cgi=
.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#star-content-enco=
dings-subset-3-only">star content encodings (Subset 3 only)</a></li><li><a =
class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignm=
ents/ass2/index.html#packed-n-bit-encoding-subset-3-only">Packed n-bit enco=
ding (Subset 3 only)</a></li><li><a class=3D"nav-link" href=3D"https://cgi.=
cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#inspecting-galaxie=
s-and-stars">Inspecting galaxies and stars</a></li><li><a class=3D"nav-link=
" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.h=
tml#6-bit-format-subset-3-only">6-bit format (Subset 3 only)</a></li></ul><=
/li><li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/2=
4T2/assignments/ass2/index.html#star-hash">The star hash (Subsets 1, 2, 3)<=
/a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au/~dp10=
92/24T2/assignments/ass2/index.html#assumptions-clarifications">Assumptions=
 and Clarifications</a></li><li><a class=3D"nav-link" href=3D"https://cgi.c=
se.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#assessment">Assessm=
ent</a><ul class=3D"nav navbar-nav"><li><a class=3D"nav-link" href=3D"https=
://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#assessment-=
-testing">Testing</a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse=
.unsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#assessment--submissio=
n">Submission</a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse.uns=
w.edu.au/~dp1092/24T2/assignments/ass2/index.html#assessment--due-date">Due=
 Date</a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse.unsw.edu.au=
/~dp1092/24T2/assignments/ass2/index.html#assessment--assessment-scheme">As=
sessment Scheme</a></li><li><a class=3D"nav-link" href=3D"https://cgi.cse.u=
nsw.edu.au/~dp1092/24T2/assignments/ass2/index.html#assessment--intermediat=
e-versions-of-work">Intermediate Versions of Work</a></li><li><a class=3D"n=
av-link" href=3D"https://cgi.cse.unsw.edu.au/~dp1092/24T2/assignments/ass2/=
index.html#assignment-conditions">Assignment Conditions</a></li></ul></li><=
/ul></nav>
</div>

</div> <!-- big row -->






   =20
</main>
<footer class=3D"mt-3 pt-3 bg-dark text-center no-print">
    <p class=3D"text-muted">
        <strong>DPST1092 24T2: Computer Systems Fundamentals</strong>
        =20
    </p>

   =20
</footer>


</body></html>
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-e3013ce7-b4d4-46c4-9da5-0e633734b964@mhtml.blink

@charset "utf-8";

.MathJax_Hover_Frame { border-radius: 0.25em; box-shadow: rgb(136, 51, 170)=
 0px 0px 15px; display: inline-block; position: absolute; border: 1px solid=
 rgb(170, 102, 221) !important; }

.MathJax_Menu_Button .MathJax_Hover_Arrow { position: absolute; cursor: poi=
nter; display: inline-block; border: 2px solid rgb(170, 170, 170); border-r=
adius: 4px; font-family: "Courier New", Courier; font-size: 9px; color: rgb=
(240, 240, 240); }

.MathJax_Menu_Button .MathJax_Hover_Arrow span { display: block; background=
-color: rgb(170, 170, 170); border: 1px solid; border-radius: 3px; line-hei=
ght: 0; padding: 4px; }

.MathJax_Hover_Arrow:hover { color: white !important; border: 2px solid rgb=
(204, 204, 204) !important; }

.MathJax_Hover_Arrow:hover span { background-color: rgb(204, 204, 204) !imp=
ortant; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b3ae9039-2ea7-4396-9f6e-0272ce745125@mhtml.blink

@charset "utf-8";

#MathJax_About { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }

#MathJax_About.MathJax_MousePost { outline: none; }

.MathJax_Menu { position: absolute; background-color: white; color: black; =
width: auto; padding: 2px; border: 1px solid rgb(204, 204, 204); margin: 0p=
x; cursor: default; font-style: ; font-variant: normal; font-weight: ; font=
-stretch: ; font-size: ; font-family: ; font-optical-sizing: ; font-kerning=
: ; font-feature-settings: ; font-variation-settings: ; text-align: left; t=
ext-indent: 0px; text-transform: none; line-height: normal; letter-spacing:=
 normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; =
float: none; z-index: 201; box-shadow: rgb(128, 128, 128) 0px 10px 20px; }

.MathJax_MenuItem { padding: 2px 2em; background: transparent; }

.MathJax_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em;=
 color: rgb(102, 102, 102); font-size: 0.75em; }

.MathJax_MenuActive .MathJax_MenuArrow { color: white; }

.MathJax_MenuArrow.RTL { left: 0.5em; right: auto; }

.MathJax_MenuCheck { position: absolute; left: 0.7em; }

.MathJax_MenuCheck.RTL { right: 0.7em; left: auto; }

.MathJax_MenuRadioCheck { position: absolute; left: 1em; }

.MathJax_MenuRadioCheck.RTL { right: 1em; left: auto; }

.MathJax_MenuLabel { padding: 2px 2em 4px 1.33em; font-style: italic; }

.MathJax_MenuRule { border-top: 1px solid rgb(204, 204, 204); margin: 4px 1=
px 0px; }

.MathJax_MenuDisabled { color: graytext; }

.MathJax_MenuActive { background-color: highlight; color: highlighttext; }

.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus { background-color: r=
gb(232, 232, 232); }

.MathJax_ContextMenu:focus { outline: none; }

.MathJax_ContextMenu .MathJax_MenuItem:focus { outline: none; }

#MathJax_AboutClose { top: 0.2em; right: 0.2em; }

.MathJax_Menu .MathJax_MenuClose { top: -10px; left: -10px; }

.MathJax_MenuClose { position: absolute; cursor: pointer; display: inline-b=
lock; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-famil=
y: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.MathJax_MenuClose span { display: block; background-color: rgb(170, 170, 1=
70); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8px=
 0px 6px; }

.MathJax_MenuClose:hover { color: white !important; border: 2px solid rgb(2=
04, 204, 204) !important; }

.MathJax_MenuClose:hover span { background-color: rgb(204, 204, 204) !impor=
tant; }

.MathJax_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4ed8598d-2777-4d6c-a17b-65ecfd97292f@mhtml.blink

@charset "utf-8";

.MathJax_Preview .MJXf-math { color: inherit !important; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-dd2e10b2-d2c1-44a5-b46d-c4c37277ba11@mhtml.blink

@charset "utf-8";

.MJX_Assistive_MathML { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px)=
; user-select: none; position: absolute !important; padding: 1px 0px 0px !i=
mportant; border: 0px !important; height: 1px !important; width: 1px !impor=
tant; overflow: hidden !important; display: block !important; }

.MJX_Assistive_MathML.MJX_Assistive_MathML_Block { width: 100% !important; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-bfa1865b-ca34-4d76-9c5e-ae8ab8b6e8df@mhtml.blink

@charset "utf-8";

#MathJax_Zoom { position: absolute; background-color: rgb(240, 240, 240); o=
verflow: auto; display: block; z-index: 301; padding: 0.5em; border: 1px so=
lid black; margin: 0px; font-weight: normal; font-style: normal; text-align=
: left; text-indent: 0px; text-transform: none; line-height: normal; letter=
-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space:=
 nowrap; float: none; box-sizing: content-box; box-shadow: rgb(170, 170, 17=
0) 5px 5px 15px; }

#MathJax_ZoomOverlay { position: absolute; left: 0px; top: 0px; z-index: 30=
0; display: inline-block; width: 100%; height: 100%; border: 0px; padding: =
0px; margin: 0px; background-color: white; opacity: 0; }

#MathJax_ZoomFrame { position: relative; display: inline-block; height: 0px=
; width: 0px; }

#MathJax_ZoomEventTrap { position: absolute; left: 0px; top: 0px; z-index: =
302; display: inline-block; border: 0px; padding: 0px; margin: 0px; backgro=
und-color: white; opacity: 0; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-c40fd951-4099-40a5-85d1-611299df5cde@mhtml.blink

@charset "utf-8";

.MathJax_Preview { color: rgb(136, 136, 136); }

#MathJax_Message { position: fixed; left: 1em; bottom: 1.5em; background-co=
lor: rgb(230, 230, 230); border: 1px solid rgb(149, 149, 149); margin: 0px;=
 padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto;=
 white-space: nowrap; }

#MathJax_MSIE_Frame { position: absolute; top: 0px; left: 0px; width: 0px; =
z-index: 101; border: 0px; margin: 0px; padding: 0px; }

.MathJax_Error { color: rgb(204, 0, 0); font-style: italic; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-a39a12d0-2870-4739-847e-7a14a4d10dd4@mhtml.blink

@charset "utf-8";

.MJXp-script { font-size: 0.8em; }

.MJXp-right { transform-origin: right center; }

.MJXp-bold { font-weight: bold; }

.MJXp-italic { font-style: italic; }

.MJXp-scr { font-family: MathJax_Script, "Times New Roman", Times, STIXGene=
ral, serif; }

.MJXp-frak { font-family: MathJax_Fraktur, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-sf { font-family: MathJax_SansSerif, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-cal { font-family: MathJax_Caligraphic, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-mono { font-family: MathJax_Typewriter, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-largeop { font-size: 150%; }

.MJXp-largeop.MJXp-int { vertical-align: -0.2em; }

.MJXp-math { display: inline-block; line-height: 1.2; text-indent: 0px; fon=
t-family: "Times New Roman", Times, STIXGeneral, serif; white-space: nowrap=
; border-collapse: collapse; }

.MJXp-display { display: block; text-align: center; margin: 1em 0px; }

.MJXp-math span { display: inline-block; }

.MJXp-box { display: block !important; text-align: center; }

.MJXp-box::after { content: " "; }

.MJXp-rule { display: block !important; margin-top: 0.1em; }

.MJXp-char { display: block !important; }

.MJXp-mo { margin: 0px 0.15em; }

.MJXp-mfrac { margin: 0px 0.125em; vertical-align: 0.25em; }

.MJXp-denom { display: inline-table !important; width: 100%; }

.MJXp-denom > * { display: table-row !important; }

.MJXp-surd { vertical-align: top; }

.MJXp-surd > * { display: block !important; }

.MJXp-script-box > * { display: table !important; height: 50%; }

.MJXp-script-box > * > * { display: table-cell !important; vertical-align: =
top; }

.MJXp-script-box > :last-child > * { vertical-align: bottom; }

.MJXp-script-box > * > * > * { display: block !important; }

.MJXp-mphantom { visibility: hidden; }

.MJXp-munderover, .MJXp-munder { display: inline-table !important; }

.MJXp-over { display: inline-block !important; text-align: center; }

.MJXp-over > * { display: block !important; }

.MJXp-munderover > *, .MJXp-munder > * { display: table-row !important; }

.MJXp-mtable { vertical-align: 0.25em; margin: 0px 0.125em; }

.MJXp-mtable > * { display: inline-table !important; vertical-align: middle=
; }

.MJXp-mtr { display: table-row !important; }

.MJXp-mtd { text-align: center; padding: 0.5em 0px 0px 0.5em; display: tabl=
e-cell !important; }

.MJXp-mtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-mlabeledtr { display: table-row !important; }

.MJXp-mlabeledtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mlabeledtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-merror { background-color: rgb(255, 255, 136); color: rgb(204, 0, 0);=
 border: 1px solid rgb(204, 0, 0); padding: 1px 3px; font-style: normal; fo=
nt-size: 90%; }

.MJXp-scale0 { transform: scaleX(0); }

.MJXp-scale1 { transform: scaleX(0.1); }

.MJXp-scale2 { transform: scaleX(0.2); }

.MJXp-scale3 { transform: scaleX(0.3); }

.MJXp-scale4 { transform: scaleX(0.4); }

.MJXp-scale5 { transform: scaleX(0.5); }

.MJXp-scale6 { transform: scaleX(0.6); }

.MJXp-scale7 { transform: scaleX(0.7); }

.MJXp-scale8 { transform: scaleX(0.8); }

.MJXp-scale9 { transform: scaleX(0.9); }

.MathJax_PHTML .noError { font-size: 90%; text-align: left; color: black; p=
adding: 1px 3px; border: 1px solid; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-6a01a8ca-cabc-4ca6-a851-a5acbf4e095a@mhtml.blink

@charset "utf-8";

.mjx-chtml { display: inline-block; line-height: 0; text-indent: 0px; text-=
align: left; text-transform: none; font-style: normal; font-weight: normal;=
 font-size: 100%; letter-spacing: normal; overflow-wrap: normal; word-spaci=
ng: normal; white-space: nowrap; float: none; direction: ltr; max-width: no=
ne; max-height: none; min-width: 0px; min-height: 0px; border: 0px; margin:=
 0px; padding: 1px 0px; }

.MJXc-display { display: block; text-align: center; margin: 1em 0px; paddin=
g: 0px; }

.mjx-chtml[tabindex]:focus, body :focus .mjx-chtml[tabindex] { display: inl=
ine-table; }

.mjx-full-width { text-align: center; width: 10000em; display: table-cell !=
important; }

.mjx-math { display: inline-block; border-collapse: separate; border-spacin=
g: 0px; }

.mjx-math * { display: inline-block; text-align: left; box-sizing: content-=
box !important; }

.mjx-numerator { display: block; text-align: center; }

.mjx-denominator { display: block; text-align: center; }

.MJXc-stacked { height: 0px; position: relative; }

.MJXc-stacked > * { position: absolute; }

.MJXc-bevelled > * { display: inline-block; }

.mjx-stack { display: inline-block; }

.mjx-op { display: block; }

.mjx-under { display: table-cell; }

.mjx-over { display: block; }

.mjx-over > * { padding-left: 0px !important; padding-right: 0px !important=
; }

.mjx-under > * { padding-left: 0px !important; padding-right: 0px !importan=
t; }

.mjx-stack > .mjx-sup { display: block; }

.mjx-stack > .mjx-sub { display: block; }

.mjx-prestack > .mjx-presup { display: block; }

.mjx-prestack > .mjx-presub { display: block; }

.mjx-delim-h > .mjx-char { display: inline-block; }

.mjx-surd { vertical-align: top; }

.mjx-mphantom * { visibility: hidden; }

.mjx-merror { background-color: rgb(255, 255, 136); color: rgb(204, 0, 0); =
border: 1px solid rgb(204, 0, 0); padding: 2px 3px; font-style: normal; fon=
t-size: 90%; }

.mjx-annotation-xml { line-height: normal; }

.mjx-menclose > svg { fill: none; stroke: currentcolor; }

.mjx-mtr { display: table-row; }

.mjx-mlabeledtr { display: table-row; }

.mjx-mtd { display: table-cell; text-align: center; }

.mjx-label { display: table-row; }

.mjx-box { display: inline-block; }

.mjx-block { display: block; }

.mjx-span { display: inline; }

.mjx-char { display: block; white-space: pre; }

.mjx-itable { display: inline-table; width: auto; }

.mjx-row { display: table-row; }

.mjx-cell { display: table-cell; }

.mjx-table { display: table; width: 100%; }

.mjx-line { display: block; height: 0px; }

.mjx-strut { width: 0px; padding-top: 1em; }

.mjx-vsize { width: 0px; }

.MJXc-space1 { margin-left: 0.167em; }

.MJXc-space2 { margin-left: 0.222em; }

.MJXc-space3 { margin-left: 0.278em; }

.mjx-chartest { display: block; visibility: hidden; position: absolute; top=
: 0px; line-height: normal; font-size: 500%; }

.mjx-chartest .mjx-char { display: inline; }

.mjx-chartest .mjx-box { padding-top: 1000px; }

.MJXc-processing { visibility: hidden; position: fixed; width: 0px; height:=
 0px; overflow: hidden; }

.MJXc-processed { display: none; }

.mjx-test { font-style: normal; font-weight: normal; font-size: 100%; text-=
indent: 0px; text-transform: none; letter-spacing: normal; word-spacing: no=
rmal; overflow: hidden; height: 1px; }

.mjx-test.mjx-test-display { display: table !important; }

.mjx-test.mjx-test-inline { display: inline !important; margin-right: -1px;=
 }

.mjx-test.mjx-test-default { display: block !important; clear: both; }

.mjx-ex-box { position: absolute; overflow: hidden; min-height: 0px; max-he=
ight: none; padding: 0px; border: 0px; margin: 0px; width: 1px; height: 60e=
x; display: inline-block !important; }

.mjx-test-inline .mjx-left-box { display: inline-block; width: 0px; float: =
left; }

.mjx-test-inline .mjx-right-box { display: inline-block; width: 0px; float:=
 right; }

.mjx-test-display .mjx-right-box { min-width: 0px; max-width: none; padding=
: 0px; border: 0px; margin: 0px; display: table-cell !important; width: 100=
00em !important; }

#MathJax_CHTML_Tooltip { background-color: infobackground; color: infotext;=
 border: 1px solid black; box-shadow: rgb(170, 170, 170) 2px 2px 5px; paddi=
ng: 3px 4px; z-index: 401; position: absolute; left: 0px; top: 0px; width: =
auto; height: auto; display: none; }

.mjx-chtml .mjx-noError { line-height: 1.2; font-size: 90%; text-align: lef=
t; color: black; padding: 1px 3px; border: 1px solid; }

.MJXc-TeX-unknown-R { font-family: STIXGeneral, "Cambria Math", "Arial Unic=
ode MS", serif; font-style: normal; font-weight: normal; }

.MJXc-TeX-unknown-I { font-family: STIXGeneral, "Cambria Math", "Arial Unic=
ode MS", serif; font-style: italic; font-weight: normal; }

.MJXc-TeX-unknown-B { font-family: STIXGeneral, "Cambria Math", "Arial Unic=
ode MS", serif; font-style: normal; font-weight: bold; }

.MJXc-TeX-unknown-BI { font-family: STIXGeneral, "Cambria Math", "Arial Uni=
code MS", serif; font-style: italic; font-weight: bold; }

.MJXc-TeX-ams-R { font-family: MJXc-TeX-ams-R, MJXc-TeX-ams-Rw; }

.MJXc-TeX-cal-B { font-family: MJXc-TeX-cal-B, MJXc-TeX-cal-Bx, MJXc-TeX-ca=
l-Bw; }

.MJXc-TeX-frak-R { font-family: MJXc-TeX-frak-R, MJXc-TeX-frak-Rw; }

.MJXc-TeX-frak-B { font-family: MJXc-TeX-frak-B, MJXc-TeX-frak-Bx, MJXc-TeX=
-frak-Bw; }

.MJXc-TeX-math-BI { font-family: MJXc-TeX-math-BI, MJXc-TeX-math-BIx, MJXc-=
TeX-math-BIw; }

.MJXc-TeX-sans-R { font-family: MJXc-TeX-sans-R, MJXc-TeX-sans-Rw; }

.MJXc-TeX-sans-B { font-family: MJXc-TeX-sans-B, MJXc-TeX-sans-Bx, MJXc-TeX=
-sans-Bw; }

.MJXc-TeX-sans-I { font-family: MJXc-TeX-sans-I, MJXc-TeX-sans-Ix, MJXc-TeX=
-sans-Iw; }

.MJXc-TeX-script-R { font-family: MJXc-TeX-script-R, MJXc-TeX-script-Rw; }

.MJXc-TeX-type-R { font-family: MJXc-TeX-type-R, MJXc-TeX-type-Rw; }

.MJXc-TeX-cal-R { font-family: MJXc-TeX-cal-R, MJXc-TeX-cal-Rw; }

.MJXc-TeX-main-B { font-family: MJXc-TeX-main-B, MJXc-TeX-main-Bx, MJXc-TeX=
-main-Bw; }

.MJXc-TeX-main-I { font-family: MJXc-TeX-main-I, MJXc-TeX-main-Ix, MJXc-TeX=
-main-Iw; }

.MJXc-TeX-main-R { font-family: MJXc-TeX-main-R, MJXc-TeX-main-Rw; }

.MJXc-TeX-math-I { font-family: MJXc-TeX-math-I, MJXc-TeX-math-Ix, MJXc-TeX=
-math-Iw; }

.MJXc-TeX-size1-R { font-family: MJXc-TeX-size1-R, MJXc-TeX-size1-Rw; }

.MJXc-TeX-size2-R { font-family: MJXc-TeX-size2-R, MJXc-TeX-size2-Rw; }

.MJXc-TeX-size3-R { font-family: MJXc-TeX-size3-R, MJXc-TeX-size3-Rw; }

.MJXc-TeX-size4-R { font-family: MJXc-TeX-size4-R, MJXc-TeX-size4-Rw; }

.MJXc-TeX-vec-R { font-family: MJXc-TeX-vec-R, MJXc-TeX-vec-Rw; }

.MJXc-TeX-vec-B { font-family: MJXc-TeX-vec-B, MJXc-TeX-vec-Bx, MJXc-TeX-ve=
c-Bw; }

@font-face { font-family: MJXc-TeX-ams-R; src: local("MathJax_AMS"), local(=
"MathJax_AMS-Regular"); }

@font-face { font-family: MJXc-TeX-ams-Rw; src: url("https://cdnjs.cloudfla=
re.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_AMS-Regular.=
woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathjax/=
2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_AMS-Regular.otf") format("opentype"); =
}

@font-face { font-family: MJXc-TeX-cal-B; src: local("MathJax_Caligraphic B=
old"), local("MathJax_Caligraphic-Bold"); }

@font-face { font-family: MJXc-TeX-cal-Bx; src: local("MathJax_Caligraphic"=
); font-weight: bold; }

@font-face { font-family: MJXc-TeX-cal-Bw; src: url("https://cdnjs.cloudfla=
re.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-=
Bold.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mat=
hjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Bold.otf") format("op=
entype"); }

@font-face { font-family: MJXc-TeX-frak-R; src: local("MathJax_Fraktur"), l=
ocal("MathJax_Fraktur-Regular"); }

@font-face { font-family: MJXc-TeX-frak-Rw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Fraktur-Reg=
ular.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mat=
hjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Fraktur-Regular.otf") format("ope=
ntype"); }

@font-face { font-family: MJXc-TeX-frak-B; src: local("MathJax_Fraktur Bold=
"), local("MathJax_Fraktur-Bold"); }

@font-face { font-family: MJXc-TeX-frak-Bx; src: local("MathJax_Fraktur"); =
font-weight: bold; }

@font-face { font-family: MJXc-TeX-frak-Bw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Fraktur-Bol=
d.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathja=
x/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Fraktur-Bold.otf") format("opentype"=
); }

@font-face { font-family: MJXc-TeX-math-BI; src: local("MathJax_Math BoldIt=
alic"), local("MathJax_Math-BoldItalic"); }

@font-face { font-family: MJXc-TeX-math-BIx; src: local("MathJax_Math"); fo=
nt-weight: bold; font-style: italic; }

@font-face { font-family: MJXc-TeX-math-BIw; src: url("https://cdnjs.cloudf=
lare.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Math-BoldI=
talic.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/ma=
thjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Math-BoldItalic.otf") format("op=
entype"); }

@font-face { font-family: MJXc-TeX-sans-R; src: local("MathJax_SansSerif"),=
 local("MathJax_SansSerif-Regular"); }

@font-face { font-family: MJXc-TeX-sans-Rw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_SansSerif-R=
egular.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/m=
athjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_SansSerif-Regular.otf") format(=
"opentype"); }

@font-face { font-family: MJXc-TeX-sans-B; src: local("MathJax_SansSerif Bo=
ld"), local("MathJax_SansSerif-Bold"); }

@font-face { font-family: MJXc-TeX-sans-Bx; src: local("MathJax_SansSerif")=
; font-weight: bold; }

@font-face { font-family: MJXc-TeX-sans-Bw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_SansSerif-B=
old.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/math=
jax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_SansSerif-Bold.otf") format("opent=
ype"); }

@font-face { font-family: MJXc-TeX-sans-I; src: local("MathJax_SansSerif It=
alic"), local("MathJax_SansSerif-Italic"); }

@font-face { font-family: MJXc-TeX-sans-Ix; src: local("MathJax_SansSerif")=
; font-style: italic; }

@font-face { font-family: MJXc-TeX-sans-Iw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_SansSerif-I=
talic.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/ma=
thjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_SansSerif-Italic.otf") format("o=
pentype"); }

@font-face { font-family: MJXc-TeX-script-R; src: local("MathJax_Script"), =
local("MathJax_Script-Regular"); }

@font-face { font-family: MJXc-TeX-script-Rw; src: url("https://cdnjs.cloud=
flare.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Script-Re=
gular.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/ma=
thjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Script-Regular.otf") format("ope=
ntype"); }

@font-face { font-family: MJXc-TeX-type-R; src: local("MathJax_Typewriter")=
, local("MathJax_Typewriter-Regular"); }

@font-face { font-family: MJXc-TeX-type-Rw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Typewriter-=
Regular.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/=
mathjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Typewriter-Regular.otf") forma=
t("opentype"); }

@font-face { font-family: MJXc-TeX-cal-R; src: local("MathJax_Caligraphic")=
, local("MathJax_Caligraphic-Regular"); }

@font-face { font-family: MJXc-TeX-cal-Rw; src: url("https://cdnjs.cloudfla=
re.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-=
Regular.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/=
mathjax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regular.otf") form=
at("opentype"); }

@font-face { font-family: MJXc-TeX-main-B; src: local("MathJax_Main Bold"),=
 local("MathJax_Main-Bold"); }

@font-face { font-family: MJXc-TeX-main-Bx; src: local("MathJax_Main"); fon=
t-weight: bold; }

@font-face { font-family: MJXc-TeX-main-Bw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.w=
off") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathjax/2=
.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf") format("opentype"); }

@font-face { font-family: MJXc-TeX-main-I; src: local("MathJax_Main Italic"=
), local("MathJax_Main-Italic"); }

@font-face { font-family: MJXc-TeX-main-Ix; src: local("MathJax_Main"); fon=
t-style: italic; }

@font-face { font-family: MJXc-TeX-main-Iw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Main-Italic=
.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathjax=
/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf") format("opentype");=
 }

@font-face { font-family: MJXc-TeX-main-R; src: local("MathJax_Main"), loca=
l("MathJax_Main-Regular"); }

@font-face { font-family: MJXc-TeX-main-Rw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regula=
r.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathja=
x/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf") format("opentype"=
); }

@font-face { font-family: MJXc-TeX-math-I; src: local("MathJax_Math Italic"=
), local("MathJax_Math-Italic"); }

@font-face { font-family: MJXc-TeX-math-Ix; src: local("MathJax_Math"); fon=
t-style: italic; }

@font-face { font-family: MJXc-TeX-math-Iw; src: url("https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic=
.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathjax=
/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf") format("opentype");=
 }

@font-face { font-family: MJXc-TeX-size1-R; src: local("MathJax_Size1"), lo=
cal("MathJax_Size1-Regular"); }

@font-face { font-family: MJXc-TeX-size1-Rw; src: url("https://cdnjs.cloudf=
lare.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regu=
lar.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/math=
jax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf") format("openty=
pe"); }

@font-face { font-family: MJXc-TeX-size2-R; src: local("MathJax_Size2"), lo=
cal("MathJax_Size2-Regular"); }

@font-face { font-family: MJXc-TeX-size2-Rw; src: url("https://cdnjs.cloudf=
lare.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regu=
lar.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/math=
jax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf") format("openty=
pe"); }

@font-face { font-family: MJXc-TeX-size3-R; src: local("MathJax_Size3"), lo=
cal("MathJax_Size3-Regular"); }

@font-face { font-family: MJXc-TeX-size3-Rw; src: url("https://cdnjs.cloudf=
lare.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regu=
lar.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/math=
jax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf") format("openty=
pe"); }

@font-face { font-family: MJXc-TeX-size4-R; src: local("MathJax_Size4"), lo=
cal("MathJax_Size4-Regular"); }

@font-face { font-family: MJXc-TeX-size4-Rw; src: url("https://cdnjs.cloudf=
lare.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regu=
lar.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/math=
jax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf") format("openty=
pe"); }

@font-face { font-family: MJXc-TeX-vec-R; src: local("MathJax_Vector"), loc=
al("MathJax_Vector-Regular"); }

@font-face { font-family: MJXc-TeX-vec-Rw; src: url("https://cdnjs.cloudfla=
re.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Vector-Regul=
ar.woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathj=
ax/2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Vector-Regular.otf") format("openty=
pe"); }

@font-face { font-family: MJXc-TeX-vec-B; src: local("MathJax_Vector Bold")=
, local("MathJax_Vector-Bold"); }

@font-face { font-family: MJXc-TeX-vec-Bx; src: local("MathJax_Vector"); fo=
nt-weight: bold; }

@font-face { font-family: MJXc-TeX-vec-Bw; src: url("https://cdnjs.cloudfla=
re.com/ajax/libs/mathjax/2.7.6/fonts/HTML-CSS/TeX/woff/MathJax_Vector-Bold.=
woff") format("woff"), url("https://cdnjs.cloudflare.com/ajax/libs/mathjax/=
2.7.6/fonts/HTML-CSS/TeX/otf/MathJax_Vector-Bold.otf") format("opentype"); }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-174f93e6-b02f-45c5-a029-53febb0ad5a8@mhtml.blink

@charset "utf-8";

h1::before, h2::before { content: ""; display: block; height: 50px; margin-=
top: -50px; visibility: hidden; }

#toc { position: sticky; top: 70px; }

main[aria-label=3D"Content"] { max-width: 70rem; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-65a8b4cf-7152-4dbc-ba2d-218728d03a5e@mhtml.blink

@charset "utf-8";

pre > mark { margin: -0.2em; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.min.css

@charset "utf-8";

:root { --blue: #007bff; --indigo: #6610f2; --purple: #6f42c1; --pink: #e83=
e8c; --red: #dc3545; --orange: #fd7e14; --yellow: #ffc107; --green: #28a745=
; --teal: #20c997; --cyan: #17a2b8; --white: #fff; --gray: #6c757d; --gray-=
dark: #343a40; --primary: #007bff; --secondary: #6c757d; --success: #28a745=
; --info: #17a2b8; --warning: #ffc107; --danger: #dc3545; --light: #f8f9fa;=
 --dark: #343a40; --breakpoint-xs: 0; --breakpoint-sm: 576px; --breakpoint-=
md: 768px; --breakpoint-lg: 992px; --breakpoint-xl: 1200px; --font-family-s=
ans-serif: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Ne=
ue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Sego=
e UI Symbol","Noto Color Emoji"; --font-family-monospace: SFMono-Regular,Me=
nlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace; }

*, ::after, ::before { box-sizing: border-box; }

html { font-family: sans-serif; line-height: 1.15; text-size-adjust: 100%; =
-webkit-tap-highlight-color: transparent; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, sect=
ion { display: block; }

body { margin: 0px; font-family: -apple-system, BlinkMacSystemFont, "Segoe =
UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color=
 Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-size=
: 1rem; font-weight: 400; line-height: 1.5; color: rgb(33, 37, 41); text-al=
ign: left; background-color: rgb(255, 255, 255); }

[tabindex=3D"-1"]:focus:not(:focus-visible) { outline: 0px !important; }

hr { box-sizing: content-box; height: 0px; overflow: visible; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; margin-bottom: 0.5rem; }

p { margin-top: 0px; margin-bottom: 1rem; }

abbr[data-original-title], abbr[title] { text-decoration: underline dotted;=
 cursor: help; border-bottom: 0px; text-decoration-skip-ink: none; }

address { margin-bottom: 1rem; font-style: normal; line-height: inherit; }

dl, ol, ul { margin-top: 0px; margin-bottom: 1rem; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

dt { font-weight: 700; }

dd { margin-bottom: 0.5rem; margin-left: 0px; }

blockquote { margin: 0px 0px 1rem; }

b, strong { font-weight: bolder; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

a { color: rgb(0, 123, 255); text-decoration: none; background-color: trans=
parent; }

a:hover { color: rgb(0, 86, 179); text-decoration: underline; }

a:not([href]) { color: inherit; text-decoration: none; }

a:not([href]):hover { color: inherit; text-decoration: none; }

code, kbd, pre, samp { font-family: SFMono-Regular, Menlo, Monaco, Consolas=
, "Liberation Mono", "Courier New", monospace; font-size: 1em; }

pre { margin-top: 0px; margin-bottom: 1rem; overflow: auto; }

figure { margin: 0px 0px 1rem; }

img { vertical-align: middle; border-style: none; }

svg { overflow: hidden; vertical-align: middle; }

table { border-collapse: collapse; }

caption { padding-top: 0.75rem; padding-bottom: 0.75rem; color: rgb(108, 11=
7, 125); text-align: left; caption-side: bottom; }

th { text-align: inherit; }

label { display: inline-block; margin-bottom: 0.5rem; }

button { border-radius: 0px; }

button:focus { outline: -webkit-focus-ring-color auto 5px; }

button, input, optgroup, select, textarea { margin: 0px; font-family: inher=
it; font-size: inherit; line-height: inherit; }

button, input { overflow: visible; }

button, select { text-transform: none; }

[role=3D"button"] { cursor: pointer; }

select { overflow-wrap: normal; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; }

[type=3D"button"]:not(:disabled), [type=3D"reset"]:not(:disabled), [type=3D=
"submit"]:not(:disabled), button:not(:disabled) { cursor: pointer; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

textarea { overflow: auto; resize: vertical; }

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; max-width: 100%; padding: 0px; margin=
-bottom: 0.5rem; font-size: 1.5rem; line-height: inherit; color: inherit; w=
hite-space: normal; }

progress { vertical-align: baseline; }

[type=3D"number"]::-webkit-inner-spin-button, [type=3D"number"]::-webkit-ou=
ter-spin-button { height: auto; }

[type=3D"search"] { outline-offset: -2px; appearance: none; }

[type=3D"search"]::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { font: inherit; appearance: button; }

output { display: inline-block; }

summary { display: list-item; cursor: pointer; }

template { display: none; }

[hidden] { display: none !important; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { margin-bottom: 0.5re=
m; font-weight: 500; line-height: 1.2; }

.h1, h1 { font-size: 2.5rem; }

.h2, h2 { font-size: 2rem; }

.h3, h3 { font-size: 1.75rem; }

.h4, h4 { font-size: 1.5rem; }

.h5, h5 { font-size: 1.25rem; }

.h6, h6 { font-size: 1rem; }

.lead { font-size: 1.25rem; font-weight: 300; }

.display-1 { font-size: 6rem; font-weight: 300; line-height: 1.2; }

.display-2 { font-size: 5.5rem; font-weight: 300; line-height: 1.2; }

.display-3 { font-size: 4.5rem; font-weight: 300; line-height: 1.2; }

.display-4 { font-size: 3.5rem; font-weight: 300; line-height: 1.2; }

hr { margin-top: 1rem; margin-bottom: 1rem; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgba(0, 0, 0, 0.1); }

.small, small { font-size: 80%; font-weight: 400; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; list-style: none; }

.list-inline-item { display: inline-block; }

.list-inline-item:not(:last-child) { margin-right: 0.5rem; }

.initialism { font-size: 90%; text-transform: uppercase; }

.blockquote { margin-bottom: 1rem; font-size: 1.25rem; }

.blockquote-footer { display: block; font-size: 80%; color: rgb(108, 117, 1=
25); }

.blockquote-footer::before { content: "=E2=80=94=C2=A0"; }

.img-fluid { max-width: 100%; height: auto; }

.img-thumbnail { padding: 0.25rem; background-color: rgb(255, 255, 255); bo=
rder: 1px solid rgb(222, 226, 230); border-radius: 0.25rem; max-width: 100%=
; height: auto; }

.figure { display: inline-block; }

.figure-img { margin-bottom: 0.5rem; line-height: 1; }

.figure-caption { font-size: 90%; color: rgb(108, 117, 125); }

code { font-size: 87.5%; color: rgb(232, 62, 140); overflow-wrap: break-wor=
d; }

a > code { color: inherit; }

kbd { padding: 0.2rem 0.4rem; font-size: 87.5%; color: rgb(255, 255, 255); =
background-color: rgb(33, 37, 41); border-radius: 0.2rem; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; }

pre { display: block; font-size: 87.5%; color: rgb(33, 37, 41); }

pre code { font-size: inherit; color: inherit; word-break: normal; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { width: 100%; padding-right: 15px; padding-left: 15px; margin-r=
ight: auto; margin-left: auto; }

@media (min-width: 576px) {
  .container { max-width: 540px; }
}

@media (min-width: 768px) {
  .container { max-width: 720px; }
}

@media (min-width: 992px) {
  .container { max-width: 960px; }
}

@media (min-width: 1200px) {
  .container { max-width: 1140px; }
}

.container-fluid, .container-lg, .container-md, .container-sm, .container-x=
l { width: 100%; padding-right: 15px; padding-left: 15px; margin-right: aut=
o; margin-left: auto; }

@media (min-width: 576px) {
  .container, .container-sm { max-width: 540px; }
}

@media (min-width: 768px) {
  .container, .container-md, .container-sm { max-width: 720px; }
}

@media (min-width: 992px) {
  .container, .container-lg, .container-md, .container-sm { max-width: 960p=
x; }
}

@media (min-width: 1200px) {
  .container, .container-lg, .container-md, .container-sm, .container-xl { =
max-width: 1140px; }
}

.row { display: flex; flex-wrap: wrap; margin-right: -15px; margin-left: -1=
5px; }

.no-gutters { margin-right: 0px; margin-left: 0px; }

.no-gutters > .col, .no-gutters > [class*=3D"col-"] { padding-right: 0px; p=
adding-left: 0px; }

.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .c=
ol-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .c=
ol-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6=
, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-m=
d-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .=
col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1=
, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col=
-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .=
col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl=
-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto { p=
osition: relative; width: 100%; padding-right: 15px; padding-left: 15px; }

.col { flex-basis: 0px; flex-grow: 1; min-width: 0px; max-width: 100%; }

.row-cols-1 > * { flex: 0 0 100%; max-width: 100%; }

.row-cols-2 > * { flex: 0 0 50%; max-width: 50%; }

.row-cols-3 > * { flex: 0 0 33.3333%; max-width: 33.3333%; }

.row-cols-4 > * { flex: 0 0 25%; max-width: 25%; }

.row-cols-5 > * { flex: 0 0 20%; max-width: 20%; }

.row-cols-6 > * { flex: 0 0 16.6667%; max-width: 16.6667%; }

.col-auto { flex: 0 0 auto; width: auto; max-width: 100%; }

.col-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }

.col-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }

.col-3 { flex: 0 0 25%; max-width: 25%; }

.col-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }

.col-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }

.col-6 { flex: 0 0 50%; max-width: 50%; }

.col-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }

.col-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }

.col-9 { flex: 0 0 75%; max-width: 75%; }

.col-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }

.col-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }

.col-12 { flex: 0 0 100%; max-width: 100%; }

.order-first { order: -1; }

.order-last { order: 13; }

.order-0 { order: 0; }

.order-1 { order: 1; }

.order-2 { order: 2; }

.order-3 { order: 3; }

.order-4 { order: 4; }

.order-5 { order: 5; }

.order-6 { order: 6; }

.order-7 { order: 7; }

.order-8 { order: 8; }

.order-9 { order: 9; }

.order-10 { order: 10; }

.order-11 { order: 11; }

.order-12 { order: 12; }

.offset-1 { margin-left: 8.33333%; }

.offset-2 { margin-left: 16.6667%; }

.offset-3 { margin-left: 25%; }

.offset-4 { margin-left: 33.3333%; }

.offset-5 { margin-left: 41.6667%; }

.offset-6 { margin-left: 50%; }

.offset-7 { margin-left: 58.3333%; }

.offset-8 { margin-left: 66.6667%; }

.offset-9 { margin-left: 75%; }

.offset-10 { margin-left: 83.3333%; }

.offset-11 { margin-left: 91.6667%; }

@media (min-width: 576px) {
  .col-sm { flex-basis: 0px; flex-grow: 1; min-width: 0px; max-width: 100%;=
 }
  .row-cols-sm-1 > * { flex: 0 0 100%; max-width: 100%; }
  .row-cols-sm-2 > * { flex: 0 0 50%; max-width: 50%; }
  .row-cols-sm-3 > * { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .row-cols-sm-4 > * { flex: 0 0 25%; max-width: 25%; }
  .row-cols-sm-5 > * { flex: 0 0 20%; max-width: 20%; }
  .row-cols-sm-6 > * { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-sm-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-sm-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
  .col-sm-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-sm-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
  .col-sm-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-sm-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
  .col-sm-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-sm-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
  .order-sm-first { order: -1; }
  .order-sm-last { order: 13; }
  .order-sm-0 { order: 0; }
  .order-sm-1 { order: 1; }
  .order-sm-2 { order: 2; }
  .order-sm-3 { order: 3; }
  .order-sm-4 { order: 4; }
  .order-sm-5 { order: 5; }
  .order-sm-6 { order: 6; }
  .order-sm-7 { order: 7; }
  .order-sm-8 { order: 8; }
  .order-sm-9 { order: 9; }
  .order-sm-10 { order: 10; }
  .order-sm-11 { order: 11; }
  .order-sm-12 { order: 12; }
  .offset-sm-0 { margin-left: 0px; }
  .offset-sm-1 { margin-left: 8.33333%; }
  .offset-sm-2 { margin-left: 16.6667%; }
  .offset-sm-3 { margin-left: 25%; }
  .offset-sm-4 { margin-left: 33.3333%; }
  .offset-sm-5 { margin-left: 41.6667%; }
  .offset-sm-6 { margin-left: 50%; }
  .offset-sm-7 { margin-left: 58.3333%; }
  .offset-sm-8 { margin-left: 66.6667%; }
  .offset-sm-9 { margin-left: 75%; }
  .offset-sm-10 { margin-left: 83.3333%; }
  .offset-sm-11 { margin-left: 91.6667%; }
}

@media (min-width: 768px) {
  .col-md { flex-basis: 0px; flex-grow: 1; min-width: 0px; max-width: 100%;=
 }
  .row-cols-md-1 > * { flex: 0 0 100%; max-width: 100%; }
  .row-cols-md-2 > * { flex: 0 0 50%; max-width: 50%; }
  .row-cols-md-3 > * { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .row-cols-md-4 > * { flex: 0 0 25%; max-width: 25%; }
  .row-cols-md-5 > * { flex: 0 0 20%; max-width: 20%; }
  .row-cols-md-6 > * { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-md-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-md-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-3 { flex: 0 0 25%; max-width: 25%; }
  .col-md-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-md-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-md-6 { flex: 0 0 50%; max-width: 50%; }
  .col-md-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-md-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-md-9 { flex: 0 0 75%; max-width: 75%; }
  .col-md-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-md-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-md-12 { flex: 0 0 100%; max-width: 100%; }
  .order-md-first { order: -1; }
  .order-md-last { order: 13; }
  .order-md-0 { order: 0; }
  .order-md-1 { order: 1; }
  .order-md-2 { order: 2; }
  .order-md-3 { order: 3; }
  .order-md-4 { order: 4; }
  .order-md-5 { order: 5; }
  .order-md-6 { order: 6; }
  .order-md-7 { order: 7; }
  .order-md-8 { order: 8; }
  .order-md-9 { order: 9; }
  .order-md-10 { order: 10; }
  .order-md-11 { order: 11; }
  .order-md-12 { order: 12; }
  .offset-md-0 { margin-left: 0px; }
  .offset-md-1 { margin-left: 8.33333%; }
  .offset-md-2 { margin-left: 16.6667%; }
  .offset-md-3 { margin-left: 25%; }
  .offset-md-4 { margin-left: 33.3333%; }
  .offset-md-5 { margin-left: 41.6667%; }
  .offset-md-6 { margin-left: 50%; }
  .offset-md-7 { margin-left: 58.3333%; }
  .offset-md-8 { margin-left: 66.6667%; }
  .offset-md-9 { margin-left: 75%; }
  .offset-md-10 { margin-left: 83.3333%; }
  .offset-md-11 { margin-left: 91.6667%; }
}

@media (min-width: 992px) {
  .col-lg { flex-basis: 0px; flex-grow: 1; min-width: 0px; max-width: 100%;=
 }
  .row-cols-lg-1 > * { flex: 0 0 100%; max-width: 100%; }
  .row-cols-lg-2 > * { flex: 0 0 50%; max-width: 50%; }
  .row-cols-lg-3 > * { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .row-cols-lg-4 > * { flex: 0 0 25%; max-width: 25%; }
  .row-cols-lg-5 > * { flex: 0 0 20%; max-width: 20%; }
  .row-cols-lg-6 > * { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-lg-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-lg-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
  .col-lg-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-lg-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
  .col-lg-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-lg-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
  .col-lg-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-lg-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
  .order-lg-first { order: -1; }
  .order-lg-last { order: 13; }
  .order-lg-0 { order: 0; }
  .order-lg-1 { order: 1; }
  .order-lg-2 { order: 2; }
  .order-lg-3 { order: 3; }
  .order-lg-4 { order: 4; }
  .order-lg-5 { order: 5; }
  .order-lg-6 { order: 6; }
  .order-lg-7 { order: 7; }
  .order-lg-8 { order: 8; }
  .order-lg-9 { order: 9; }
  .order-lg-10 { order: 10; }
  .order-lg-11 { order: 11; }
  .order-lg-12 { order: 12; }
  .offset-lg-0 { margin-left: 0px; }
  .offset-lg-1 { margin-left: 8.33333%; }
  .offset-lg-2 { margin-left: 16.6667%; }
  .offset-lg-3 { margin-left: 25%; }
  .offset-lg-4 { margin-left: 33.3333%; }
  .offset-lg-5 { margin-left: 41.6667%; }
  .offset-lg-6 { margin-left: 50%; }
  .offset-lg-7 { margin-left: 58.3333%; }
  .offset-lg-8 { margin-left: 66.6667%; }
  .offset-lg-9 { margin-left: 75%; }
  .offset-lg-10 { margin-left: 83.3333%; }
  .offset-lg-11 { margin-left: 91.6667%; }
}

@media (min-width: 1200px) {
  .col-xl { flex-basis: 0px; flex-grow: 1; min-width: 0px; max-width: 100%;=
 }
  .row-cols-xl-1 > * { flex: 0 0 100%; max-width: 100%; }
  .row-cols-xl-2 > * { flex: 0 0 50%; max-width: 50%; }
  .row-cols-xl-3 > * { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .row-cols-xl-4 > * { flex: 0 0 25%; max-width: 25%; }
  .row-cols-xl-5 > * { flex: 0 0 20%; max-width: 20%; }
  .row-cols-xl-6 > * { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-xl-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-xl-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-3 { flex: 0 0 25%; max-width: 25%; }
  .col-xl-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-xl-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-xl-6 { flex: 0 0 50%; max-width: 50%; }
  .col-xl-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-xl-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-xl-9 { flex: 0 0 75%; max-width: 75%; }
  .col-xl-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-xl-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-xl-12 { flex: 0 0 100%; max-width: 100%; }
  .order-xl-first { order: -1; }
  .order-xl-last { order: 13; }
  .order-xl-0 { order: 0; }
  .order-xl-1 { order: 1; }
  .order-xl-2 { order: 2; }
  .order-xl-3 { order: 3; }
  .order-xl-4 { order: 4; }
  .order-xl-5 { order: 5; }
  .order-xl-6 { order: 6; }
  .order-xl-7 { order: 7; }
  .order-xl-8 { order: 8; }
  .order-xl-9 { order: 9; }
  .order-xl-10 { order: 10; }
  .order-xl-11 { order: 11; }
  .order-xl-12 { order: 12; }
  .offset-xl-0 { margin-left: 0px; }
  .offset-xl-1 { margin-left: 8.33333%; }
  .offset-xl-2 { margin-left: 16.6667%; }
  .offset-xl-3 { margin-left: 25%; }
  .offset-xl-4 { margin-left: 33.3333%; }
  .offset-xl-5 { margin-left: 41.6667%; }
  .offset-xl-6 { margin-left: 50%; }
  .offset-xl-7 { margin-left: 58.3333%; }
  .offset-xl-8 { margin-left: 66.6667%; }
  .offset-xl-9 { margin-left: 75%; }
  .offset-xl-10 { margin-left: 83.3333%; }
  .offset-xl-11 { margin-left: 91.6667%; }
}

.table { width: 100%; margin-bottom: 1rem; color: rgb(33, 37, 41); }

.table td, .table th { padding: 0.75rem; vertical-align: top; border-top: 1=
px solid rgb(222, 226, 230); }

.table thead th { vertical-align: bottom; border-bottom: 2px solid rgb(222,=
 226, 230); }

.table tbody + tbody { border-top: 2px solid rgb(222, 226, 230); }

.table-sm td, .table-sm th { padding: 0.3rem; }

.table-bordered { border: 1px solid rgb(222, 226, 230); }

.table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, 23=
0); }

.table-bordered thead td, .table-bordered thead th { border-bottom-width: 2=
px; }

.table-borderless tbody + tbody, .table-borderless td, .table-borderless th=
, .table-borderless thead th { border: 0px; }

.table-striped tbody tr:nth-of-type(2n+1) { background-color: rgba(0, 0, 0,=
 0.05); }

.table-hover tbody tr:hover { color: rgb(33, 37, 41); background-color: rgb=
a(0, 0, 0, 0.075); }

.table-primary, .table-primary > td, .table-primary > th { background-color=
: rgb(184, 218, 255); }

.table-primary tbody + tbody, .table-primary td, .table-primary th, .table-=
primary thead th { border-color: rgb(122, 186, 255); }

.table-hover .table-primary:hover { background-color: rgb(159, 205, 255); }

.table-hover .table-primary:hover > td, .table-hover .table-primary:hover >=
 th { background-color: rgb(159, 205, 255); }

.table-secondary, .table-secondary > td, .table-secondary > th { background=
-color: rgb(214, 216, 219); }

.table-secondary tbody + tbody, .table-secondary td, .table-secondary th, .=
table-secondary thead th { border-color: rgb(179, 183, 187); }

.table-hover .table-secondary:hover { background-color: rgb(200, 203, 207);=
 }

.table-hover .table-secondary:hover > td, .table-hover .table-secondary:hov=
er > th { background-color: rgb(200, 203, 207); }

.table-success, .table-success > td, .table-success > th { background-color=
: rgb(195, 230, 203); }

.table-success tbody + tbody, .table-success td, .table-success th, .table-=
success thead th { border-color: rgb(143, 209, 158); }

.table-hover .table-success:hover { background-color: rgb(177, 223, 187); }

.table-hover .table-success:hover > td, .table-hover .table-success:hover >=
 th { background-color: rgb(177, 223, 187); }

.table-info, .table-info > td, .table-info > th { background-color: rgb(190=
, 229, 235); }

.table-info tbody + tbody, .table-info td, .table-info th, .table-info thea=
d th { border-color: rgb(134, 207, 218); }

.table-hover .table-info:hover { background-color: rgb(171, 221, 229); }

.table-hover .table-info:hover > td, .table-hover .table-info:hover > th { =
background-color: rgb(171, 221, 229); }

.table-warning, .table-warning > td, .table-warning > th { background-color=
: rgb(255, 238, 186); }

.table-warning tbody + tbody, .table-warning td, .table-warning th, .table-=
warning thead th { border-color: rgb(255, 223, 126); }

.table-hover .table-warning:hover { background-color: rgb(255, 232, 161); }

.table-hover .table-warning:hover > td, .table-hover .table-warning:hover >=
 th { background-color: rgb(255, 232, 161); }

.table-danger, .table-danger > td, .table-danger > th { background-color: r=
gb(245, 198, 203); }

.table-danger tbody + tbody, .table-danger td, .table-danger th, .table-dan=
ger thead th { border-color: rgb(237, 150, 158); }

.table-hover .table-danger:hover { background-color: rgb(241, 176, 183); }

.table-hover .table-danger:hover > td, .table-hover .table-danger:hover > t=
h { background-color: rgb(241, 176, 183); }

.table-light, .table-light > td, .table-light > th { background-color: rgb(=
253, 253, 254); }

.table-light tbody + tbody, .table-light td, .table-light th, .table-light =
thead th { border-color: rgb(251, 252, 252); }

.table-hover .table-light:hover { background-color: rgb(236, 236, 246); }

.table-hover .table-light:hover > td, .table-hover .table-light:hover > th =
{ background-color: rgb(236, 236, 246); }

.table-dark, .table-dark > td, .table-dark > th { background-color: rgb(198=
, 200, 202); }

.table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark thea=
d th { border-color: rgb(149, 153, 156); }

.table-hover .table-dark:hover { background-color: rgb(185, 187, 190); }

.table-hover .table-dark:hover > td, .table-hover .table-dark:hover > th { =
background-color: rgb(185, 187, 190); }

.table-active, .table-active > td, .table-active > th { background-color: r=
gba(0, 0, 0, 0.075); }

.table-hover .table-active:hover { background-color: rgba(0, 0, 0, 0.075); =
}

.table-hover .table-active:hover > td, .table-hover .table-active:hover > t=
h { background-color: rgba(0, 0, 0, 0.075); }

.table .thead-dark th { color: rgb(255, 255, 255); background-color: rgb(52=
, 58, 64); border-color: rgb(69, 77, 85); }

.table .thead-light th { color: rgb(73, 80, 87); background-color: rgb(233,=
 236, 239); border-color: rgb(222, 226, 230); }

.table-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

.table-dark td, .table-dark th, .table-dark thead th { border-color: rgb(69=
, 77, 85); }

.table-dark.table-bordered { border: 0px; }

.table-dark.table-striped tbody tr:nth-of-type(2n+1) { background-color: rg=
ba(255, 255, 255, 0.05); }

.table-dark.table-hover tbody tr:hover { color: rgb(255, 255, 255); backgro=
und-color: rgba(255, 255, 255, 0.075); }

@media (max-width: 575.98px) {
  .table-responsive-sm { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-sm > .table-bordered { border: 0px; }
}

@media (max-width: 767.98px) {
  .table-responsive-md { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-md > .table-bordered { border: 0px; }
}

@media (max-width: 991.98px) {
  .table-responsive-lg { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-lg > .table-bordered { border: 0px; }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-xl > .table-bordered { border: 0px; }
}

.table-responsive { display: block; width: 100%; overflow-x: auto; }

.table-responsive > .table-bordered { border: 0px; }

.form-control { display: block; width: 100%; height: calc(1.5em + 2px + 0.7=
5rem); padding: 0.375rem 0.75rem; font-size: 1rem; font-weight: 400; line-h=
eight: 1.5; color: rgb(73, 80, 87); background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgb(206, 212, 218); border-r=
adius: 0.25rem; transition: border-color 0.15s ease-in-out 0s, box-shadow 0=
.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .form-control { transition: none 0s ease 0s; }
}

.form-control:focus { color: rgb(73, 80, 87); background-color: rgb(255, 25=
5, 255); border-color: rgb(128, 189, 255); outline: 0px; box-shadow: rgba(0=
, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.form-control::-webkit-input-placeholder { color: rgb(108, 117, 125); opaci=
ty: 1; }

.form-control::placeholder { color: rgb(108, 117, 125); opacity: 1; }

.form-control:disabled, .form-control[readonly] { background-color: rgb(233=
, 236, 239); opacity: 1; }

input[type=3D"date"].form-control, input[type=3D"datetime-local"].form-cont=
rol, input[type=3D"month"].form-control, input[type=3D"time"].form-control =
{ appearance: none; }

.form-control-file, .form-control-range { display: block; width: 100%; }

.col-form-label { padding-top: calc(1px + 0.375rem); padding-bottom: calc(1=
px + 0.375rem); margin-bottom: 0px; font-size: inherit; line-height: 1.5; }

.col-form-label-lg { padding-top: calc(1px + 0.5rem); padding-bottom: calc(=
1px + 0.5rem); font-size: 1.25rem; line-height: 1.5; }

.col-form-label-sm { padding-top: calc(1px + 0.25rem); padding-bottom: calc=
(1px + 0.25rem); font-size: 0.875rem; line-height: 1.5; }

.form-control-plaintext { display: block; width: 100%; padding: 0.375rem 0p=
x; margin-bottom: 0px; font-size: 1rem; line-height: 1.5; color: rgb(33, 37=
, 41); background-color: transparent; border-style: solid; border-color: tr=
ansparent; border-image: initial; border-width: 1px 0px; }

.form-control-plaintext.form-control-lg, .form-control-plaintext.form-contr=
ol-sm { padding-right: 0px; padding-left: 0px; }

.form-control-sm { height: calc(1.5em + 2px + 0.5rem); padding: 0.25rem 0.5=
rem; font-size: 0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.form-control-lg { height: calc(1.5em + 2px + 1rem); padding: 0.5rem 1rem; =
font-size: 1.25rem; line-height: 1.5; border-radius: 0.3rem; }

select.form-control[multiple], select.form-control[size] { height: auto; }

textarea.form-control { height: auto; }

.form-group { margin-bottom: 1rem; }

.form-text { display: block; margin-top: 0.25rem; }

.form-row { display: flex; flex-wrap: wrap; margin-right: -5px; margin-left=
: -5px; }

.form-row > .col, .form-row > [class*=3D"col-"] { padding-right: 5px; paddi=
ng-left: 5px; }

.form-check { position: relative; display: block; padding-left: 1.25rem; }

.form-check-input { position: absolute; margin-top: 0.3rem; margin-left: -1=
.25rem; }

.form-check-input:disabled ~ .form-check-label, .form-check-input[disabled]=
 ~ .form-check-label { color: rgb(108, 117, 125); }

.form-check-label { margin-bottom: 0px; }

.form-check-inline { display: inline-flex; align-items: center; padding-lef=
t: 0px; margin-right: 0.75rem; }

.form-check-inline .form-check-input { position: static; margin-top: 0px; m=
argin-right: 0.3125rem; margin-left: 0px; }

.valid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-siz=
e: 80%; color: rgb(40, 167, 69); }

.valid-tooltip { position: absolute; top: 100%; z-index: 5; display: none; =
max-width: 100%; padding: 0.25rem 0.5rem; margin-top: 0.1rem; font-size: 0.=
875rem; line-height: 1.5; color: rgb(255, 255, 255); background-color: rgba=
(40, 167, 69, 0.9); border-radius: 0.25rem; }

.is-valid ~ .valid-feedback, .is-valid ~ .valid-tooltip, .was-validated :va=
lid ~ .valid-feedback, .was-validated :valid ~ .valid-tooltip { display: bl=
ock; }

.form-control.is-valid, .was-validated .form-control:valid { border-color: =
rgb(40, 167, 69); padding-right: calc(1.5em + 0.75rem); background-image: u=
rl("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' width=3D=
'8' height=3D'8' viewBox=3D'0 0 8 8'%3e%3cpath fill=3D'%2328a745' d=3D'M2.3=
 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-=
4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e"); background-repeat: no-repeat; ba=
ckground-position: right calc(0.375em + 0.1875rem) center; background-size:=
 calc(0.75em + 0.375rem) calc(0.75em + 0.375rem); }

.form-control.is-valid:focus, .was-validated .form-control:valid:focus { bo=
rder-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0=
px 0.2rem; }

.was-validated textarea.form-control:valid, textarea.form-control.is-valid =
{ padding-right: calc(1.5em + 0.75rem); background-position: right calc(0.3=
75em + 0.1875rem) top calc(0.375em + 0.1875rem); }

.custom-select.is-valid, .was-validated .custom-select:valid { border-color=
: rgb(40, 167, 69); padding-right: calc(0.75em + 2.3125rem); background: ur=
l("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' width=3D'=
4' height=3D'5' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L=
0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repea=
t, url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' widt=
h=3D'8' height=3D'8' viewBox=3D'0 0 8 8'%3e%3cpath fill=3D'%2328a745' d=3D'=
M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2=
.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") right 1.75rem center / calc(0=
.75em + 0.375rem) calc(0.75em + 0.375rem) no-repeat rgb(255, 255, 255); }

.custom-select.is-valid:focus, .was-validated .custom-select:valid:focus { =
border-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px=
 0px 0.2rem; }

.form-check-input.is-valid ~ .form-check-label, .was-validated .form-check-=
input:valid ~ .form-check-label { color: rgb(40, 167, 69); }

.form-check-input.is-valid ~ .valid-feedback, .form-check-input.is-valid ~ =
.valid-tooltip, .was-validated .form-check-input:valid ~ .valid-feedback, .=
was-validated .form-check-input:valid ~ .valid-tooltip { display: block; }

.custom-control-input.is-valid ~ .custom-control-label, .was-validated .cus=
tom-control-input:valid ~ .custom-control-label { color: rgb(40, 167, 69); =
}

.custom-control-input.is-valid ~ .custom-control-label::before, .was-valida=
ted .custom-control-input:valid ~ .custom-control-label::before { border-co=
lor: rgb(40, 167, 69); }

.custom-control-input.is-valid:checked ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:valid:checked ~ .custom-control-label::be=
fore { border-color: rgb(52, 206, 87); background-color: rgb(52, 206, 87); =
}

.custom-control-input.is-valid:focus ~ .custom-control-label::before, .was-=
validated .custom-control-input:valid:focus ~ .custom-control-label::before=
 { box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label:=
:before, .was-validated .custom-control-input:valid:focus:not(:checked) ~ .=
custom-control-label::before { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid ~ .custom-file-label, .was-validated .custom-fi=
le-input:valid ~ .custom-file-label { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid:focus ~ .custom-file-label, .was-validated .cus=
tom-file-input:valid:focus ~ .custom-file-label { border-color: rgb(40, 167=
, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0px 0.2rem; }

.invalid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-s=
ize: 80%; color: rgb(220, 53, 69); }

.invalid-tooltip { position: absolute; top: 100%; z-index: 5; display: none=
; max-width: 100%; padding: 0.25rem 0.5rem; margin-top: 0.1rem; font-size: =
0.875rem; line-height: 1.5; color: rgb(255, 255, 255); background-color: rg=
ba(220, 53, 69, 0.9); border-radius: 0.25rem; }

.is-invalid ~ .invalid-feedback, .is-invalid ~ .invalid-tooltip, .was-valid=
ated :invalid ~ .invalid-feedback, .was-validated :invalid ~ .invalid-toolt=
ip { display: block; }

.form-control.is-invalid, .was-validated .form-control:invalid { border-col=
or: rgb(220, 53, 69); padding-right: calc(1.5em + 0.75rem); background-imag=
e: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' widt=
h=3D'12' height=3D'12' fill=3D'none' stroke=3D'%23dc3545' viewBox=3D'0 0 12=
 12'%3e%3ccircle cx=3D'6' cy=3D'6' r=3D'4.5'/%3e%3cpath stroke-linejoin=3D'=
round' d=3D'M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx=3D'6' cy=3D'8.2' r=3D'.6' f=
ill=3D'%23dc3545' stroke=3D'none'/%3e%3c/svg%3e"); background-repeat: no-re=
peat; background-position: right calc(0.375em + 0.1875rem) center; backgrou=
nd-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem); }

.form-control.is-invalid:focus, .was-validated .form-control:invalid:focus =
{ border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px 0=
px 0px 0.2rem; }

.was-validated textarea.form-control:invalid, textarea.form-control.is-inva=
lid { padding-right: calc(1.5em + 0.75rem); background-position: right calc=
(0.375em + 0.1875rem) top calc(0.375em + 0.1875rem); }

.custom-select.is-invalid, .was-validated .custom-select:invalid { border-c=
olor: rgb(220, 53, 69); padding-right: calc(0.75em + 2.3125rem); background=
: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' width=
=3D'4' height=3D'5' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M=
2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-r=
epeat, url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' =
width=3D'12' height=3D'12' fill=3D'none' stroke=3D'%23dc3545' viewBox=3D'0 =
0 12 12'%3e%3ccircle cx=3D'6' cy=3D'6' r=3D'4.5'/%3e%3cpath stroke-linejoin=
=3D'round' d=3D'M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx=3D'6' cy=3D'8.2' r=3D'.=
6' fill=3D'%23dc3545' stroke=3D'none'/%3e%3c/svg%3e") right 1.75rem center =
/ calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) no-repeat rgb(255, 255, 2=
55); }

.custom-select.is-invalid:focus, .was-validated .custom-select:invalid:focu=
s { border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px=
 0px 0px 0.2rem; }

.form-check-input.is-invalid ~ .form-check-label, .was-validated .form-chec=
k-input:invalid ~ .form-check-label { color: rgb(220, 53, 69); }

.form-check-input.is-invalid ~ .invalid-feedback, .form-check-input.is-inva=
lid ~ .invalid-tooltip, .was-validated .form-check-input:invalid ~ .invalid=
-feedback, .was-validated .form-check-input:invalid ~ .invalid-tooltip { di=
splay: block; }

.custom-control-input.is-invalid ~ .custom-control-label, .was-validated .c=
ustom-control-input:invalid ~ .custom-control-label { color: rgb(220, 53, 6=
9); }

.custom-control-input.is-invalid ~ .custom-control-label::before, .was-vali=
dated .custom-control-input:invalid ~ .custom-control-label::before { borde=
r-color: rgb(220, 53, 69); }

.custom-control-input.is-invalid:checked ~ .custom-control-label::before, .=
was-validated .custom-control-input:invalid:checked ~ .custom-control-label=
::before { border-color: rgb(228, 96, 109); background-color: rgb(228, 96, =
109); }

.custom-control-input.is-invalid:focus ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:invalid:focus ~ .custom-control-label::be=
fore { box-shadow: rgba(220, 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-labe=
l::before, .was-validated .custom-control-input:invalid:focus:not(:checked)=
 ~ .custom-control-label::before { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid ~ .custom-file-label, .was-validated .custom-=
file-input:invalid ~ .custom-file-label { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid:focus ~ .custom-file-label, .was-validated .c=
ustom-file-input:invalid:focus ~ .custom-file-label { border-color: rgb(220=
, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.form-inline { display: flex; flex-flow: wrap; align-items: center; }

.form-inline .form-check { width: 100%; }

@media (min-width: 576px) {
  .form-inline label { display: flex; align-items: center; justify-content:=
 center; margin-bottom: 0px; }
  .form-inline .form-group { display: flex; flex: 0 0 auto; flex-flow: wrap=
; align-items: center; margin-bottom: 0px; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-plaintext { display: inline-block; }
  .form-inline .custom-select, .form-inline .input-group { width: auto; }
  .form-inline .form-check { display: flex; align-items: center; justify-co=
ntent: center; width: auto; padding-left: 0px; }
  .form-inline .form-check-input { position: relative; flex-shrink: 0; marg=
in-top: 0px; margin-right: 0.25rem; margin-left: 0px; }
  .form-inline .custom-control { align-items: center; justify-content: cent=
er; }
  .form-inline .custom-control-label { margin-bottom: 0px; }
}

.btn { display: inline-block; font-weight: 400; color: rgb(33, 37, 41); tex=
t-align: center; vertical-align: middle; user-select: none; background-colo=
r: transparent; border: 1px solid transparent; padding: 0.375rem 0.75rem; f=
ont-size: 1rem; line-height: 1.5; border-radius: 0.25rem; transition: color=
 0.15s ease-in-out 0s, background-color 0.15s ease-in-out 0s, border-color =
0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .btn { transition: none 0s ease 0s; }
}

.btn:hover { color: rgb(33, 37, 41); text-decoration: none; }

.btn.focus, .btn:focus { outline: 0px; box-shadow: rgba(0, 123, 255, 0.25) =
0px 0px 0px 0.2rem; }

.btn.disabled, .btn:disabled { opacity: 0.65; }

.btn:not(:disabled):not(.disabled) { cursor: pointer; }

a.btn.disabled, fieldset:disabled a.btn { pointer-events: none; }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(0, 10=
5, 217); border-color: rgb(0, 98, 204); }

.btn-primary.focus, .btn-primary:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(0, 105, 217); border-color: rgb(0, 98, 204); box-shadow: rgb=
a(38, 143, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-primary.disabled, .btn-primary:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabl=
ed):not(.disabled):active, .show > .btn-primary.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(0, 98, 204); border-color: rgb(0, 9=
2, 191); }

.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:=
disabled):not(.disabled):active:focus, .show > .btn-primary.dropdown-toggle=
:focus { box-shadow: rgba(38, 143, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 117,=
 125); border-color: rgb(108, 117, 125); }

.btn-secondary:hover { color: rgb(255, 255, 255); background-color: rgb(90,=
 98, 104); border-color: rgb(84, 91, 98); }

.btn-secondary.focus, .btn-secondary:focus { color: rgb(255, 255, 255); bac=
kground-color: rgb(90, 98, 104); border-color: rgb(84, 91, 98); box-shadow:=
 rgba(130, 138, 145, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary.disabled, .btn-secondary:disabled { color: rgb(255, 255, 255=
); background-color: rgb(108, 117, 125); border-color: rgb(108, 117, 125); =
}

.btn-secondary:not(:disabled):not(.disabled).active, .btn-secondary:not(:di=
sabled):not(.disabled):active, .show > .btn-secondary.dropdown-toggle { col=
or: rgb(255, 255, 255); background-color: rgb(84, 91, 98); border-color: rg=
b(78, 85, 91); }

.btn-secondary:not(:disabled):not(.disabled).active:focus, .btn-secondary:n=
ot(:disabled):not(.disabled):active:focus, .show > .btn-secondary.dropdown-=
toggle:focus { box-shadow: rgba(130, 138, 145, 0.5) 0px 0px 0px 0.2rem; }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(33, 1=
36, 56); border-color: rgb(30, 126, 52); }

.btn-success.focus, .btn-success:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(33, 136, 56); border-color: rgb(30, 126, 52); box-shadow: rg=
ba(72, 180, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-success.disabled, .btn-success:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-success:not(:disabled):not(.disabled).active, .btn-success:not(:disabl=
ed):not(.disabled):active, .show > .btn-success.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(30, 126, 52); border-color: rgb(28,=
 116, 48); }

.btn-success:not(:disabled):not(.disabled).active:focus, .btn-success:not(:=
disabled):not(.disabled):active:focus, .show > .btn-success.dropdown-toggle=
:focus { box-shadow: rgba(72, 180, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184);=
 border-color: rgb(23, 162, 184); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(19, 132,=
 150); border-color: rgb(17, 122, 139); }

.btn-info.focus, .btn-info:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(19, 132, 150); border-color: rgb(17, 122, 139); box-shadow: rgba(5=
8, 176, 195, 0.5) 0px 0px 0px 0.2rem; }

.btn-info.disabled, .btn-info:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-info:not(:disabled):not(.disabled).active, .btn-info:not(:disabled):no=
t(.disabled):active, .show > .btn-info.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(17, 122, 139); border-color: rgb(16, 112, 12=
7); }

.btn-info:not(:disabled):not(.disabled).active:focus, .btn-info:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-info.dropdown-toggle:focus { =
box-shadow: rgba(58, 176, 195, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-warning:hover { color: rgb(33, 37, 41); background-color: rgb(224, 168=
, 0); border-color: rgb(211, 158, 0); }

.btn-warning.focus, .btn-warning:focus { color: rgb(33, 37, 41); background=
-color: rgb(224, 168, 0); border-color: rgb(211, 158, 0); box-shadow: rgba(=
222, 170, 12, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning.disabled, .btn-warning:disabled { color: rgb(33, 37, 41); back=
ground-color: rgb(255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-warning:not(:disabled):not(.disabled).active, .btn-warning:not(:disabl=
ed):not(.disabled):active, .show > .btn-warning.dropdown-toggle { color: rg=
b(33, 37, 41); background-color: rgb(211, 158, 0); border-color: rgb(198, 1=
49, 0); }

.btn-warning:not(:disabled):not(.disabled).active:focus, .btn-warning:not(:=
disabled):not(.disabled):active:focus, .show > .btn-warning.dropdown-toggle=
:focus { box-shadow: rgba(222, 170, 12, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69)=
; border-color: rgb(220, 53, 69); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(200, 3=
5, 51); border-color: rgb(189, 33, 48); }

.btn-danger.focus, .btn-danger:focus { color: rgb(255, 255, 255); backgroun=
d-color: rgb(200, 35, 51); border-color: rgb(189, 33, 48); box-shadow: rgba=
(225, 83, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger.disabled, .btn-danger:disabled { color: rgb(255, 255, 255); bac=
kground-color: rgb(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-danger:not(:disabled):not(.disabled).active, .btn-danger:not(:disabled=
):not(.disabled):active, .show > .btn-danger.dropdown-toggle { color: rgb(2=
55, 255, 255); background-color: rgb(189, 33, 48); border-color: rgb(178, 3=
1, 45); }

.btn-danger:not(:disabled):not(.disabled).active:focus, .btn-danger:not(:di=
sabled):not(.disabled):active:focus, .show > .btn-danger.dropdown-toggle:fo=
cus { box-shadow: rgba(225, 83, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); =
border-color: rgb(248, 249, 250); }

.btn-light:hover { color: rgb(33, 37, 41); background-color: rgb(226, 230, =
234); border-color: rgb(218, 224, 229); }

.btn-light.focus, .btn-light:focus { color: rgb(33, 37, 41); background-col=
or: rgb(226, 230, 234); border-color: rgb(218, 224, 229); box-shadow: rgba(=
216, 217, 219, 0.5) 0px 0px 0px 0.2rem; }

.btn-light.disabled, .btn-light:disabled { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(248, 249, 250); border-color: rgb(248, 249, 250); }

.btn-light:not(:disabled):not(.disabled).active, .btn-light:not(:disabled):=
not(.disabled):active, .show > .btn-light.dropdown-toggle { color: rgb(33, =
37, 41); background-color: rgb(218, 224, 229); border-color: rgb(211, 217, =
223); }

.btn-light:not(:disabled):not(.disabled).active:focus, .btn-light:not(:disa=
bled):not(.disabled):active:focus, .show > .btn-light.dropdown-toggle:focus=
 { box-shadow: rgba(216, 217, 219, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); b=
order-color: rgb(52, 58, 64); }

.btn-dark:hover { color: rgb(255, 255, 255); background-color: rgb(35, 39, =
43); border-color: rgb(29, 33, 36); }

.btn-dark.focus, .btn-dark:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(35, 39, 43); border-color: rgb(29, 33, 36); box-shadow: rgba(82, 8=
8, 93, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark.disabled, .btn-dark:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-dark:not(:disabled):not(.disabled).active, .btn-dark:not(:disabled):no=
t(.disabled):active, .show > .btn-dark.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(29, 33, 36); border-color: rgb(23, 26, 29); =
}

.btn-dark:not(:disabled):not(.disabled).active:focus, .btn-dark:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-dark.dropdown-toggle:focus { =
box-shadow: rgba(82, 88, 93, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary { color: rgb(0, 123, 255); border-color: rgb(0, 123, 2=
55); }

.btn-outline-primary:hover { color: rgb(255, 255, 255); background-color: r=
gb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-outline-primary.focus, .btn-outline-primary:focus { box-shadow: rgba(0=
, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary.disabled, .btn-outline-primary:disabled { color: rgb(0=
, 123, 255); background-color: transparent; }

.btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-pri=
mary:not(:disabled):not(.disabled):active, .show > .btn-outline-primary.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-outline-primary:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-primary:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-primary.dropdown-toggle:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-secondary { color: rgb(108, 117, 125); border-color: rgb(108, =
117, 125); }

.btn-outline-secondary:hover { color: rgb(255, 255, 255); background-color:=
 rgb(108, 117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary.focus, .btn-outline-secondary:focus { box-shadow: rg=
ba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled { color: r=
gb(108, 117, 125); background-color: transparent; }

.btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-s=
econdary:not(:disabled):not(.disabled):active, .show > .btn-outline-seconda=
ry.dropdown-toggle { color: rgb(255, 255, 255); background-color: rgb(108, =
117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:not(:disabled):not(.disabled).active:focus, .btn-out=
line-secondary:not(:disabled):not(.disabled):active:focus, .show > .btn-out=
line-secondary.dropdown-toggle:focus { box-shadow: rgba(108, 117, 125, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-outline-success { color: rgb(40, 167, 69); border-color: rgb(40, 167, =
69); }

.btn-outline-success:hover { color: rgb(255, 255, 255); background-color: r=
gb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-outline-success.focus, .btn-outline-success:focus { box-shadow: rgba(4=
0, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-success.disabled, .btn-outline-success:disabled { color: rgb(4=
0, 167, 69); background-color: transparent; }

.btn-outline-success:not(:disabled):not(.disabled).active, .btn-outline-suc=
cess:not(:disabled):not(.disabled):active, .show > .btn-outline-success.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-outline-success:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-success:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-success.dropdown-toggle:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-info { color: rgb(23, 162, 184); border-color: rgb(23, 162, 18=
4); }

.btn-outline-info:hover { color: rgb(255, 255, 255); background-color: rgb(=
23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-outline-info.focus, .btn-outline-info:focus { box-shadow: rgba(23, 162=
, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-info.disabled, .btn-outline-info:disabled { color: rgb(23, 162=
, 184); background-color: transparent; }

.btn-outline-info:not(:disabled):not(.disabled).active, .btn-outline-info:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-info.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184); borde=
r-color: rgb(23, 162, 184); }

.btn-outline-info:not(:disabled):not(.disabled).active:focus, .btn-outline-=
info:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-info.=
dropdown-toggle:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2=
rem; }

.btn-outline-warning { color: rgb(255, 193, 7); border-color: rgb(255, 193,=
 7); }

.btn-outline-warning:hover { color: rgb(33, 37, 41); background-color: rgb(=
255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-outline-warning.focus, .btn-outline-warning:focus { box-shadow: rgba(2=
55, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-warning.disabled, .btn-outline-warning:disabled { color: rgb(2=
55, 193, 7); background-color: transparent; }

.btn-outline-warning:not(:disabled):not(.disabled).active, .btn-outline-war=
ning:not(:disabled):not(.disabled):active, .show > .btn-outline-warning.dro=
pdown-toggle { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-outline-warning:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-warning:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-warning.dropdown-toggle:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-danger { color: rgb(220, 53, 69); border-color: rgb(220, 53, 6=
9); }

.btn-outline-danger:hover { color: rgb(255, 255, 255); background-color: rg=
b(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-outline-danger.focus, .btn-outline-danger:focus { box-shadow: rgba(220=
, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-danger.disabled, .btn-outline-danger:disabled { color: rgb(220=
, 53, 69); background-color: transparent; }

.btn-outline-danger:not(:disabled):not(.disabled).active, .btn-outline-dang=
er:not(:disabled):not(.disabled):active, .show > .btn-outline-danger.dropdo=
wn-toggle { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69); =
border-color: rgb(220, 53, 69); }

.btn-outline-danger:not(:disabled):not(.disabled).active:focus, .btn-outlin=
e-danger:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-d=
anger.dropdown-toggle:focus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0p=
x 0.2rem; }

.btn-outline-light { color: rgb(248, 249, 250); border-color: rgb(248, 249,=
 250); }

.btn-outline-light:hover { color: rgb(33, 37, 41); background-color: rgb(24=
8, 249, 250); border-color: rgb(248, 249, 250); }

.btn-outline-light.focus, .btn-outline-light:focus { box-shadow: rgba(248, =
249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-light.disabled, .btn-outline-light:disabled { color: rgb(248, =
249, 250); background-color: transparent; }

.btn-outline-light:not(:disabled):not(.disabled).active, .btn-outline-light=
:not(:disabled):not(.disabled):active, .show > .btn-outline-light.dropdown-=
toggle { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); bord=
er-color: rgb(248, 249, 250); }

.btn-outline-light:not(:disabled):not(.disabled).active:focus, .btn-outline=
-light:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-lig=
ht.dropdown-toggle:focus { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px=
 0.2rem; }

.btn-outline-dark { color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); =
}

.btn-outline-dark:hover { color: rgb(255, 255, 255); background-color: rgb(=
52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-outline-dark.focus, .btn-outline-dark:focus { box-shadow: rgba(52, 58,=
 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-dark.disabled, .btn-outline-dark:disabled { color: rgb(52, 58,=
 64); background-color: transparent; }

.btn-outline-dark:not(:disabled):not(.disabled).active, .btn-outline-dark:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-dark.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); border-=
color: rgb(52, 58, 64); }

.btn-outline-dark:not(:disabled):not(.disabled).active:focus, .btn-outline-=
dark:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-dark.=
dropdown-toggle:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2re=
m; }

.btn-link { font-weight: 400; color: rgb(0, 123, 255); text-decoration: non=
e; }

.btn-link:hover { color: rgb(0, 86, 179); text-decoration: underline; }

.btn-link.focus, .btn-link:focus { text-decoration: underline; }

.btn-link.disabled, .btn-link:disabled { color: rgb(108, 117, 125); pointer=
-events: none; }

.btn-group-lg > .btn, .btn-lg { padding: 0.5rem 1rem; font-size: 1.25rem; l=
ine-height: 1.5; border-radius: 0.3rem; }

.btn-group-sm > .btn, .btn-sm { padding: 0.25rem 0.5rem; font-size: 0.875re=
m; line-height: 1.5; border-radius: 0.2rem; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 0.5rem; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { transition: opacity 0.15s linear 0s; }

@media (prefers-reduced-motion: reduce) {
  .fade { transition: none 0s ease 0s; }
}

.fade:not(.show) { opacity: 0; }

.collapse:not(.show) { display: none; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .collapsing { transition: none 0s ease 0s; }
}

.dropdown, .dropleft, .dropright, .dropup { position: relative; }

.dropdown-toggle { white-space: nowrap; }

.dropdown-toggle::after { display: inline-block; margin-left: 0.255em; vert=
ical-align: 0.255em; content: ""; border-width: 0.3em 0.3em 0px; border-top=
-style: solid; border-top-color: initial; border-right-style: solid; border=
-right-color: transparent; border-bottom-style: initial; border-bottom-colo=
r: initial; border-left-style: solid; border-left-color: transparent; }

.dropdown-toggle:empty::after { margin-left: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 10rem; padding: 0.5rem 0px; margin: 0=
.125rem 0px 0px; font-size: 1rem; color: rgb(33, 37, 41); text-align: left;=
 list-style: none; background-color: rgb(255, 255, 255); background-clip: p=
adding-box; border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 0.25rem; =
}

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

@media (min-width: 576px) {
  .dropdown-menu-sm-left { right: auto; left: 0px; }
  .dropdown-menu-sm-right { right: 0px; left: auto; }
}

@media (min-width: 768px) {
  .dropdown-menu-md-left { right: auto; left: 0px; }
  .dropdown-menu-md-right { right: 0px; left: auto; }
}

@media (min-width: 992px) {
  .dropdown-menu-lg-left { right: auto; left: 0px; }
  .dropdown-menu-lg-right { right: 0px; left: auto; }
}

@media (min-width: 1200px) {
  .dropdown-menu-xl-left { right: auto; left: 0px; }
  .dropdown-menu-xl-right { right: 0px; left: auto; }
}

.dropup .dropdown-menu { top: auto; bottom: 100%; margin-top: 0px; margin-b=
ottom: 0.125rem; }

.dropup .dropdown-toggle::after { display: inline-block; margin-left: 0.255=
em; vertical-align: 0.255em; content: ""; border-width: 0px 0.3em 0.3em; bo=
rder-top-style: initial; border-top-color: initial; border-right-style: sol=
id; border-right-color: transparent; border-bottom-style: solid; border-bot=
tom-color: initial; border-left-style: solid; border-left-color: transparen=
t; }

.dropup .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-menu { top: 0px; right: auto; left: 100%; margin-top: =
0px; margin-left: 0.125rem; }

.dropright .dropdown-toggle::after { display: inline-block; margin-left: 0.=
255em; vertical-align: 0.255em; content: ""; border-width: 0.3em 0px 0.3em =
0.3em; border-top-style: solid; border-top-color: transparent; border-right=
-style: initial; border-right-color: initial; border-bottom-style: solid; b=
order-bottom-color: transparent; border-left-style: solid; border-left-colo=
r: initial; }

.dropright .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-toggle::after { vertical-align: 0px; }

.dropleft .dropdown-menu { top: 0px; right: 100%; left: auto; margin-top: 0=
px; margin-right: 0.125rem; }

.dropleft .dropdown-toggle::after { display: inline-block; margin-left: 0.2=
55em; vertical-align: 0.255em; content: ""; }

.dropleft .dropdown-toggle::after { display: none; }

.dropleft .dropdown-toggle::before { display: inline-block; margin-right: 0=
.255em; vertical-align: 0.255em; content: ""; border-top: 0.3em solid trans=
parent; border-right: 0.3em solid; border-bottom: 0.3em solid transparent; =
}

.dropleft .dropdown-toggle:empty::after { margin-left: 0px; }

.dropleft .dropdown-toggle::before { vertical-align: 0px; }

.dropdown-menu[x-placement^=3D"bottom"], .dropdown-menu[x-placement^=3D"lef=
t"], .dropdown-menu[x-placement^=3D"right"], .dropdown-menu[x-placement^=3D=
"top"] { right: auto; bottom: auto; }

.dropdown-divider { height: 0px; margin: 0.5rem 0px; overflow: hidden; bord=
er-top: 1px solid rgb(233, 236, 239); }

.dropdown-item { display: block; width: 100%; padding: 0.25rem 1.5rem; clea=
r: both; font-weight: 400; color: rgb(33, 37, 41); text-align: inherit; whi=
te-space: nowrap; background-color: transparent; border: 0px; }

.dropdown-item:focus, .dropdown-item:hover { color: rgb(22, 24, 27); text-d=
ecoration: none; background-color: rgb(248, 249, 250); }

.dropdown-item.active, .dropdown-item:active { color: rgb(255, 255, 255); t=
ext-decoration: none; background-color: rgb(0, 123, 255); }

.dropdown-item.disabled, .dropdown-item:disabled { color: rgb(108, 117, 125=
); pointer-events: none; background-color: transparent; }

.dropdown-menu.show { display: block; }

.dropdown-header { display: block; padding: 0.5rem 1.5rem; margin-bottom: 0=
px; font-size: 0.875rem; color: rgb(108, 117, 125); white-space: nowrap; }

.dropdown-item-text { display: block; padding: 0.25rem 1.5rem; color: rgb(3=
3, 37, 41); }

.btn-group, .btn-group-vertical { position: relative; display: inline-flex;=
 vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; flex: 1=
 1 auto; }

.btn-group-vertical > .btn:hover, .btn-group > .btn:hover { z-index: 1; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group > .btn.active, .btn-group > .btn:ac=
tive, .btn-group > .btn:focus { z-index: 1; }

.btn-toolbar { display: flex; flex-wrap: wrap; justify-content: flex-start;=
 }

.btn-toolbar .input-group { width: auto; }

.btn-group > .btn-group:not(:first-child), .btn-group > .btn:not(:first-chi=
ld) { margin-left: -1px; }

.btn-group > .btn-group:not(:last-child) > .btn, .btn-group > .btn:not(:las=
t-child):not(.dropdown-toggle) { border-top-right-radius: 0px; border-botto=
m-right-radius: 0px; }

.btn-group > .btn-group:not(:first-child) > .btn, .btn-group > .btn:not(:fi=
rst-child) { border-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.dropdown-toggle-split { padding-right: 0.5625rem; padding-left: 0.5625rem;=
 }

.dropdown-toggle-split::after, .dropright .dropdown-toggle-split::after, .d=
ropup .dropdown-toggle-split::after { margin-left: 0px; }

.dropleft .dropdown-toggle-split::before { margin-right: 0px; }

.btn-group-sm > .btn + .dropdown-toggle-split, .btn-sm + .dropdown-toggle-s=
plit { padding-right: 0.375rem; padding-left: 0.375rem; }

.btn-group-lg > .btn + .dropdown-toggle-split, .btn-lg + .dropdown-toggle-s=
plit { padding-right: 0.75rem; padding-left: 0.75rem; }

.btn-group-vertical { flex-direction: column; align-items: flex-start; just=
ify-content: center; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group { width: 100%;=
 }

.btn-group-vertical > .btn-group:not(:first-child), .btn-group-vertical > .=
btn:not(:first-child) { margin-top: -1px; }

.btn-group-vertical > .btn-group:not(:last-child) > .btn, .btn-group-vertic=
al > .btn:not(:last-child):not(.dropdown-toggle) { border-bottom-right-radi=
us: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:not(:first-child) > .btn, .btn-group-verti=
cal > .btn:not(:first-child) { border-top-left-radius: 0px; border-top-righ=
t-radius: 0px; }

.btn-group-toggle > .btn, .btn-group-toggle > .btn-group > .btn { margin-bo=
ttom: 0px; }

.btn-group-toggle > .btn input[type=3D"checkbox"], .btn-group-toggle > .btn=
 input[type=3D"radio"], .btn-group-toggle > .btn-group > .btn input[type=3D=
"checkbox"], .btn-group-toggle > .btn-group > .btn input[type=3D"radio"] { =
position: absolute; clip: rect(0px, 0px, 0px, 0px); pointer-events: none; }

.input-group { position: relative; display: flex; flex-wrap: wrap; align-it=
ems: stretch; width: 100%; }

.input-group > .custom-file, .input-group > .custom-select, .input-group > =
.form-control, .input-group > .form-control-plaintext { position: relative;=
 flex: 1 1 auto; width: 1%; min-width: 0px; margin-bottom: 0px; }

.input-group > .custom-file + .custom-file, .input-group > .custom-file + .=
custom-select, .input-group > .custom-file + .form-control, .input-group > =
.custom-select + .custom-file, .input-group > .custom-select + .custom-sele=
ct, .input-group > .custom-select + .form-control, .input-group > .form-con=
trol + .custom-file, .input-group > .form-control + .custom-select, .input-=
group > .form-control + .form-control, .input-group > .form-control-plainte=
xt + .custom-file, .input-group > .form-control-plaintext + .custom-select,=
 .input-group > .form-control-plaintext + .form-control { margin-left: -1px=
; }

.input-group > .custom-file .custom-file-input:focus ~ .custom-file-label, =
.input-group > .custom-select:focus, .input-group > .form-control:focus { z=
-index: 3; }

.input-group > .custom-file .custom-file-input:focus { z-index: 4; }

.input-group > .custom-select:not(:last-child), .input-group > .form-contro=
l:not(:last-child) { border-top-right-radius: 0px; border-bottom-right-radi=
us: 0px; }

.input-group > .custom-select:not(:first-child), .input-group > .form-contr=
ol:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.input-group > .custom-file { display: flex; align-items: center; }

.input-group > .custom-file:not(:last-child) .custom-file-label, .input-gro=
up > .custom-file:not(:last-child) .custom-file-label::after { border-top-r=
ight-radius: 0px; border-bottom-right-radius: 0px; }

.input-group > .custom-file:not(:first-child) .custom-file-label { border-t=
op-left-radius: 0px; border-bottom-left-radius: 0px; }

.input-group-append, .input-group-prepend { display: flex; }

.input-group-append .btn, .input-group-prepend .btn { position: relative; z=
-index: 2; }

.input-group-append .btn:focus, .input-group-prepend .btn:focus { z-index: =
3; }

.input-group-append .btn + .btn, .input-group-append .btn + .input-group-te=
xt, .input-group-append .input-group-text + .btn, .input-group-append .inpu=
t-group-text + .input-group-text, .input-group-prepend .btn + .btn, .input-=
group-prepend .btn + .input-group-text, .input-group-prepend .input-group-t=
ext + .btn, .input-group-prepend .input-group-text + .input-group-text { ma=
rgin-left: -1px; }

.input-group-prepend { margin-right: -1px; }

.input-group-append { margin-left: -1px; }

.input-group-text { display: flex; align-items: center; padding: 0.375rem 0=
.75rem; margin-bottom: 0px; font-size: 1rem; font-weight: 400; line-height:=
 1.5; color: rgb(73, 80, 87); text-align: center; white-space: nowrap; back=
ground-color: rgb(233, 236, 239); border: 1px solid rgb(206, 212, 218); bor=
der-radius: 0.25rem; }

.input-group-text input[type=3D"checkbox"], .input-group-text input[type=3D=
"radio"] { margin-top: 0px; }

.input-group-lg > .custom-select, .input-group-lg > .form-control:not(texta=
rea) { height: calc(1.5em + 2px + 1rem); }

.input-group-lg > .custom-select, .input-group-lg > .form-control, .input-g=
roup-lg > .input-group-append > .btn, .input-group-lg > .input-group-append=
 > .input-group-text, .input-group-lg > .input-group-prepend > .btn, .input=
-group-lg > .input-group-prepend > .input-group-text { padding: 0.5rem 1rem=
; font-size: 1.25rem; line-height: 1.5; border-radius: 0.3rem; }

.input-group-sm > .custom-select, .input-group-sm > .form-control:not(texta=
rea) { height: calc(1.5em + 2px + 0.5rem); }

.input-group-sm > .custom-select, .input-group-sm > .form-control, .input-g=
roup-sm > .input-group-append > .btn, .input-group-sm > .input-group-append=
 > .input-group-text, .input-group-sm > .input-group-prepend > .btn, .input=
-group-sm > .input-group-prepend > .input-group-text { padding: 0.25rem 0.5=
rem; font-size: 0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.input-group-lg > .custom-select, .input-group-sm > .custom-select { paddin=
g-right: 1.75rem; }

.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.=
dropdown-toggle), .input-group > .input-group-append:last-child > .input-gr=
oup-text:not(:last-child), .input-group > .input-group-append:not(:last-chi=
ld) > .btn, .input-group > .input-group-append:not(:last-child) > .input-gr=
oup-text, .input-group > .input-group-prepend > .btn, .input-group > .input=
-group-prepend > .input-group-text { border-top-right-radius: 0px; border-b=
ottom-right-radius: 0px; }

.input-group > .input-group-append > .btn, .input-group > .input-group-appe=
nd > .input-group-text, .input-group > .input-group-prepend:first-child > .=
btn:not(:first-child), .input-group > .input-group-prepend:first-child > .i=
nput-group-text:not(:first-child), .input-group > .input-group-prepend:not(=
:first-child) > .btn, .input-group > .input-group-prepend:not(:first-child)=
 > .input-group-text { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.custom-control { position: relative; display: block; min-height: 1.5rem; p=
adding-left: 1.5rem; }

.custom-control-inline { display: inline-flex; margin-right: 1rem; }

.custom-control-input { position: absolute; left: 0px; z-index: -1; width: =
1rem; height: 1.25rem; opacity: 0; }

.custom-control-input:checked ~ .custom-control-label::before { color: rgb(=
255, 255, 255); border-color: rgb(0, 123, 255); background-color: rgb(0, 12=
3, 255); }

.custom-control-input:focus ~ .custom-control-label::before { box-shadow: r=
gba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input:focus:not(:checked) ~ .custom-control-label::before {=
 border-color: rgb(128, 189, 255); }

.custom-control-input:not(:disabled):active ~ .custom-control-label::before=
 { color: rgb(255, 255, 255); background-color: rgb(179, 215, 255); border-=
color: rgb(179, 215, 255); }

.custom-control-input:disabled ~ .custom-control-label, .custom-control-inp=
ut[disabled] ~ .custom-control-label { color: rgb(108, 117, 125); }

.custom-control-input:disabled ~ .custom-control-label::before, .custom-con=
trol-input[disabled] ~ .custom-control-label::before { background-color: rg=
b(233, 236, 239); }

.custom-control-label { position: relative; margin-bottom: 0px; vertical-al=
ign: top; }

.custom-control-label::before { position: absolute; top: 0.25rem; left: -1.=
5rem; display: block; width: 1rem; height: 1rem; pointer-events: none; cont=
ent: ""; background-color: rgb(255, 255, 255); border: 1px solid rgb(173, 1=
81, 189); }

.custom-control-label::after { position: absolute; top: 0.25rem; left: -1.5=
rem; display: block; width: 1rem; height: 1rem; content: ""; background: 50=
% center / 50% 50% no-repeat; }

.custom-checkbox .custom-control-label::before { border-radius: 0.25rem; }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::aft=
er { background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w=
3.org/2000/svg' width=3D'8' height=3D'8' viewBox=3D'0 0 8 8'%3e%3cpath fill=
=3D'%23fff' d=3D'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193=
z'/%3e%3c/svg%3e"); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::before { border-color: rgb(0, 123, 255); background-color: rgb(0, 123, 2=
55); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::after { background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http:/=
/www.w3.org/2000/svg' width=3D'4' height=3D'4' viewBox=3D'0 0 4 4'%3e%3cpat=
h stroke=3D'%23fff' d=3D'M0 2h4'/%3e%3c/svg%3e"); }

.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-l=
abel::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-con=
trol-label::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-radio .custom-control-label::before { border-radius: 50%; }

.custom-radio .custom-control-input:checked ~ .custom-control-label::after =
{ background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.o=
rg/2000/svg' width=3D'12' height=3D'12' viewBox=3D'-4 -4 8 8'%3e%3ccircle r=
=3D'3' fill=3D'%23fff'/%3e%3c/svg%3e"); }

.custom-radio .custom-control-input:disabled:checked ~ .custom-control-labe=
l::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-switch { padding-left: 2.25rem; }

.custom-switch .custom-control-label::before { left: -2.25rem; width: 1.75r=
em; pointer-events: all; border-radius: 0.5rem; }

.custom-switch .custom-control-label::after { top: calc(2px + 0.25rem); lef=
t: calc(2px - 2.25rem); width: calc(-4px + 1rem); height: calc(-4px + 1rem)=
; background-color: rgb(173, 181, 189); border-radius: 0.5rem; transition: =
transform 0.15s ease-in-out 0s, background-color 0.15s ease-in-out 0s, bord=
er-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s, -webkit-tra=
nsform 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .custom-switch .custom-control-label::after { transition: none 0s ease 0s=
; }
}

.custom-switch .custom-control-input:checked ~ .custom-control-label::after=
 { background-color: rgb(255, 255, 255); transform: translateX(0.75rem); }

.custom-switch .custom-control-input:disabled:checked ~ .custom-control-lab=
el::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-select { display: inline-block; width: 100%; height: calc(1.5em + 2=
px + 0.75rem); padding: 0.375rem 1.75rem 0.375rem 0.75rem; font-size: 1rem;=
 font-weight: 400; line-height: 1.5; color: rgb(73, 80, 87); vertical-align=
: middle; background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3=
.org/2000/svg' width=3D'4' height=3D'5' viewBox=3D'0 0 4 5'%3e%3cpath fill=
=3D'%23343a40' d=3D'M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem c=
enter / 8px 10px no-repeat rgb(255, 255, 255); border: 1px solid rgb(206, 2=
12, 218); border-radius: 0.25rem; appearance: none; }

.custom-select:focus { border-color: rgb(128, 189, 255); outline: 0px; box-=
shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-select[multiple], .custom-select[size]:not([size=3D"1"]) { height: =
auto; padding-right: 0.75rem; background-image: none; }

.custom-select:disabled { color: rgb(108, 117, 125); background-color: rgb(=
233, 236, 239); }

.custom-select-sm { height: calc(1.5em + 2px + 0.5rem); padding-top: 0.25re=
m; padding-bottom: 0.25rem; padding-left: 0.5rem; font-size: 0.875rem; }

.custom-select-lg { height: calc(1.5em + 2px + 1rem); padding-top: 0.5rem; =
padding-bottom: 0.5rem; padding-left: 1rem; font-size: 1.25rem; }

.custom-file { position: relative; display: inline-block; width: 100%; heig=
ht: calc(1.5em + 2px + 0.75rem); margin-bottom: 0px; }

.custom-file-input { position: relative; z-index: 2; width: 100%; height: c=
alc(1.5em + 2px + 0.75rem); margin: 0px; opacity: 0; }

.custom-file-input:focus ~ .custom-file-label { border-color: rgb(128, 189,=
 255); box-shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-file-input:disabled ~ .custom-file-label, .custom-file-input[disabl=
ed] ~ .custom-file-label { background-color: rgb(233, 236, 239); }

.custom-file-input:lang(en) ~ .custom-file-label::after { content: "Browse"=
; }

.custom-file-input ~ .custom-file-label[data-browse]::after { content: attr=
(data-browse); }

.custom-file-label { position: absolute; top: 0px; right: 0px; left: 0px; z=
-index: 1; height: calc(1.5em + 2px + 0.75rem); padding: 0.375rem 0.75rem; =
font-weight: 400; line-height: 1.5; color: rgb(73, 80, 87); background-colo=
r: rgb(255, 255, 255); border: 1px solid rgb(206, 212, 218); border-radius:=
 0.25rem; }

.custom-file-label::after { position: absolute; top: 0px; right: 0px; botto=
m: 0px; z-index: 3; display: block; height: calc(1.5em + 0.75rem); padding:=
 0.375rem 0.75rem; line-height: 1.5; color: rgb(73, 80, 87); content: "Brow=
se"; background-color: rgb(233, 236, 239); border-left: inherit; border-rad=
ius: 0px 0.25rem 0.25rem 0px; }

.custom-range { width: 100%; height: 1.4rem; padding: 0px; background-color=
: transparent; appearance: none; }

.custom-range:focus { outline: 0px; }

.custom-range:focus::-webkit-slider-thumb { box-shadow: rgb(255, 255, 255) =
0px 0px 0px 1px, rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-range::-webkit-slider-thumb { width: 1rem; height: 1rem; margin-top=
: -0.25rem; background-color: rgb(0, 123, 255); border: 0px; border-radius:=
 1rem; transition: background-color 0.15s ease-in-out 0s, border-color 0.15=
s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; appearance: none; }

@media (prefers-reduced-motion: reduce) {
  .custom-range::-webkit-slider-thumb { transition: none 0s ease 0s; }
}

.custom-range::-webkit-slider-thumb:active { background-color: rgb(179, 215=
, 255); }

.custom-range::-webkit-slider-runnable-track { width: 100%; height: 0.5rem;=
 color: transparent; cursor: pointer; background-color: rgb(222, 226, 230);=
 border-color: transparent; border-radius: 1rem; }

@media (prefers-reduced-motion: reduce) {
}

@media (prefers-reduced-motion: reduce) {
}

.custom-range:disabled::-webkit-slider-thumb { background-color: rgb(173, 1=
81, 189); }

.custom-range:disabled::-webkit-slider-runnable-track { cursor: default; }

.custom-control-label::before, .custom-file-label, .custom-select { transit=
ion: background-color 0.15s ease-in-out 0s, border-color 0.15s ease-in-out =
0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .custom-control-label::before, .custom-file-label, .custom-select { trans=
ition: none 0s ease 0s; }
}

.nav { display: flex; flex-wrap: wrap; padding-left: 0px; margin-bottom: 0p=
x; list-style: none; }

.nav-link { display: block; padding: 0.5rem 1rem; }

.nav-link:focus, .nav-link:hover { text-decoration: none; }

.nav-link.disabled { color: rgb(108, 117, 125); pointer-events: none; curso=
r: default; }

.nav-tabs { border-bottom: 1px solid rgb(222, 226, 230); }

.nav-tabs .nav-item { margin-bottom: -1px; }

.nav-tabs .nav-link { border: 1px solid transparent; border-top-left-radius=
: 0.25rem; border-top-right-radius: 0.25rem; }

.nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover { border-color: rgb(23=
3, 236, 239) rgb(233, 236, 239) rgb(222, 226, 230); }

.nav-tabs .nav-link.disabled { color: rgb(108, 117, 125); background-color:=
 transparent; border-color: transparent; }

.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active { color: rgb=
(73, 80, 87); background-color: rgb(255, 255, 255); border-color: rgb(222, =
226, 230) rgb(222, 226, 230) rgb(255, 255, 255); }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.nav-pills .nav-link { border-radius: 0.25rem; }

.nav-pills .nav-link.active, .nav-pills .show > .nav-link { color: rgb(255,=
 255, 255); background-color: rgb(0, 123, 255); }

.nav-fill .nav-item { flex: 1 1 auto; text-align: center; }

.nav-justified .nav-item { flex-basis: 0px; flex-grow: 1; text-align: cente=
r; }

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.navbar { position: relative; display: flex; flex-wrap: wrap; align-items: =
center; justify-content: space-between; padding: 0.5rem 1rem; }

.navbar .container, .navbar .container-fluid, .navbar .container-lg, .navba=
r .container-md, .navbar .container-sm, .navbar .container-xl { display: fl=
ex; flex-wrap: wrap; align-items: center; justify-content: space-between; }

.navbar-brand { display: inline-block; padding-top: 0.3125rem; padding-bott=
om: 0.3125rem; margin-right: 1rem; font-size: 1.25rem; line-height: inherit=
; white-space: nowrap; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-nav { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; list-style: none; }

.navbar-nav .nav-link { padding-right: 0px; padding-left: 0px; }

.navbar-nav .dropdown-menu { position: static; float: none; }

.navbar-text { display: inline-block; padding-top: 0.5rem; padding-bottom: =
0.5rem; }

.navbar-collapse { flex-basis: 100%; flex-grow: 1; align-items: center; }

.navbar-toggler { padding: 0.25rem 0.75rem; font-size: 1.25rem; line-height=
: 1; background-color: transparent; border: 1px solid transparent; border-r=
adius: 0.25rem; }

.navbar-toggler:focus, .navbar-toggler:hover { text-decoration: none; }

.navbar-toggler-icon { display: inline-block; width: 1.5em; height: 1.5em; =
vertical-align: middle; content: ""; background: center center / 100% 100% =
no-repeat; }

@media (max-width: 575.98px) {
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid, .na=
vbar-expand-sm > .container-lg, .navbar-expand-sm > .container-md, .navbar-=
expand-sm > .container-sm, .navbar-expand-sm > .container-xl { padding-righ=
t: 0px; padding-left: 0px; }
}

@media (min-width: 576px) {
  .navbar-expand-sm { flex-flow: row; justify-content: flex-start; }
  .navbar-expand-sm .navbar-nav { flex-direction: row; }
  .navbar-expand-sm .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-sm .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid, .na=
vbar-expand-sm > .container-lg, .navbar-expand-sm > .container-md, .navbar-=
expand-sm > .container-sm, .navbar-expand-sm > .container-xl { flex-wrap: n=
owrap; }
  .navbar-expand-sm .navbar-collapse { display: flex !important; flex-basis=
: auto; }
  .navbar-expand-sm .navbar-toggler { display: none; }
}

@media (max-width: 767.98px) {
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid, .na=
vbar-expand-md > .container-lg, .navbar-expand-md > .container-md, .navbar-=
expand-md > .container-sm, .navbar-expand-md > .container-xl { padding-righ=
t: 0px; padding-left: 0px; }
}

@media (min-width: 768px) {
  .navbar-expand-md { flex-flow: row; justify-content: flex-start; }
  .navbar-expand-md .navbar-nav { flex-direction: row; }
  .navbar-expand-md .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-md .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid, .na=
vbar-expand-md > .container-lg, .navbar-expand-md > .container-md, .navbar-=
expand-md > .container-sm, .navbar-expand-md > .container-xl { flex-wrap: n=
owrap; }
  .navbar-expand-md .navbar-collapse { display: flex !important; flex-basis=
: auto; }
  .navbar-expand-md .navbar-toggler { display: none; }
}

@media (max-width: 991.98px) {
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid, .na=
vbar-expand-lg > .container-lg, .navbar-expand-lg > .container-md, .navbar-=
expand-lg > .container-sm, .navbar-expand-lg > .container-xl { padding-righ=
t: 0px; padding-left: 0px; }
}

@media (min-width: 992px) {
  .navbar-expand-lg { flex-flow: row; justify-content: flex-start; }
  .navbar-expand-lg .navbar-nav { flex-direction: row; }
  .navbar-expand-lg .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-lg .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid, .na=
vbar-expand-lg > .container-lg, .navbar-expand-lg > .container-md, .navbar-=
expand-lg > .container-sm, .navbar-expand-lg > .container-xl { flex-wrap: n=
owrap; }
  .navbar-expand-lg .navbar-collapse { display: flex !important; flex-basis=
: auto; }
  .navbar-expand-lg .navbar-toggler { display: none; }
}

@media (max-width: 1199.98px) {
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid, .na=
vbar-expand-xl > .container-lg, .navbar-expand-xl > .container-md, .navbar-=
expand-xl > .container-sm, .navbar-expand-xl > .container-xl { padding-righ=
t: 0px; padding-left: 0px; }
}

@media (min-width: 1200px) {
  .navbar-expand-xl { flex-flow: row; justify-content: flex-start; }
  .navbar-expand-xl .navbar-nav { flex-direction: row; }
  .navbar-expand-xl .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-xl .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid, .na=
vbar-expand-xl > .container-lg, .navbar-expand-xl > .container-md, .navbar-=
expand-xl > .container-sm, .navbar-expand-xl > .container-xl { flex-wrap: n=
owrap; }
  .navbar-expand-xl .navbar-collapse { display: flex !important; flex-basis=
: auto; }
  .navbar-expand-xl .navbar-toggler { display: none; }
}

.navbar-expand { flex-flow: row; justify-content: flex-start; }

.navbar-expand > .container, .navbar-expand > .container-fluid, .navbar-exp=
and > .container-lg, .navbar-expand > .container-md, .navbar-expand > .cont=
ainer-sm, .navbar-expand > .container-xl { padding-right: 0px; padding-left=
: 0px; }

.navbar-expand .navbar-nav { flex-direction: row; }

.navbar-expand .navbar-nav .dropdown-menu { position: absolute; }

.navbar-expand .navbar-nav .nav-link { padding-right: 0.5rem; padding-left:=
 0.5rem; }

.navbar-expand > .container, .navbar-expand > .container-fluid, .navbar-exp=
and > .container-lg, .navbar-expand > .container-md, .navbar-expand > .cont=
ainer-sm, .navbar-expand > .container-xl { flex-wrap: nowrap; }

.navbar-expand .navbar-collapse { display: flex !important; flex-basis: aut=
o; }

.navbar-expand .navbar-toggler { display: none; }

.navbar-light .navbar-brand { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-brand:focus, .navbar-light .navbar-brand:hover { colo=
r: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-nav .nav-link { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-nav .nav-link:focus, .navbar-light .navbar-nav .nav-l=
ink:hover { color: rgba(0, 0, 0, 0.7); }

.navbar-light .navbar-nav .nav-link.disabled { color: rgba(0, 0, 0, 0.3); }

.navbar-light .navbar-nav .active > .nav-link, .navbar-light .navbar-nav .n=
av-link.active, .navbar-light .navbar-nav .nav-link.show, .navbar-light .na=
vbar-nav .show > .nav-link { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-toggler { color: rgba(0, 0, 0, 0.5); border-color: rg=
ba(0, 0, 0, 0.1); }

.navbar-light .navbar-toggler-icon { background-image: url("data:image/svg+=
xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' width=3D'30' height=3D'30' =
viewBox=3D'0 0 30 30'%3e%3cpath stroke=3D'rgba%280, 0, 0, 0.5%29' stroke-li=
necap=3D'round' stroke-miterlimit=3D'10' stroke-width=3D'2' d=3D'M4 7h22M4 =
15h22M4 23h22'/%3e%3c/svg%3e"); }

.navbar-light .navbar-text { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-text a { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-text a:focus, .navbar-light .navbar-text a:hover { co=
lor: rgba(0, 0, 0, 0.9); }

.navbar-dark .navbar-brand { color: rgb(255, 255, 255); }

.navbar-dark .navbar-brand:focus, .navbar-dark .navbar-brand:hover { color:=
 rgb(255, 255, 255); }

.navbar-dark .navbar-nav .nav-link { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-nav .nav-link:focus, .navbar-dark .navbar-nav .nav-lin=
k:hover { color: rgba(255, 255, 255, 0.75); }

.navbar-dark .navbar-nav .nav-link.disabled { color: rgba(255, 255, 255, 0.=
25); }

.navbar-dark .navbar-nav .active > .nav-link, .navbar-dark .navbar-nav .nav=
-link.active, .navbar-dark .navbar-nav .nav-link.show, .navbar-dark .navbar=
-nav .show > .nav-link { color: rgb(255, 255, 255); }

.navbar-dark .navbar-toggler { color: rgba(255, 255, 255, 0.5); border-colo=
r: rgba(255, 255, 255, 0.1); }

.navbar-dark .navbar-toggler-icon { background-image: url("data:image/svg+x=
ml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' width=3D'30' height=3D'30' v=
iewBox=3D'0 0 30 30'%3e%3cpath stroke=3D'rgba%28255, 255, 255, 0.5%29' stro=
ke-linecap=3D'round' stroke-miterlimit=3D'10' stroke-width=3D'2' d=3D'M4 7h=
22M4 15h22M4 23h22'/%3e%3c/svg%3e"); }

.navbar-dark .navbar-text { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-text a { color: rgb(255, 255, 255); }

.navbar-dark .navbar-text a:focus, .navbar-dark .navbar-text a:hover { colo=
r: rgb(255, 255, 255); }

.card { position: relative; display: flex; flex-direction: column; min-widt=
h: 0px; overflow-wrap: break-word; background-color: rgb(255, 255, 255); ba=
ckground-clip: border-box; border: 1px solid rgba(0, 0, 0, 0.125); border-r=
adius: 0.25rem; }

.card > hr { margin-right: 0px; margin-left: 0px; }

.card > .list-group { border-top: inherit; border-bottom: inherit; }

.card > .list-group:first-child { border-top-width: 0px; border-top-left-ra=
dius: calc(-1px + 0.25rem); border-top-right-radius: calc(-1px + 0.25rem); =
}

.card > .list-group:last-child { border-bottom-width: 0px; border-bottom-ri=
ght-radius: calc(-1px + 0.25rem); border-bottom-left-radius: calc(-1px + 0.=
25rem); }

.card-body { flex: 1 1 auto; min-height: 1px; padding: 1.25rem; }

.card-title { margin-bottom: 0.75rem; }

.card-subtitle { margin-top: -0.375rem; margin-bottom: 0px; }

.card-text:last-child { margin-bottom: 0px; }

.card-link:hover { text-decoration: none; }

.card-link + .card-link { margin-left: 1.25rem; }

.card-header { padding: 0.75rem 1.25rem; margin-bottom: 0px; background-col=
or: rgba(0, 0, 0, 0.03); border-bottom: 1px solid rgba(0, 0, 0, 0.125); }

.card-header:first-child { border-radius: calc(-1px + 0.25rem) calc(-1px + =
0.25rem) 0px 0px; }

.card-header + .list-group .list-group-item:first-child { border-top: 0px; =
}

.card-footer { padding: 0.75rem 1.25rem; background-color: rgba(0, 0, 0, 0.=
03); border-top: 1px solid rgba(0, 0, 0, 0.125); }

.card-footer:last-child { border-radius: 0px 0px calc(-1px + 0.25rem) calc(=
-1px + 0.25rem); }

.card-header-tabs { margin-right: -0.625rem; margin-bottom: -0.75rem; margi=
n-left: -0.625rem; border-bottom: 0px; }

.card-header-pills { margin-right: -0.625rem; margin-left: -0.625rem; }

.card-img-overlay { position: absolute; inset: 0px; padding: 1.25rem; }

.card-img, .card-img-bottom, .card-img-top { flex-shrink: 0; width: 100%; }

.card-img, .card-img-top { border-top-left-radius: calc(-1px + 0.25rem); bo=
rder-top-right-radius: calc(-1px + 0.25rem); }

.card-img, .card-img-bottom { border-bottom-right-radius: calc(-1px + 0.25r=
em); border-bottom-left-radius: calc(-1px + 0.25rem); }

.card-deck .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-deck { display: flex; flex-flow: wrap; margin-right: -15px; margin-=
left: -15px; }
  .card-deck .card { flex: 1 0 0%; margin-right: 15px; margin-bottom: 0px; =
margin-left: 15px; }
}

.card-group > .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-group { display: flex; flex-flow: wrap; }
  .card-group > .card { flex: 1 0 0%; margin-bottom: 0px; }
  .card-group > .card + .card { margin-left: 0px; border-left: 0px; }
  .card-group > .card:not(:last-child) { border-top-right-radius: 0px; bord=
er-bottom-right-radius: 0px; }
  .card-group > .card:not(:last-child) .card-header, .card-group > .card:no=
t(:last-child) .card-img-top { border-top-right-radius: 0px; }
  .card-group > .card:not(:last-child) .card-footer, .card-group > .card:no=
t(:last-child) .card-img-bottom { border-bottom-right-radius: 0px; }
  .card-group > .card:not(:first-child) { border-top-left-radius: 0px; bord=
er-bottom-left-radius: 0px; }
  .card-group > .card:not(:first-child) .card-header, .card-group > .card:n=
ot(:first-child) .card-img-top { border-top-left-radius: 0px; }
  .card-group > .card:not(:first-child) .card-footer, .card-group > .card:n=
ot(:first-child) .card-img-bottom { border-bottom-left-radius: 0px; }
}

.card-columns .card { margin-bottom: 0.75rem; }

@media (min-width: 576px) {
  .card-columns { column-count: 3; column-gap: 1.25rem; orphans: 1; widows:=
 1; }
  .card-columns .card { display: inline-block; width: 100%; }
}

.accordion > .card { overflow: hidden; }

.accordion > .card:not(:last-of-type) { border-bottom: 0px; border-bottom-r=
ight-radius: 0px; border-bottom-left-radius: 0px; }

.accordion > .card:not(:first-of-type) { border-top-left-radius: 0px; borde=
r-top-right-radius: 0px; }

.accordion > .card > .card-header { border-radius: 0px; margin-bottom: -1px=
; }

.breadcrumb { display: flex; flex-wrap: wrap; padding: 0.75rem 1rem; margin=
-bottom: 1rem; list-style: none; background-color: rgb(233, 236, 239); bord=
er-radius: 0.25rem; }

.breadcrumb-item { display: flex; }

.breadcrumb-item + .breadcrumb-item { padding-left: 0.5rem; }

.breadcrumb-item + .breadcrumb-item::before { display: inline-block; paddin=
g-right: 0.5rem; color: rgb(108, 117, 125); content: "/"; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: underl=
ine; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: none; =
}

.breadcrumb-item.active { color: rgb(108, 117, 125); }

.pagination { display: flex; padding-left: 0px; list-style: none; border-ra=
dius: 0.25rem; }

.page-link { position: relative; display: block; padding: 0.5rem 0.75rem; m=
argin-left: -1px; line-height: 1.25; color: rgb(0, 123, 255); background-co=
lor: rgb(255, 255, 255); border: 1px solid rgb(222, 226, 230); }

.page-link:hover { z-index: 2; color: rgb(0, 86, 179); text-decoration: non=
e; background-color: rgb(233, 236, 239); border-color: rgb(222, 226, 230); =
}

.page-link:focus { z-index: 3; outline: 0px; box-shadow: rgba(0, 123, 255, =
0.25) 0px 0px 0px 0.2rem; }

.page-item:first-child .page-link { margin-left: 0px; border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.page-item:last-child .page-link { border-top-right-radius: 0.25rem; border=
-bottom-right-radius: 0.25rem; }

.page-item.active .page-link { z-index: 3; color: rgb(255, 255, 255); backg=
round-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.page-item.disabled .page-link { color: rgb(108, 117, 125); pointer-events:=
 none; cursor: auto; background-color: rgb(255, 255, 255); border-color: rg=
b(222, 226, 230); }

.pagination-lg .page-link { padding: 0.75rem 1.5rem; font-size: 1.25rem; li=
ne-height: 1.5; }

.pagination-lg .page-item:first-child .page-link { border-top-left-radius: =
0.3rem; border-bottom-left-radius: 0.3rem; }

.pagination-lg .page-item:last-child .page-link { border-top-right-radius: =
0.3rem; border-bottom-right-radius: 0.3rem; }

.pagination-sm .page-link { padding: 0.25rem 0.5rem; font-size: 0.875rem; l=
ine-height: 1.5; }

.pagination-sm .page-item:first-child .page-link { border-top-left-radius: =
0.2rem; border-bottom-left-radius: 0.2rem; }

.pagination-sm .page-item:last-child .page-link { border-top-right-radius: =
0.2rem; border-bottom-right-radius: 0.2rem; }

.badge { display: inline-block; padding: 0.25em 0.4em; font-size: 75%; font=
-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vert=
ical-align: baseline; border-radius: 0.25rem; transition: color 0.15s ease-=
in-out 0s, background-color 0.15s ease-in-out 0s, border-color 0.15s ease-i=
n-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .badge { transition: none 0s ease 0s; }
}

a.badge:focus, a.badge:hover { text-decoration: none; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.badge-pill { padding-right: 0.6em; padding-left: 0.6em; border-radius: 10r=
em; }

.badge-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 2=
55); }

a.badge-primary:focus, a.badge-primary:hover { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 98, 204); }

a.badge-primary.focus, a.badge-primary:focus { outline: 0px; box-shadow: rg=
ba(0, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.badge-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 11=
7, 125); }

a.badge-secondary:focus, a.badge-secondary:hover { color: rgb(255, 255, 255=
); background-color: rgb(84, 91, 98); }

a.badge-secondary.focus, a.badge-secondary:focus { outline: 0px; box-shadow=
: rgba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.badge-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, =
69); }

a.badge-success:focus, a.badge-success:hover { color: rgb(255, 255, 255); b=
ackground-color: rgb(30, 126, 52); }

a.badge-success.focus, a.badge-success:focus { outline: 0px; box-shadow: rg=
ba(40, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.badge-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184=
); }

a.badge-info:focus, a.badge-info:hover { color: rgb(255, 255, 255); backgro=
und-color: rgb(17, 122, 139); }

a.badge-info.focus, a.badge-info:focus { outline: 0px; box-shadow: rgba(23,=
 162, 184, 0.5) 0px 0px 0px 0.2rem; }

.badge-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7)=
; }

a.badge-warning:focus, a.badge-warning:hover { color: rgb(33, 37, 41); back=
ground-color: rgb(211, 158, 0); }

a.badge-warning.focus, a.badge-warning:focus { outline: 0px; box-shadow: rg=
ba(255, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.badge-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 6=
9); }

a.badge-danger:focus, a.badge-danger:hover { color: rgb(255, 255, 255); bac=
kground-color: rgb(189, 33, 48); }

a.badge-danger.focus, a.badge-danger:focus { outline: 0px; box-shadow: rgba=
(220, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.badge-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250)=
; }

a.badge-light:focus, a.badge-light:hover { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(218, 224, 229); }

a.badge-light.focus, a.badge-light:focus { outline: 0px; box-shadow: rgba(2=
48, 249, 250, 0.5) 0px 0px 0px 0.2rem; }

.badge-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

a.badge-dark:focus, a.badge-dark:hover { color: rgb(255, 255, 255); backgro=
und-color: rgb(29, 33, 36); }

a.badge-dark.focus, a.badge-dark:focus { outline: 0px; box-shadow: rgba(52,=
 58, 64, 0.5) 0px 0px 0px 0.2rem; }

.jumbotron { padding: 2rem 1rem; margin-bottom: 2rem; background-color: rgb=
(233, 236, 239); border-radius: 0.3rem; }

@media (min-width: 576px) {
  .jumbotron { padding: 4rem 2rem; }
}

.jumbotron-fluid { padding-right: 0px; padding-left: 0px; border-radius: 0p=
x; }

.alert { position: relative; padding: 0.75rem 1.25rem; margin-bottom: 1rem;=
 border: 1px solid transparent; border-radius: 0.25rem; }

.alert-heading { color: inherit; }

.alert-link { font-weight: 700; }

.alert-dismissible { padding-right: 4rem; }

.alert-dismissible .close { position: absolute; top: 0px; right: 0px; paddi=
ng: 0.75rem 1.25rem; color: inherit; }

.alert-primary { color: rgb(0, 64, 133); background-color: rgb(204, 229, 25=
5); border-color: rgb(184, 218, 255); }

.alert-primary hr { border-top-color: rgb(159, 205, 255); }

.alert-primary .alert-link { color: rgb(0, 39, 82); }

.alert-secondary { color: rgb(56, 61, 65); background-color: rgb(226, 227, =
229); border-color: rgb(214, 216, 219); }

.alert-secondary hr { border-top-color: rgb(200, 203, 207); }

.alert-secondary .alert-link { color: rgb(32, 35, 38); }

.alert-success { color: rgb(21, 87, 36); background-color: rgb(212, 237, 21=
8); border-color: rgb(195, 230, 203); }

.alert-success hr { border-top-color: rgb(177, 223, 187); }

.alert-success .alert-link { color: rgb(11, 46, 19); }

.alert-info { color: rgb(12, 84, 96); background-color: rgb(209, 236, 241);=
 border-color: rgb(190, 229, 235); }

.alert-info hr { border-top-color: rgb(171, 221, 229); }

.alert-info .alert-link { color: rgb(6, 44, 51); }

.alert-warning { color: rgb(133, 100, 4); background-color: rgb(255, 243, 2=
05); border-color: rgb(255, 238, 186); }

.alert-warning hr { border-top-color: rgb(255, 232, 161); }

.alert-warning .alert-link { color: rgb(83, 63, 3); }

.alert-danger { color: rgb(114, 28, 36); background-color: rgb(248, 215, 21=
8); border-color: rgb(245, 198, 203); }

.alert-danger hr { border-top-color: rgb(241, 176, 183); }

.alert-danger .alert-link { color: rgb(73, 18, 23); }

.alert-light { color: rgb(129, 129, 130); background-color: rgb(254, 254, 2=
54); border-color: rgb(253, 253, 254); }

.alert-light hr { border-top-color: rgb(236, 236, 246); }

.alert-light .alert-link { color: rgb(104, 104, 104); }

.alert-dark { color: rgb(27, 30, 33); background-color: rgb(214, 216, 217);=
 border-color: rgb(198, 200, 202); }

.alert-dark hr { border-top-color: rgb(185, 187, 190); }

.alert-dark .alert-link { color: rgb(4, 5, 5); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

.progress { display: flex; height: 1rem; overflow: hidden; line-height: 0; =
font-size: 0.75rem; background-color: rgb(233, 236, 239); border-radius: 0.=
25rem; }

.progress-bar { display: flex; flex-direction: column; justify-content: cen=
ter; overflow: hidden; color: rgb(255, 255, 255); text-align: center; white=
-space: nowrap; background-color: rgb(0, 123, 255); transition: width 0.6s =
ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .progress-bar { transition: none 0s ease 0s; }
}

.progress-bar-striped { background-image: linear-gradient(45deg, rgba(255, =
255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, =
0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); ba=
ckground-size: 1rem 1rem; }

.progress-bar-animated { animation: 1s linear 0s infinite normal none runni=
ng progress-bar-stripes; }

@media (prefers-reduced-motion: reduce) {
  .progress-bar-animated { animation: auto ease 0s 1 normal none running no=
ne; }
}

.media { display: flex; align-items: flex-start; }

.media-body { flex: 1 1 0%; }

.list-group { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; border-radius: 0.25rem; }

.list-group-item-action { width: 100%; color: rgb(73, 80, 87); text-align: =
inherit; }

.list-group-item-action:focus, .list-group-item-action:hover { z-index: 1; =
color: rgb(73, 80, 87); text-decoration: none; background-color: rgb(248, 2=
49, 250); }

.list-group-item-action:active { color: rgb(33, 37, 41); background-color: =
rgb(233, 236, 239); }

.list-group-item { position: relative; display: block; padding: 0.75rem 1.2=
5rem; background-color: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0,=
 0.125); }

.list-group-item:first-child { border-top-left-radius: inherit; border-top-=
right-radius: inherit; }

.list-group-item:last-child { border-bottom-right-radius: inherit; border-b=
ottom-left-radius: inherit; }

.list-group-item.disabled, .list-group-item:disabled { color: rgb(108, 117,=
 125); pointer-events: none; background-color: rgb(255, 255, 255); }

.list-group-item.active { z-index: 2; color: rgb(255, 255, 255); background=
-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.list-group-item + .list-group-item { border-top-width: 0px; }

.list-group-item + .list-group-item.active { margin-top: -1px; border-top-w=
idth: 1px; }

.list-group-horizontal { flex-direction: row; }

.list-group-horizontal > .list-group-item:first-child { border-bottom-left-=
radius: 0.25rem; border-top-right-radius: 0px; }

.list-group-horizontal > .list-group-item:last-child { border-top-right-rad=
ius: 0.25rem; border-bottom-left-radius: 0px; }

.list-group-horizontal > .list-group-item.active { margin-top: 0px; }

.list-group-horizontal > .list-group-item + .list-group-item { border-top-w=
idth: 1px; border-left-width: 0px; }

.list-group-horizontal > .list-group-item + .list-group-item.active { margi=
n-left: -1px; border-left-width: 1px; }

@media (min-width: 576px) {
  .list-group-horizontal-sm { flex-direction: row; }
  .list-group-horizontal-sm > .list-group-item:first-child { border-bottom-=
left-radius: 0.25rem; border-top-right-radius: 0px; }
  .list-group-horizontal-sm > .list-group-item:last-child { border-top-righ=
t-radius: 0.25rem; border-bottom-left-radius: 0px; }
  .list-group-horizontal-sm > .list-group-item.active { margin-top: 0px; }
  .list-group-horizontal-sm > .list-group-item + .list-group-item { border-=
top-width: 1px; border-left-width: 0px; }
  .list-group-horizontal-sm > .list-group-item + .list-group-item.active { =
margin-left: -1px; border-left-width: 1px; }
}

@media (min-width: 768px) {
  .list-group-horizontal-md { flex-direction: row; }
  .list-group-horizontal-md > .list-group-item:first-child { border-bottom-=
left-radius: 0.25rem; border-top-right-radius: 0px; }
  .list-group-horizontal-md > .list-group-item:last-child { border-top-righ=
t-radius: 0.25rem; border-bottom-left-radius: 0px; }
  .list-group-horizontal-md > .list-group-item.active { margin-top: 0px; }
  .list-group-horizontal-md > .list-group-item + .list-group-item { border-=
top-width: 1px; border-left-width: 0px; }
  .list-group-horizontal-md > .list-group-item + .list-group-item.active { =
margin-left: -1px; border-left-width: 1px; }
}

@media (min-width: 992px) {
  .list-group-horizontal-lg { flex-direction: row; }
  .list-group-horizontal-lg > .list-group-item:first-child { border-bottom-=
left-radius: 0.25rem; border-top-right-radius: 0px; }
  .list-group-horizontal-lg > .list-group-item:last-child { border-top-righ=
t-radius: 0.25rem; border-bottom-left-radius: 0px; }
  .list-group-horizontal-lg > .list-group-item.active { margin-top: 0px; }
  .list-group-horizontal-lg > .list-group-item + .list-group-item { border-=
top-width: 1px; border-left-width: 0px; }
  .list-group-horizontal-lg > .list-group-item + .list-group-item.active { =
margin-left: -1px; border-left-width: 1px; }
}

@media (min-width: 1200px) {
  .list-group-horizontal-xl { flex-direction: row; }
  .list-group-horizontal-xl > .list-group-item:first-child { border-bottom-=
left-radius: 0.25rem; border-top-right-radius: 0px; }
  .list-group-horizontal-xl > .list-group-item:last-child { border-top-righ=
t-radius: 0.25rem; border-bottom-left-radius: 0px; }
  .list-group-horizontal-xl > .list-group-item.active { margin-top: 0px; }
  .list-group-horizontal-xl > .list-group-item + .list-group-item { border-=
top-width: 1px; border-left-width: 0px; }
  .list-group-horizontal-xl > .list-group-item + .list-group-item.active { =
margin-left: -1px; border-left-width: 1px; }
}

.list-group-flush { border-radius: 0px; }

.list-group-flush > .list-group-item { border-width: 0px 0px 1px; }

.list-group-flush > .list-group-item:last-child { border-bottom-width: 0px;=
 }

.list-group-item-primary { color: rgb(0, 64, 133); background-color: rgb(18=
4, 218, 255); }

.list-group-item-primary.list-group-item-action:focus, .list-group-item-pri=
mary.list-group-item-action:hover { color: rgb(0, 64, 133); background-colo=
r: rgb(159, 205, 255); }

.list-group-item-primary.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(0, 64, 133); border-color: rgb(0, 64, 133); =
}

.list-group-item-secondary { color: rgb(56, 61, 65); background-color: rgb(=
214, 216, 219); }

.list-group-item-secondary.list-group-item-action:focus, .list-group-item-s=
econdary.list-group-item-action:hover { color: rgb(56, 61, 65); background-=
color: rgb(200, 203, 207); }

.list-group-item-secondary.list-group-item-action.active { color: rgb(255, =
255, 255); background-color: rgb(56, 61, 65); border-color: rgb(56, 61, 65)=
; }

.list-group-item-success { color: rgb(21, 87, 36); background-color: rgb(19=
5, 230, 203); }

.list-group-item-success.list-group-item-action:focus, .list-group-item-suc=
cess.list-group-item-action:hover { color: rgb(21, 87, 36); background-colo=
r: rgb(177, 223, 187); }

.list-group-item-success.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(21, 87, 36); border-color: rgb(21, 87, 36); =
}

.list-group-item-info { color: rgb(12, 84, 96); background-color: rgb(190, =
229, 235); }

.list-group-item-info.list-group-item-action:focus, .list-group-item-info.l=
ist-group-item-action:hover { color: rgb(12, 84, 96); background-color: rgb=
(171, 221, 229); }

.list-group-item-info.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(12, 84, 96); border-color: rgb(12, 84, 96); }

.list-group-item-warning { color: rgb(133, 100, 4); background-color: rgb(2=
55, 238, 186); }

.list-group-item-warning.list-group-item-action:focus, .list-group-item-war=
ning.list-group-item-action:hover { color: rgb(133, 100, 4); background-col=
or: rgb(255, 232, 161); }

.list-group-item-warning.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(133, 100, 4); border-color: rgb(133, 100, 4)=
; }

.list-group-item-danger { color: rgb(114, 28, 36); background-color: rgb(24=
5, 198, 203); }

.list-group-item-danger.list-group-item-action:focus, .list-group-item-dang=
er.list-group-item-action:hover { color: rgb(114, 28, 36); background-color=
: rgb(241, 176, 183); }

.list-group-item-danger.list-group-item-action.active { color: rgb(255, 255=
, 255); background-color: rgb(114, 28, 36); border-color: rgb(114, 28, 36);=
 }

.list-group-item-light { color: rgb(129, 129, 130); background-color: rgb(2=
53, 253, 254); }

.list-group-item-light.list-group-item-action:focus, .list-group-item-light=
.list-group-item-action:hover { color: rgb(129, 129, 130); background-color=
: rgb(236, 236, 246); }

.list-group-item-light.list-group-item-action.active { color: rgb(255, 255,=
 255); background-color: rgb(129, 129, 130); border-color: rgb(129, 129, 13=
0); }

.list-group-item-dark { color: rgb(27, 30, 33); background-color: rgb(198, =
200, 202); }

.list-group-item-dark.list-group-item-action:focus, .list-group-item-dark.l=
ist-group-item-action:hover { color: rgb(27, 30, 33); background-color: rgb=
(185, 187, 190); }

.list-group-item-dark.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(27, 30, 33); border-color: rgb(27, 30, 33); }

.close { float: right; font-size: 1.5rem; font-weight: 700; line-height: 1;=
 color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity:=
 0.5; }

.close:hover { color: rgb(0, 0, 0); text-decoration: none; }

.close:not(:disabled):not(.disabled):focus, .close:not(:disabled):not(.disa=
bled):hover { opacity: 0.75; }

button.close { padding: 0px; background-color: transparent; border: 0px; }

a.close.disabled { pointer-events: none; }

.toast { max-width: 350px; overflow: hidden; font-size: 0.875rem; backgroun=
d-color: rgba(255, 255, 255, 0.85); background-clip: padding-box; border: 1=
px solid rgba(0, 0, 0, 0.1); box-shadow: rgba(0, 0, 0, 0.1) 0px 0.25rem 0.7=
5rem; backdrop-filter: blur(10px); opacity: 0; border-radius: 0.25rem; }

.toast:not(:last-child) { margin-bottom: 0.75rem; }

.toast.showing { opacity: 1; }

.toast.show { display: block; opacity: 1; }

.toast.hide { display: none; }

.toast-header { display: flex; align-items: center; padding: 0.25rem 0.75re=
m; color: rgb(108, 117, 125); background-color: rgba(255, 255, 255, 0.85); =
background-clip: padding-box; border-bottom: 1px solid rgba(0, 0, 0, 0.05);=
 }

.toast-body { padding: 0.75rem; }

.modal-open { overflow: hidden; }

.modal-open .modal { overflow: hidden auto; }

.modal { position: fixed; top: 0px; left: 0px; z-index: 1050; display: none=
; width: 100%; height: 100%; overflow: hidden; outline: 0px; }

.modal-dialog { position: relative; width: auto; margin: 0.5rem; pointer-ev=
ents: none; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s, -webkit=
-transform 0.3s ease-out 0s; transform: translate(0px, -50px); }

@media (prefers-reduced-motion: reduce) {
  .modal.fade .modal-dialog { transition: none 0s ease 0s; }
}

.modal.show .modal-dialog { transform: none; }

.modal.modal-static .modal-dialog { transform: scale(1.02); }

.modal-dialog-scrollable { display: flex; max-height: calc(100% - 1rem); }

.modal-dialog-scrollable .modal-content { max-height: calc(-1rem + 100vh); =
overflow: hidden; }

.modal-dialog-scrollable .modal-footer, .modal-dialog-scrollable .modal-hea=
der { flex-shrink: 0; }

.modal-dialog-scrollable .modal-body { overflow-y: auto; }

.modal-dialog-centered { display: flex; align-items: center; min-height: ca=
lc(100% - 1rem); }

.modal-dialog-centered::before { display: block; height: min-content; conte=
nt: ""; }

.modal-dialog-centered.modal-dialog-scrollable { flex-direction: column; ju=
stify-content: center; height: 100%; }

.modal-dialog-centered.modal-dialog-scrollable .modal-content { max-height:=
 none; }

.modal-dialog-centered.modal-dialog-scrollable::before { content: none; }

.modal-content { position: relative; display: flex; flex-direction: column;=
 width: 100%; pointer-events: auto; background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-r=
adius: 0.3rem; outline: 0px; }

.modal-backdrop { position: fixed; top: 0px; left: 0px; z-index: 1040; widt=
h: 100vw; height: 100vh; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.show { opacity: 0.5; }

.modal-header { display: flex; align-items: flex-start; justify-content: sp=
ace-between; padding: 1rem; border-bottom: 1px solid rgb(222, 226, 230); bo=
rder-top-left-radius: calc(-1px + 0.3rem); border-top-right-radius: calc(-1=
px + 0.3rem); }

.modal-header .close { padding: 1rem; margin: -1rem -1rem -1rem auto; }

.modal-title { margin-bottom: 0px; line-height: 1.5; }

.modal-body { position: relative; flex: 1 1 auto; padding: 1rem; }

.modal-footer { display: flex; flex-wrap: wrap; align-items: center; justif=
y-content: flex-end; padding: 0.75rem; border-top: 1px solid rgb(222, 226, =
230); border-bottom-right-radius: calc(-1px + 0.3rem); border-bottom-left-r=
adius: calc(-1px + 0.3rem); }

.modal-footer > * { margin: 0.25rem; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 576px) {
  .modal-dialog { max-width: 500px; margin: 1.75rem auto; }
  .modal-dialog-scrollable { max-height: calc(100% - 3.5rem); }
  .modal-dialog-scrollable .modal-content { max-height: calc(-3.5rem + 100v=
h); }
  .modal-dialog-centered { min-height: calc(100% - 3.5rem); }
  .modal-dialog-centered::before { height: min-content; }
  .modal-sm { max-width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg, .modal-xl { max-width: 800px; }
}

@media (min-width: 1200px) {
  .modal-xl { max-width: 1140px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; margin: 0px; =
font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvet=
ica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI E=
moji", "Segoe UI Symbol", "Noto Color Emoji"; font-style: normal; font-weig=
ht: 400; line-height: 1.5; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; white-space: normal; line-break: auto; font-size:=
 0.875rem; overflow-wrap: break-word; opacity: 0; }

.tooltip.show { opacity: 0.9; }

.tooltip .arrow { position: absolute; display: block; width: 0.8rem; height=
: 0.4rem; }

.tooltip .arrow::before { position: absolute; content: ""; border-color: tr=
ansparent; border-style: solid; }

.bs-tooltip-auto[x-placement^=3D"top"], .bs-tooltip-top { padding: 0.4rem 0=
px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow, .bs-tooltip-top .arrow { bot=
tom: 0px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow::before, .bs-tooltip-top .arr=
ow::before { top: 0px; border-width: 0.4rem 0.4rem 0px; border-top-color: r=
gb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"right"], .bs-tooltip-right { padding: 0px =
0.4rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow, .bs-tooltip-right .arrow {=
 left: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow::before, .bs-tooltip-right =
.arrow::before { right: 0px; border-width: 0.4rem 0.4rem 0.4rem 0px; border=
-right-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"bottom"], .bs-tooltip-bottom { padding: 0.=
4rem 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow, .bs-tooltip-bottom .arrow=
 { top: 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow::before, .bs-tooltip-botto=
m .arrow::before { bottom: 0px; border-width: 0px 0.4rem 0.4rem; border-bot=
tom-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"left"], .bs-tooltip-left { padding: 0px 0.=
4rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow, .bs-tooltip-left .arrow { r=
ight: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow::before, .bs-tooltip-left .a=
rrow::before { left: 0px; border-width: 0.4rem 0px 0.4rem 0.4rem; border-le=
ft-color: rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 0.25rem 0.5rem; color: rgb(255,=
 255, 255); text-align: center; background-color: rgb(0, 0, 0); border-radi=
us: 0.25rem; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 block; max-width: 276px; font-family: -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-style: normal; font-weight: 400; line-height: 1.5; text-align: start; tex=
t-decoration: none; text-shadow: none; text-transform: none; letter-spacing=
: normal; word-break: normal; word-spacing: normal; white-space: normal; li=
ne-break: auto; font-size: 0.875rem; overflow-wrap: break-word; background-=
color: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid =
rgba(0, 0, 0, 0.2); border-radius: 0.3rem; }

.popover .arrow { position: absolute; display: block; width: 1rem; height: =
0.5rem; margin: 0px 0.3rem; }

.popover .arrow::after, .popover .arrow::before { position: absolute; displ=
ay: block; content: ""; border-color: transparent; border-style: solid; }

.bs-popover-auto[x-placement^=3D"top"], .bs-popover-top { margin-bottom: 0.=
5rem; }

.bs-popover-auto[x-placement^=3D"top"] > .arrow, .bs-popover-top > .arrow {=
 bottom: calc(-1px - 0.5rem); }

.bs-popover-auto[x-placement^=3D"top"] > .arrow::before, .bs-popover-top > =
.arrow::before { bottom: 0px; border-width: 0.5rem 0.5rem 0px; border-top-c=
olor: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"top"] > .arrow::after, .bs-popover-top > .=
arrow::after { bottom: 1px; border-width: 0.5rem 0.5rem 0px; border-top-col=
or: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"right"], .bs-popover-right { margin-left: =
0.5rem; }

.bs-popover-auto[x-placement^=3D"right"] > .arrow, .bs-popover-right > .arr=
ow { left: calc(-1px - 0.5rem); width: 0.5rem; height: 1rem; margin: 0.3rem=
 0px; }

.bs-popover-auto[x-placement^=3D"right"] > .arrow::before, .bs-popover-righ=
t > .arrow::before { left: 0px; border-width: 0.5rem 0.5rem 0.5rem 0px; bor=
der-right-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"right"] > .arrow::after, .bs-popover-right=
 > .arrow::after { left: 1px; border-width: 0.5rem 0.5rem 0.5rem 0px; borde=
r-right-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"], .bs-popover-bottom { margin-top:=
 0.5rem; }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow, .bs-popover-bottom > .a=
rrow { top: calc(-1px - 0.5rem); }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow::before, .bs-popover-bot=
tom > .arrow::before { top: 0px; border-width: 0px 0.5rem 0.5rem; border-bo=
ttom-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow::after, .bs-popover-bott=
om > .arrow::after { top: 1px; border-width: 0px 0.5rem 0.5rem; border-bott=
om-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"] .popover-header::before, .bs-popo=
ver-bottom .popover-header::before { position: absolute; top: 0px; left: 50=
%; display: block; width: 1rem; margin-left: -0.5rem; content: ""; border-b=
ottom: 1px solid rgb(247, 247, 247); }

.bs-popover-auto[x-placement^=3D"left"], .bs-popover-left { margin-right: 0=
.5rem; }

.bs-popover-auto[x-placement^=3D"left"] > .arrow, .bs-popover-left > .arrow=
 { right: calc(-1px - 0.5rem); width: 0.5rem; height: 1rem; margin: 0.3rem =
0px; }

.bs-popover-auto[x-placement^=3D"left"] > .arrow::before, .bs-popover-left =
> .arrow::before { right: 0px; border-width: 0.5rem 0px 0.5rem 0.5rem; bord=
er-left-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"left"] > .arrow::after, .bs-popover-left >=
 .arrow::after { right: 1px; border-width: 0.5rem 0px 0.5rem 0.5rem; border=
-left-color: rgb(255, 255, 255); }

.popover-header { padding: 0.5rem 0.75rem; margin-bottom: 0px; font-size: 1=
rem; background-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235=
, 235, 235); border-top-left-radius: calc(-1px + 0.3rem); border-top-right-=
radius: calc(-1px + 0.3rem); }

.popover-header:empty { display: none; }

.popover-body { padding: 0.5rem 0.75rem; color: rgb(33, 37, 41); }

.carousel { position: relative; }

.carousel.pointer-event { touch-action: pan-y; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner::after { display: block; clear: both; content: ""; }

.carousel-item { position: relative; display: none; float: left; width: 100=
%; margin-right: -100%; backface-visibility: hidden; transition: transform =
0.6s ease-in-out 0s, -webkit-transform 0.6s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-item { transition: none 0s ease 0s; }
}

.carousel-item-next, .carousel-item-prev, .carousel-item.active { display: =
block; }

.active.carousel-item-right, .carousel-item-next:not(.carousel-item-left) {=
 transform: translateX(100%); }

.active.carousel-item-left, .carousel-item-prev:not(.carousel-item-right) {=
 transform: translateX(-100%); }

.carousel-fade .carousel-item { opacity: 0; transition-property: opacity; t=
ransform: none; }

.carousel-fade .carousel-item-next.carousel-item-left, .carousel-fade .caro=
usel-item-prev.carousel-item-right, .carousel-fade .carousel-item.active { =
z-index: 1; opacity: 1; }

.carousel-fade .active.carousel-item-left, .carousel-fade .active.carousel-=
item-right { z-index: 0; opacity: 0; transition: opacity 0s ease 0.6s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-fade .active.carousel-item-left, .carousel-fade .active.carouse=
l-item-right { transition: none 0s ease 0s; }
}

.carousel-control-next, .carousel-control-prev { position: absolute; top: 0=
px; bottom: 0px; z-index: 1; display: flex; align-items: center; justify-co=
ntent: center; width: 15%; color: rgb(255, 255, 255); text-align: center; o=
pacity: 0.5; transition: opacity 0.15s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-control-next, .carousel-control-prev { transition: none 0s ease=
 0s; }
}

.carousel-control-next:focus, .carousel-control-next:hover, .carousel-contr=
ol-prev:focus, .carousel-control-prev:hover { color: rgb(255, 255, 255); te=
xt-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control-prev { left: 0px; }

.carousel-control-next { right: 0px; }

.carousel-control-next-icon, .carousel-control-prev-icon { display: inline-=
block; width: 20px; height: 20px; background: 50% center / 100% 100% no-rep=
eat; }

.carousel-control-prev-icon { background-image: url("data:image/svg+xml,%3c=
svg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' width=3D'8' height=
=3D'8' viewBox=3D'0 0 8 8'%3e%3cpath d=3D'M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2=
.5-2.5L5.25 0z'/%3e%3c/svg%3e"); }

.carousel-control-next-icon { background-image: url("data:image/svg+xml,%3c=
svg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' width=3D'8' height=
=3D'8' viewBox=3D'0 0 8 8'%3e%3cpath d=3D'M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L=
2.75 8l4-4-4-4z'/%3e%3c/svg%3e"); }

.carousel-indicators { position: absolute; right: 0px; bottom: 0px; left: 0=
px; z-index: 15; display: flex; justify-content: center; padding-left: 0px;=
 margin-right: 15%; margin-left: 15%; list-style: none; }

.carousel-indicators li { box-sizing: content-box; flex: 0 1 auto; width: 3=
0px; height: 3px; margin-right: 3px; margin-left: 3px; text-indent: -999px;=
 cursor: pointer; background-color: rgb(255, 255, 255); background-clip: pa=
dding-box; border-top: 10px solid transparent; border-bottom: 10px solid tr=
ansparent; opacity: 0.5; transition: opacity 0.6s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-indicators li { transition: none 0s ease 0s; }
}

.carousel-indicators .active { opacity: 1; }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; }

@-webkit-keyframes spinner-border {=20
  100% { transform: rotate(360deg); }
}

@keyframes spinner-border {=20
  100% { transform: rotate(360deg); }
}

.spinner-border { display: inline-block; width: 2rem; height: 2rem; vertica=
l-align: text-bottom; border-width: 0.25em; border-style: solid; border-col=
or: currentcolor transparent currentcolor currentcolor; border-image: initi=
al; border-radius: 50%; animation: 0.75s linear 0s infinite normal none run=
ning spinner-border; }

.spinner-border-sm { width: 1rem; height: 1rem; border-width: 0.2em; }

@-webkit-keyframes spinner-grow {=20
  0% { transform: scale(0); }
  50% { opacity: 1; transform: none; }
}

@keyframes spinner-grow {=20
  0% { transform: scale(0); }
  50% { opacity: 1; transform: none; }
}

.spinner-grow { display: inline-block; width: 2rem; height: 2rem; vertical-=
align: text-bottom; background-color: currentcolor; border-radius: 50%; opa=
city: 0; animation: 0.75s linear 0s infinite normal none running spinner-gr=
ow; }

.spinner-grow-sm { width: 1rem; height: 1rem; }

.align-baseline { vertical-align: baseline !important; }

.align-top { vertical-align: top !important; }

.align-middle { vertical-align: middle !important; }

.align-bottom { vertical-align: bottom !important; }

.align-text-bottom { vertical-align: text-bottom !important; }

.align-text-top { vertical-align: text-top !important; }

.bg-primary { background-color: rgb(0, 123, 255) !important; }

a.bg-primary:focus, a.bg-primary:hover, button.bg-primary:focus, button.bg-=
primary:hover { background-color: rgb(0, 98, 204) !important; }

.bg-secondary { background-color: rgb(108, 117, 125) !important; }

a.bg-secondary:focus, a.bg-secondary:hover, button.bg-secondary:focus, butt=
on.bg-secondary:hover { background-color: rgb(84, 91, 98) !important; }

.bg-success { background-color: rgb(40, 167, 69) !important; }

a.bg-success:focus, a.bg-success:hover, button.bg-success:focus, button.bg-=
success:hover { background-color: rgb(30, 126, 52) !important; }

.bg-info { background-color: rgb(23, 162, 184) !important; }

a.bg-info:focus, a.bg-info:hover, button.bg-info:focus, button.bg-info:hove=
r { background-color: rgb(17, 122, 139) !important; }

.bg-warning { background-color: rgb(255, 193, 7) !important; }

a.bg-warning:focus, a.bg-warning:hover, button.bg-warning:focus, button.bg-=
warning:hover { background-color: rgb(211, 158, 0) !important; }

.bg-danger { background-color: rgb(220, 53, 69) !important; }

a.bg-danger:focus, a.bg-danger:hover, button.bg-danger:focus, button.bg-dan=
ger:hover { background-color: rgb(189, 33, 48) !important; }

.bg-light { background-color: rgb(248, 249, 250) !important; }

a.bg-light:focus, a.bg-light:hover, button.bg-light:focus, button.bg-light:=
hover { background-color: rgb(218, 224, 229) !important; }

.bg-dark { background-color: rgb(52, 58, 64) !important; }

a.bg-dark:focus, a.bg-dark:hover, button.bg-dark:focus, button.bg-dark:hove=
r { background-color: rgb(29, 33, 36) !important; }

.bg-white { background-color: rgb(255, 255, 255) !important; }

.bg-transparent { background-color: transparent !important; }

.border { border: 1px solid rgb(222, 226, 230) !important; }

.border-top { border-top: 1px solid rgb(222, 226, 230) !important; }

.border-right { border-right: 1px solid rgb(222, 226, 230) !important; }

.border-bottom { border-bottom: 1px solid rgb(222, 226, 230) !important; }

.border-left { border-left: 1px solid rgb(222, 226, 230) !important; }

.border-0 { border: 0px !important; }

.border-top-0 { border-top: 0px !important; }

.border-right-0 { border-right: 0px !important; }

.border-bottom-0 { border-bottom: 0px !important; }

.border-left-0 { border-left: 0px !important; }

.border-primary { border-color: rgb(0, 123, 255) !important; }

.border-secondary { border-color: rgb(108, 117, 125) !important; }

.border-success { border-color: rgb(40, 167, 69) !important; }

.border-info { border-color: rgb(23, 162, 184) !important; }

.border-warning { border-color: rgb(255, 193, 7) !important; }

.border-danger { border-color: rgb(220, 53, 69) !important; }

.border-light { border-color: rgb(248, 249, 250) !important; }

.border-dark { border-color: rgb(52, 58, 64) !important; }

.border-white { border-color: rgb(255, 255, 255) !important; }

.rounded-sm { border-radius: 0.2rem !important; }

.rounded { border-radius: 0.25rem !important; }

.rounded-top { border-top-left-radius: 0.25rem !important; border-top-right=
-radius: 0.25rem !important; }

.rounded-right { border-top-right-radius: 0.25rem !important; border-bottom=
-right-radius: 0.25rem !important; }

.rounded-bottom { border-bottom-right-radius: 0.25rem !important; border-bo=
ttom-left-radius: 0.25rem !important; }

.rounded-left { border-top-left-radius: 0.25rem !important; border-bottom-l=
eft-radius: 0.25rem !important; }

.rounded-lg { border-radius: 0.3rem !important; }

.rounded-circle { border-radius: 50% !important; }

.rounded-pill { border-radius: 50rem !important; }

.rounded-0 { border-radius: 0px !important; }

.clearfix::after { display: block; clear: both; content: ""; }

.d-none { display: none !important; }

.d-inline { display: inline !important; }

.d-inline-block { display: inline-block !important; }

.d-block { display: block !important; }

.d-table { display: table !important; }

.d-table-row { display: table-row !important; }

.d-table-cell { display: table-cell !important; }

.d-flex { display: flex !important; }

.d-inline-flex { display: inline-flex !important; }

@media (min-width: 576px) {
  .d-sm-none { display: none !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-block { display: block !important; }
  .d-sm-table { display: table !important; }
  .d-sm-table-row { display: table-row !important; }
  .d-sm-table-cell { display: table-cell !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
}

@media (min-width: 768px) {
  .d-md-none { display: none !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-block { display: block !important; }
  .d-md-table { display: table !important; }
  .d-md-table-row { display: table-row !important; }
  .d-md-table-cell { display: table-cell !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
}

@media (min-width: 992px) {
  .d-lg-none { display: none !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-block { display: block !important; }
  .d-lg-table { display: table !important; }
  .d-lg-table-row { display: table-row !important; }
  .d-lg-table-cell { display: table-cell !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
}

@media (min-width: 1200px) {
  .d-xl-none { display: none !important; }
  .d-xl-inline { display: inline !important; }
  .d-xl-inline-block { display: inline-block !important; }
  .d-xl-block { display: block !important; }
  .d-xl-table { display: table !important; }
  .d-xl-table-row { display: table-row !important; }
  .d-xl-table-cell { display: table-cell !important; }
  .d-xl-flex { display: flex !important; }
  .d-xl-inline-flex { display: inline-flex !important; }
}

@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
}

.embed-responsive { position: relative; display: block; width: 100%; paddin=
g: 0px; overflow: hidden; }

.embed-responsive::before { display: block; content: ""; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-21by9::before { padding-top: 42.8571%; }

.embed-responsive-16by9::before { padding-top: 56.25%; }

.embed-responsive-4by3::before { padding-top: 75%; }

.embed-responsive-1by1::before { padding-top: 100%; }

.flex-row { flex-direction: row !important; }

.flex-column { flex-direction: column !important; }

.flex-row-reverse { flex-direction: row-reverse !important; }

.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }

.flex-nowrap { flex-wrap: nowrap !important; }

.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.flex-fill { flex: 1 1 auto !important; }

.flex-grow-0 { flex-grow: 0 !important; }

.flex-grow-1 { flex-grow: 1 !important; }

.flex-shrink-0 { flex-shrink: 0 !important; }

.flex-shrink-1 { flex-shrink: 1 !important; }

.justify-content-start { justify-content: flex-start !important; }

.justify-content-end { justify-content: flex-end !important; }

.justify-content-center { justify-content: center !important; }

.justify-content-between { justify-content: space-between !important; }

.justify-content-around { justify-content: space-around !important; }

.align-items-start { align-items: flex-start !important; }

.align-items-end { align-items: flex-end !important; }

.align-items-center { align-items: center !important; }

.align-items-baseline { align-items: baseline !important; }

.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }

.align-content-end { align-content: flex-end !important; }

.align-content-center { align-content: center !important; }

.align-content-between { align-content: space-between !important; }

.align-content-around { align-content: space-around !important; }

.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }

.align-self-start { align-self: flex-start !important; }

.align-self-end { align-self: flex-end !important; }

.align-self-center { align-self: center !important; }

.align-self-baseline { align-self: baseline !important; }

.align-self-stretch { align-self: stretch !important; }

@media (min-width: 576px) {
  .flex-sm-row { flex-direction: row !important; }
  .flex-sm-column { flex-direction: column !important; }
  .flex-sm-row-reverse { flex-direction: row-reverse !important; }
  .flex-sm-column-reverse { flex-direction: column-reverse !important; }
  .flex-sm-wrap { flex-wrap: wrap !important; }
  .flex-sm-nowrap { flex-wrap: nowrap !important; }
  .flex-sm-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-sm-fill { flex: 1 1 auto !important; }
  .flex-sm-grow-0 { flex-grow: 0 !important; }
  .flex-sm-grow-1 { flex-grow: 1 !important; }
  .flex-sm-shrink-0 { flex-shrink: 0 !important; }
  .flex-sm-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-sm-start { justify-content: flex-start !important; }
  .justify-content-sm-end { justify-content: flex-end !important; }
  .justify-content-sm-center { justify-content: center !important; }
  .justify-content-sm-between { justify-content: space-between !important; =
}
  .justify-content-sm-around { justify-content: space-around !important; }
  .align-items-sm-start { align-items: flex-start !important; }
  .align-items-sm-end { align-items: flex-end !important; }
  .align-items-sm-center { align-items: center !important; }
  .align-items-sm-baseline { align-items: baseline !important; }
  .align-items-sm-stretch { align-items: stretch !important; }
  .align-content-sm-start { align-content: flex-start !important; }
  .align-content-sm-end { align-content: flex-end !important; }
  .align-content-sm-center { align-content: center !important; }
  .align-content-sm-between { align-content: space-between !important; }
  .align-content-sm-around { align-content: space-around !important; }
  .align-content-sm-stretch { align-content: stretch !important; }
  .align-self-sm-auto { align-self: auto !important; }
  .align-self-sm-start { align-self: flex-start !important; }
  .align-self-sm-end { align-self: flex-end !important; }
  .align-self-sm-center { align-self: center !important; }
  .align-self-sm-baseline { align-self: baseline !important; }
  .align-self-sm-stretch { align-self: stretch !important; }
}

@media (min-width: 768px) {
  .flex-md-row { flex-direction: row !important; }
  .flex-md-column { flex-direction: column !important; }
  .flex-md-row-reverse { flex-direction: row-reverse !important; }
  .flex-md-column-reverse { flex-direction: column-reverse !important; }
  .flex-md-wrap { flex-wrap: wrap !important; }
  .flex-md-nowrap { flex-wrap: nowrap !important; }
  .flex-md-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-md-fill { flex: 1 1 auto !important; }
  .flex-md-grow-0 { flex-grow: 0 !important; }
  .flex-md-grow-1 { flex-grow: 1 !important; }
  .flex-md-shrink-0 { flex-shrink: 0 !important; }
  .flex-md-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-md-start { justify-content: flex-start !important; }
  .justify-content-md-end { justify-content: flex-end !important; }
  .justify-content-md-center { justify-content: center !important; }
  .justify-content-md-between { justify-content: space-between !important; =
}
  .justify-content-md-around { justify-content: space-around !important; }
  .align-items-md-start { align-items: flex-start !important; }
  .align-items-md-end { align-items: flex-end !important; }
  .align-items-md-center { align-items: center !important; }
  .align-items-md-baseline { align-items: baseline !important; }
  .align-items-md-stretch { align-items: stretch !important; }
  .align-content-md-start { align-content: flex-start !important; }
  .align-content-md-end { align-content: flex-end !important; }
  .align-content-md-center { align-content: center !important; }
  .align-content-md-between { align-content: space-between !important; }
  .align-content-md-around { align-content: space-around !important; }
  .align-content-md-stretch { align-content: stretch !important; }
  .align-self-md-auto { align-self: auto !important; }
  .align-self-md-start { align-self: flex-start !important; }
  .align-self-md-end { align-self: flex-end !important; }
  .align-self-md-center { align-self: center !important; }
  .align-self-md-baseline { align-self: baseline !important; }
  .align-self-md-stretch { align-self: stretch !important; }
}

@media (min-width: 992px) {
  .flex-lg-row { flex-direction: row !important; }
  .flex-lg-column { flex-direction: column !important; }
  .flex-lg-row-reverse { flex-direction: row-reverse !important; }
  .flex-lg-column-reverse { flex-direction: column-reverse !important; }
  .flex-lg-wrap { flex-wrap: wrap !important; }
  .flex-lg-nowrap { flex-wrap: nowrap !important; }
  .flex-lg-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-lg-fill { flex: 1 1 auto !important; }
  .flex-lg-grow-0 { flex-grow: 0 !important; }
  .flex-lg-grow-1 { flex-grow: 1 !important; }
  .flex-lg-shrink-0 { flex-shrink: 0 !important; }
  .flex-lg-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-lg-start { justify-content: flex-start !important; }
  .justify-content-lg-end { justify-content: flex-end !important; }
  .justify-content-lg-center { justify-content: center !important; }
  .justify-content-lg-between { justify-content: space-between !important; =
}
  .justify-content-lg-around { justify-content: space-around !important; }
  .align-items-lg-start { align-items: flex-start !important; }
  .align-items-lg-end { align-items: flex-end !important; }
  .align-items-lg-center { align-items: center !important; }
  .align-items-lg-baseline { align-items: baseline !important; }
  .align-items-lg-stretch { align-items: stretch !important; }
  .align-content-lg-start { align-content: flex-start !important; }
  .align-content-lg-end { align-content: flex-end !important; }
  .align-content-lg-center { align-content: center !important; }
  .align-content-lg-between { align-content: space-between !important; }
  .align-content-lg-around { align-content: space-around !important; }
  .align-content-lg-stretch { align-content: stretch !important; }
  .align-self-lg-auto { align-self: auto !important; }
  .align-self-lg-start { align-self: flex-start !important; }
  .align-self-lg-end { align-self: flex-end !important; }
  .align-self-lg-center { align-self: center !important; }
  .align-self-lg-baseline { align-self: baseline !important; }
  .align-self-lg-stretch { align-self: stretch !important; }
}

@media (min-width: 1200px) {
  .flex-xl-row { flex-direction: row !important; }
  .flex-xl-column { flex-direction: column !important; }
  .flex-xl-row-reverse { flex-direction: row-reverse !important; }
  .flex-xl-column-reverse { flex-direction: column-reverse !important; }
  .flex-xl-wrap { flex-wrap: wrap !important; }
  .flex-xl-nowrap { flex-wrap: nowrap !important; }
  .flex-xl-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-xl-fill { flex: 1 1 auto !important; }
  .flex-xl-grow-0 { flex-grow: 0 !important; }
  .flex-xl-grow-1 { flex-grow: 1 !important; }
  .flex-xl-shrink-0 { flex-shrink: 0 !important; }
  .flex-xl-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-xl-start { justify-content: flex-start !important; }
  .justify-content-xl-end { justify-content: flex-end !important; }
  .justify-content-xl-center { justify-content: center !important; }
  .justify-content-xl-between { justify-content: space-between !important; =
}
  .justify-content-xl-around { justify-content: space-around !important; }
  .align-items-xl-start { align-items: flex-start !important; }
  .align-items-xl-end { align-items: flex-end !important; }
  .align-items-xl-center { align-items: center !important; }
  .align-items-xl-baseline { align-items: baseline !important; }
  .align-items-xl-stretch { align-items: stretch !important; }
  .align-content-xl-start { align-content: flex-start !important; }
  .align-content-xl-end { align-content: flex-end !important; }
  .align-content-xl-center { align-content: center !important; }
  .align-content-xl-between { align-content: space-between !important; }
  .align-content-xl-around { align-content: space-around !important; }
  .align-content-xl-stretch { align-content: stretch !important; }
  .align-self-xl-auto { align-self: auto !important; }
  .align-self-xl-start { align-self: flex-start !important; }
  .align-self-xl-end { align-self: flex-end !important; }
  .align-self-xl-center { align-self: center !important; }
  .align-self-xl-baseline { align-self: baseline !important; }
  .align-self-xl-stretch { align-self: stretch !important; }
}

.float-left { float: left !important; }

.float-right { float: right !important; }

.float-none { float: none !important; }

@media (min-width: 576px) {
  .float-sm-left { float: left !important; }
  .float-sm-right { float: right !important; }
  .float-sm-none { float: none !important; }
}

@media (min-width: 768px) {
  .float-md-left { float: left !important; }
  .float-md-right { float: right !important; }
  .float-md-none { float: none !important; }
}

@media (min-width: 992px) {
  .float-lg-left { float: left !important; }
  .float-lg-right { float: right !important; }
  .float-lg-none { float: none !important; }
}

@media (min-width: 1200px) {
  .float-xl-left { float: left !important; }
  .float-xl-right { float: right !important; }
  .float-xl-none { float: none !important; }
}

.user-select-all { user-select: all !important; }

.user-select-auto { user-select: auto !important; }

.user-select-none { user-select: none !important; }

.overflow-auto { overflow: auto !important; }

.overflow-hidden { overflow: hidden !important; }

.position-static { position: static !important; }

.position-relative { position: relative !important; }

.position-absolute { position: absolute !important; }

.position-fixed { position: fixed !important; }

.position-sticky { position: sticky !important; }

.fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-index: 103=
0; }

.fixed-bottom { position: fixed; right: 0px; bottom: 0px; left: 0px; z-inde=
x: 1030; }

@supports ((position:-webkit-sticky) or (position:sticky)) {
  .sticky-top { position: sticky; top: 0px; z-index: 1020; }
}

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; overflow: visible; clip: auto; white-space: normal;=
 }

.shadow-sm { box-shadow: rgba(0, 0, 0, 0.075) 0px 0.125rem 0.25rem !importa=
nt; }

.shadow { box-shadow: rgba(0, 0, 0, 0.15) 0px 0.5rem 1rem !important; }

.shadow-lg { box-shadow: rgba(0, 0, 0, 0.176) 0px 1rem 3rem !important; }

.shadow-none { box-shadow: none !important; }

.w-25 { width: 25% !important; }

.w-50 { width: 50% !important; }

.w-75 { width: 75% !important; }

.w-100 { width: 100% !important; }

.w-auto { width: auto !important; }

.h-25 { height: 25% !important; }

.h-50 { height: 50% !important; }

.h-75 { height: 75% !important; }

.h-100 { height: 100% !important; }

.h-auto { height: auto !important; }

.mw-100 { max-width: 100% !important; }

.mh-100 { max-height: 100% !important; }

.min-vw-100 { min-width: 100vw !important; }

.min-vh-100 { min-height: 100vh !important; }

.vw-100 { width: 100vw !important; }

.vh-100 { height: 100vh !important; }

.m-0 { margin: 0px !important; }

.mt-0, .my-0 { margin-top: 0px !important; }

.mr-0, .mx-0 { margin-right: 0px !important; }

.mb-0, .my-0 { margin-bottom: 0px !important; }

.ml-0, .mx-0 { margin-left: 0px !important; }

.m-1 { margin: 0.25rem !important; }

.mt-1, .my-1 { margin-top: 0.25rem !important; }

.mr-1, .mx-1 { margin-right: 0.25rem !important; }

.mb-1, .my-1 { margin-bottom: 0.25rem !important; }

.ml-1, .mx-1 { margin-left: 0.25rem !important; }

.m-2 { margin: 0.5rem !important; }

.mt-2, .my-2 { margin-top: 0.5rem !important; }

.mr-2, .mx-2 { margin-right: 0.5rem !important; }

.mb-2, .my-2 { margin-bottom: 0.5rem !important; }

.ml-2, .mx-2 { margin-left: 0.5rem !important; }

.m-3 { margin: 1rem !important; }

.mt-3, .my-3 { margin-top: 1rem !important; }

.mr-3, .mx-3 { margin-right: 1rem !important; }

.mb-3, .my-3 { margin-bottom: 1rem !important; }

.ml-3, .mx-3 { margin-left: 1rem !important; }

.m-4 { margin: 1.5rem !important; }

.mt-4, .my-4 { margin-top: 1.5rem !important; }

.mr-4, .mx-4 { margin-right: 1.5rem !important; }

.mb-4, .my-4 { margin-bottom: 1.5rem !important; }

.ml-4, .mx-4 { margin-left: 1.5rem !important; }

.m-5 { margin: 3rem !important; }

.mt-5, .my-5 { margin-top: 3rem !important; }

.mr-5, .mx-5 { margin-right: 3rem !important; }

.mb-5, .my-5 { margin-bottom: 3rem !important; }

.ml-5, .mx-5 { margin-left: 3rem !important; }

.p-0 { padding: 0px !important; }

.pt-0, .py-0 { padding-top: 0px !important; }

.pr-0, .px-0 { padding-right: 0px !important; }

.pb-0, .py-0 { padding-bottom: 0px !important; }

.pl-0, .px-0 { padding-left: 0px !important; }

.p-1 { padding: 0.25rem !important; }

.pt-1, .py-1 { padding-top: 0.25rem !important; }

.pr-1, .px-1 { padding-right: 0.25rem !important; }

.pb-1, .py-1 { padding-bottom: 0.25rem !important; }

.pl-1, .px-1 { padding-left: 0.25rem !important; }

.p-2 { padding: 0.5rem !important; }

.pt-2, .py-2 { padding-top: 0.5rem !important; }

.pr-2, .px-2 { padding-right: 0.5rem !important; }

.pb-2, .py-2 { padding-bottom: 0.5rem !important; }

.pl-2, .px-2 { padding-left: 0.5rem !important; }

.p-3 { padding: 1rem !important; }

.pt-3, .py-3 { padding-top: 1rem !important; }

.pr-3, .px-3 { padding-right: 1rem !important; }

.pb-3, .py-3 { padding-bottom: 1rem !important; }

.pl-3, .px-3 { padding-left: 1rem !important; }

.p-4 { padding: 1.5rem !important; }

.pt-4, .py-4 { padding-top: 1.5rem !important; }

.pr-4, .px-4 { padding-right: 1.5rem !important; }

.pb-4, .py-4 { padding-bottom: 1.5rem !important; }

.pl-4, .px-4 { padding-left: 1.5rem !important; }

.p-5 { padding: 3rem !important; }

.pt-5, .py-5 { padding-top: 3rem !important; }

.pr-5, .px-5 { padding-right: 3rem !important; }

.pb-5, .py-5 { padding-bottom: 3rem !important; }

.pl-5, .px-5 { padding-left: 3rem !important; }

.m-n1 { margin: -0.25rem !important; }

.mt-n1, .my-n1 { margin-top: -0.25rem !important; }

.mr-n1, .mx-n1 { margin-right: -0.25rem !important; }

.mb-n1, .my-n1 { margin-bottom: -0.25rem !important; }

.ml-n1, .mx-n1 { margin-left: -0.25rem !important; }

.m-n2 { margin: -0.5rem !important; }

.mt-n2, .my-n2 { margin-top: -0.5rem !important; }

.mr-n2, .mx-n2 { margin-right: -0.5rem !important; }

.mb-n2, .my-n2 { margin-bottom: -0.5rem !important; }

.ml-n2, .mx-n2 { margin-left: -0.5rem !important; }

.m-n3 { margin: -1rem !important; }

.mt-n3, .my-n3 { margin-top: -1rem !important; }

.mr-n3, .mx-n3 { margin-right: -1rem !important; }

.mb-n3, .my-n3 { margin-bottom: -1rem !important; }

.ml-n3, .mx-n3 { margin-left: -1rem !important; }

.m-n4 { margin: -1.5rem !important; }

.mt-n4, .my-n4 { margin-top: -1.5rem !important; }

.mr-n4, .mx-n4 { margin-right: -1.5rem !important; }

.mb-n4, .my-n4 { margin-bottom: -1.5rem !important; }

.ml-n4, .mx-n4 { margin-left: -1.5rem !important; }

.m-n5 { margin: -3rem !important; }

.mt-n5, .my-n5 { margin-top: -3rem !important; }

.mr-n5, .mx-n5 { margin-right: -3rem !important; }

.mb-n5, .my-n5 { margin-bottom: -3rem !important; }

.ml-n5, .mx-n5 { margin-left: -3rem !important; }

.m-auto { margin: auto !important; }

.mt-auto, .my-auto { margin-top: auto !important; }

.mr-auto, .mx-auto { margin-right: auto !important; }

.mb-auto, .my-auto { margin-bottom: auto !important; }

.ml-auto, .mx-auto { margin-left: auto !important; }

@media (min-width: 576px) {
  .m-sm-0 { margin: 0px !important; }
  .mt-sm-0, .my-sm-0 { margin-top: 0px !important; }
  .mr-sm-0, .mx-sm-0 { margin-right: 0px !important; }
  .mb-sm-0, .my-sm-0 { margin-bottom: 0px !important; }
  .ml-sm-0, .mx-sm-0 { margin-left: 0px !important; }
  .m-sm-1 { margin: 0.25rem !important; }
  .mt-sm-1, .my-sm-1 { margin-top: 0.25rem !important; }
  .mr-sm-1, .mx-sm-1 { margin-right: 0.25rem !important; }
  .mb-sm-1, .my-sm-1 { margin-bottom: 0.25rem !important; }
  .ml-sm-1, .mx-sm-1 { margin-left: 0.25rem !important; }
  .m-sm-2 { margin: 0.5rem !important; }
  .mt-sm-2, .my-sm-2 { margin-top: 0.5rem !important; }
  .mr-sm-2, .mx-sm-2 { margin-right: 0.5rem !important; }
  .mb-sm-2, .my-sm-2 { margin-bottom: 0.5rem !important; }
  .ml-sm-2, .mx-sm-2 { margin-left: 0.5rem !important; }
  .m-sm-3 { margin: 1rem !important; }
  .mt-sm-3, .my-sm-3 { margin-top: 1rem !important; }
  .mr-sm-3, .mx-sm-3 { margin-right: 1rem !important; }
  .mb-sm-3, .my-sm-3 { margin-bottom: 1rem !important; }
  .ml-sm-3, .mx-sm-3 { margin-left: 1rem !important; }
  .m-sm-4 { margin: 1.5rem !important; }
  .mt-sm-4, .my-sm-4 { margin-top: 1.5rem !important; }
  .mr-sm-4, .mx-sm-4 { margin-right: 1.5rem !important; }
  .mb-sm-4, .my-sm-4 { margin-bottom: 1.5rem !important; }
  .ml-sm-4, .mx-sm-4 { margin-left: 1.5rem !important; }
  .m-sm-5 { margin: 3rem !important; }
  .mt-sm-5, .my-sm-5 { margin-top: 3rem !important; }
  .mr-sm-5, .mx-sm-5 { margin-right: 3rem !important; }
  .mb-sm-5, .my-sm-5 { margin-bottom: 3rem !important; }
  .ml-sm-5, .mx-sm-5 { margin-left: 3rem !important; }
  .p-sm-0 { padding: 0px !important; }
  .pt-sm-0, .py-sm-0 { padding-top: 0px !important; }
  .pr-sm-0, .px-sm-0 { padding-right: 0px !important; }
  .pb-sm-0, .py-sm-0 { padding-bottom: 0px !important; }
  .pl-sm-0, .px-sm-0 { padding-left: 0px !important; }
  .p-sm-1 { padding: 0.25rem !important; }
  .pt-sm-1, .py-sm-1 { padding-top: 0.25rem !important; }
  .pr-sm-1, .px-sm-1 { padding-right: 0.25rem !important; }
  .pb-sm-1, .py-sm-1 { padding-bottom: 0.25rem !important; }
  .pl-sm-1, .px-sm-1 { padding-left: 0.25rem !important; }
  .p-sm-2 { padding: 0.5rem !important; }
  .pt-sm-2, .py-sm-2 { padding-top: 0.5rem !important; }
  .pr-sm-2, .px-sm-2 { padding-right: 0.5rem !important; }
  .pb-sm-2, .py-sm-2 { padding-bottom: 0.5rem !important; }
  .pl-sm-2, .px-sm-2 { padding-left: 0.5rem !important; }
  .p-sm-3 { padding: 1rem !important; }
  .pt-sm-3, .py-sm-3 { padding-top: 1rem !important; }
  .pr-sm-3, .px-sm-3 { padding-right: 1rem !important; }
  .pb-sm-3, .py-sm-3 { padding-bottom: 1rem !important; }
  .pl-sm-3, .px-sm-3 { padding-left: 1rem !important; }
  .p-sm-4 { padding: 1.5rem !important; }
  .pt-sm-4, .py-sm-4 { padding-top: 1.5rem !important; }
  .pr-sm-4, .px-sm-4 { padding-right: 1.5rem !important; }
  .pb-sm-4, .py-sm-4 { padding-bottom: 1.5rem !important; }
  .pl-sm-4, .px-sm-4 { padding-left: 1.5rem !important; }
  .p-sm-5 { padding: 3rem !important; }
  .pt-sm-5, .py-sm-5 { padding-top: 3rem !important; }
  .pr-sm-5, .px-sm-5 { padding-right: 3rem !important; }
  .pb-sm-5, .py-sm-5 { padding-bottom: 3rem !important; }
  .pl-sm-5, .px-sm-5 { padding-left: 3rem !important; }
  .m-sm-n1 { margin: -0.25rem !important; }
  .mt-sm-n1, .my-sm-n1 { margin-top: -0.25rem !important; }
  .mr-sm-n1, .mx-sm-n1 { margin-right: -0.25rem !important; }
  .mb-sm-n1, .my-sm-n1 { margin-bottom: -0.25rem !important; }
  .ml-sm-n1, .mx-sm-n1 { margin-left: -0.25rem !important; }
  .m-sm-n2 { margin: -0.5rem !important; }
  .mt-sm-n2, .my-sm-n2 { margin-top: -0.5rem !important; }
  .mr-sm-n2, .mx-sm-n2 { margin-right: -0.5rem !important; }
  .mb-sm-n2, .my-sm-n2 { margin-bottom: -0.5rem !important; }
  .ml-sm-n2, .mx-sm-n2 { margin-left: -0.5rem !important; }
  .m-sm-n3 { margin: -1rem !important; }
  .mt-sm-n3, .my-sm-n3 { margin-top: -1rem !important; }
  .mr-sm-n3, .mx-sm-n3 { margin-right: -1rem !important; }
  .mb-sm-n3, .my-sm-n3 { margin-bottom: -1rem !important; }
  .ml-sm-n3, .mx-sm-n3 { margin-left: -1rem !important; }
  .m-sm-n4 { margin: -1.5rem !important; }
  .mt-sm-n4, .my-sm-n4 { margin-top: -1.5rem !important; }
  .mr-sm-n4, .mx-sm-n4 { margin-right: -1.5rem !important; }
  .mb-sm-n4, .my-sm-n4 { margin-bottom: -1.5rem !important; }
  .ml-sm-n4, .mx-sm-n4 { margin-left: -1.5rem !important; }
  .m-sm-n5 { margin: -3rem !important; }
  .mt-sm-n5, .my-sm-n5 { margin-top: -3rem !important; }
  .mr-sm-n5, .mx-sm-n5 { margin-right: -3rem !important; }
  .mb-sm-n5, .my-sm-n5 { margin-bottom: -3rem !important; }
  .ml-sm-n5, .mx-sm-n5 { margin-left: -3rem !important; }
  .m-sm-auto { margin: auto !important; }
  .mt-sm-auto, .my-sm-auto { margin-top: auto !important; }
  .mr-sm-auto, .mx-sm-auto { margin-right: auto !important; }
  .mb-sm-auto, .my-sm-auto { margin-bottom: auto !important; }
  .ml-sm-auto, .mx-sm-auto { margin-left: auto !important; }
}

@media (min-width: 768px) {
  .m-md-0 { margin: 0px !important; }
  .mt-md-0, .my-md-0 { margin-top: 0px !important; }
  .mr-md-0, .mx-md-0 { margin-right: 0px !important; }
  .mb-md-0, .my-md-0 { margin-bottom: 0px !important; }
  .ml-md-0, .mx-md-0 { margin-left: 0px !important; }
  .m-md-1 { margin: 0.25rem !important; }
  .mt-md-1, .my-md-1 { margin-top: 0.25rem !important; }
  .mr-md-1, .mx-md-1 { margin-right: 0.25rem !important; }
  .mb-md-1, .my-md-1 { margin-bottom: 0.25rem !important; }
  .ml-md-1, .mx-md-1 { margin-left: 0.25rem !important; }
  .m-md-2 { margin: 0.5rem !important; }
  .mt-md-2, .my-md-2 { margin-top: 0.5rem !important; }
  .mr-md-2, .mx-md-2 { margin-right: 0.5rem !important; }
  .mb-md-2, .my-md-2 { margin-bottom: 0.5rem !important; }
  .ml-md-2, .mx-md-2 { margin-left: 0.5rem !important; }
  .m-md-3 { margin: 1rem !important; }
  .mt-md-3, .my-md-3 { margin-top: 1rem !important; }
  .mr-md-3, .mx-md-3 { margin-right: 1rem !important; }
  .mb-md-3, .my-md-3 { margin-bottom: 1rem !important; }
  .ml-md-3, .mx-md-3 { margin-left: 1rem !important; }
  .m-md-4 { margin: 1.5rem !important; }
  .mt-md-4, .my-md-4 { margin-top: 1.5rem !important; }
  .mr-md-4, .mx-md-4 { margin-right: 1.5rem !important; }
  .mb-md-4, .my-md-4 { margin-bottom: 1.5rem !important; }
  .ml-md-4, .mx-md-4 { margin-left: 1.5rem !important; }
  .m-md-5 { margin: 3rem !important; }
  .mt-md-5, .my-md-5 { margin-top: 3rem !important; }
  .mr-md-5, .mx-md-5 { margin-right: 3rem !important; }
  .mb-md-5, .my-md-5 { margin-bottom: 3rem !important; }
  .ml-md-5, .mx-md-5 { margin-left: 3rem !important; }
  .p-md-0 { padding: 0px !important; }
  .pt-md-0, .py-md-0 { padding-top: 0px !important; }
  .pr-md-0, .px-md-0 { padding-right: 0px !important; }
  .pb-md-0, .py-md-0 { padding-bottom: 0px !important; }
  .pl-md-0, .px-md-0 { padding-left: 0px !important; }
  .p-md-1 { padding: 0.25rem !important; }
  .pt-md-1, .py-md-1 { padding-top: 0.25rem !important; }
  .pr-md-1, .px-md-1 { padding-right: 0.25rem !important; }
  .pb-md-1, .py-md-1 { padding-bottom: 0.25rem !important; }
  .pl-md-1, .px-md-1 { padding-left: 0.25rem !important; }
  .p-md-2 { padding: 0.5rem !important; }
  .pt-md-2, .py-md-2 { padding-top: 0.5rem !important; }
  .pr-md-2, .px-md-2 { padding-right: 0.5rem !important; }
  .pb-md-2, .py-md-2 { padding-bottom: 0.5rem !important; }
  .pl-md-2, .px-md-2 { padding-left: 0.5rem !important; }
  .p-md-3 { padding: 1rem !important; }
  .pt-md-3, .py-md-3 { padding-top: 1rem !important; }
  .pr-md-3, .px-md-3 { padding-right: 1rem !important; }
  .pb-md-3, .py-md-3 { padding-bottom: 1rem !important; }
  .pl-md-3, .px-md-3 { padding-left: 1rem !important; }
  .p-md-4 { padding: 1.5rem !important; }
  .pt-md-4, .py-md-4 { padding-top: 1.5rem !important; }
  .pr-md-4, .px-md-4 { padding-right: 1.5rem !important; }
  .pb-md-4, .py-md-4 { padding-bottom: 1.5rem !important; }
  .pl-md-4, .px-md-4 { padding-left: 1.5rem !important; }
  .p-md-5 { padding: 3rem !important; }
  .pt-md-5, .py-md-5 { padding-top: 3rem !important; }
  .pr-md-5, .px-md-5 { padding-right: 3rem !important; }
  .pb-md-5, .py-md-5 { padding-bottom: 3rem !important; }
  .pl-md-5, .px-md-5 { padding-left: 3rem !important; }
  .m-md-n1 { margin: -0.25rem !important; }
  .mt-md-n1, .my-md-n1 { margin-top: -0.25rem !important; }
  .mr-md-n1, .mx-md-n1 { margin-right: -0.25rem !important; }
  .mb-md-n1, .my-md-n1 { margin-bottom: -0.25rem !important; }
  .ml-md-n1, .mx-md-n1 { margin-left: -0.25rem !important; }
  .m-md-n2 { margin: -0.5rem !important; }
  .mt-md-n2, .my-md-n2 { margin-top: -0.5rem !important; }
  .mr-md-n2, .mx-md-n2 { margin-right: -0.5rem !important; }
  .mb-md-n2, .my-md-n2 { margin-bottom: -0.5rem !important; }
  .ml-md-n2, .mx-md-n2 { margin-left: -0.5rem !important; }
  .m-md-n3 { margin: -1rem !important; }
  .mt-md-n3, .my-md-n3 { margin-top: -1rem !important; }
  .mr-md-n3, .mx-md-n3 { margin-right: -1rem !important; }
  .mb-md-n3, .my-md-n3 { margin-bottom: -1rem !important; }
  .ml-md-n3, .mx-md-n3 { margin-left: -1rem !important; }
  .m-md-n4 { margin: -1.5rem !important; }
  .mt-md-n4, .my-md-n4 { margin-top: -1.5rem !important; }
  .mr-md-n4, .mx-md-n4 { margin-right: -1.5rem !important; }
  .mb-md-n4, .my-md-n4 { margin-bottom: -1.5rem !important; }
  .ml-md-n4, .mx-md-n4 { margin-left: -1.5rem !important; }
  .m-md-n5 { margin: -3rem !important; }
  .mt-md-n5, .my-md-n5 { margin-top: -3rem !important; }
  .mr-md-n5, .mx-md-n5 { margin-right: -3rem !important; }
  .mb-md-n5, .my-md-n5 { margin-bottom: -3rem !important; }
  .ml-md-n5, .mx-md-n5 { margin-left: -3rem !important; }
  .m-md-auto { margin: auto !important; }
  .mt-md-auto, .my-md-auto { margin-top: auto !important; }
  .mr-md-auto, .mx-md-auto { margin-right: auto !important; }
  .mb-md-auto, .my-md-auto { margin-bottom: auto !important; }
  .ml-md-auto, .mx-md-auto { margin-left: auto !important; }
}

@media (min-width: 992px) {
  .m-lg-0 { margin: 0px !important; }
  .mt-lg-0, .my-lg-0 { margin-top: 0px !important; }
  .mr-lg-0, .mx-lg-0 { margin-right: 0px !important; }
  .mb-lg-0, .my-lg-0 { margin-bottom: 0px !important; }
  .ml-lg-0, .mx-lg-0 { margin-left: 0px !important; }
  .m-lg-1 { margin: 0.25rem !important; }
  .mt-lg-1, .my-lg-1 { margin-top: 0.25rem !important; }
  .mr-lg-1, .mx-lg-1 { margin-right: 0.25rem !important; }
  .mb-lg-1, .my-lg-1 { margin-bottom: 0.25rem !important; }
  .ml-lg-1, .mx-lg-1 { margin-left: 0.25rem !important; }
  .m-lg-2 { margin: 0.5rem !important; }
  .mt-lg-2, .my-lg-2 { margin-top: 0.5rem !important; }
  .mr-lg-2, .mx-lg-2 { margin-right: 0.5rem !important; }
  .mb-lg-2, .my-lg-2 { margin-bottom: 0.5rem !important; }
  .ml-lg-2, .mx-lg-2 { margin-left: 0.5rem !important; }
  .m-lg-3 { margin: 1rem !important; }
  .mt-lg-3, .my-lg-3 { margin-top: 1rem !important; }
  .mr-lg-3, .mx-lg-3 { margin-right: 1rem !important; }
  .mb-lg-3, .my-lg-3 { margin-bottom: 1rem !important; }
  .ml-lg-3, .mx-lg-3 { margin-left: 1rem !important; }
  .m-lg-4 { margin: 1.5rem !important; }
  .mt-lg-4, .my-lg-4 { margin-top: 1.5rem !important; }
  .mr-lg-4, .mx-lg-4 { margin-right: 1.5rem !important; }
  .mb-lg-4, .my-lg-4 { margin-bottom: 1.5rem !important; }
  .ml-lg-4, .mx-lg-4 { margin-left: 1.5rem !important; }
  .m-lg-5 { margin: 3rem !important; }
  .mt-lg-5, .my-lg-5 { margin-top: 3rem !important; }
  .mr-lg-5, .mx-lg-5 { margin-right: 3rem !important; }
  .mb-lg-5, .my-lg-5 { margin-bottom: 3rem !important; }
  .ml-lg-5, .mx-lg-5 { margin-left: 3rem !important; }
  .p-lg-0 { padding: 0px !important; }
  .pt-lg-0, .py-lg-0 { padding-top: 0px !important; }
  .pr-lg-0, .px-lg-0 { padding-right: 0px !important; }
  .pb-lg-0, .py-lg-0 { padding-bottom: 0px !important; }
  .pl-lg-0, .px-lg-0 { padding-left: 0px !important; }
  .p-lg-1 { padding: 0.25rem !important; }
  .pt-lg-1, .py-lg-1 { padding-top: 0.25rem !important; }
  .pr-lg-1, .px-lg-1 { padding-right: 0.25rem !important; }
  .pb-lg-1, .py-lg-1 { padding-bottom: 0.25rem !important; }
  .pl-lg-1, .px-lg-1 { padding-left: 0.25rem !important; }
  .p-lg-2 { padding: 0.5rem !important; }
  .pt-lg-2, .py-lg-2 { padding-top: 0.5rem !important; }
  .pr-lg-2, .px-lg-2 { padding-right: 0.5rem !important; }
  .pb-lg-2, .py-lg-2 { padding-bottom: 0.5rem !important; }
  .pl-lg-2, .px-lg-2 { padding-left: 0.5rem !important; }
  .p-lg-3 { padding: 1rem !important; }
  .pt-lg-3, .py-lg-3 { padding-top: 1rem !important; }
  .pr-lg-3, .px-lg-3 { padding-right: 1rem !important; }
  .pb-lg-3, .py-lg-3 { padding-bottom: 1rem !important; }
  .pl-lg-3, .px-lg-3 { padding-left: 1rem !important; }
  .p-lg-4 { padding: 1.5rem !important; }
  .pt-lg-4, .py-lg-4 { padding-top: 1.5rem !important; }
  .pr-lg-4, .px-lg-4 { padding-right: 1.5rem !important; }
  .pb-lg-4, .py-lg-4 { padding-bottom: 1.5rem !important; }
  .pl-lg-4, .px-lg-4 { padding-left: 1.5rem !important; }
  .p-lg-5 { padding: 3rem !important; }
  .pt-lg-5, .py-lg-5 { padding-top: 3rem !important; }
  .pr-lg-5, .px-lg-5 { padding-right: 3rem !important; }
  .pb-lg-5, .py-lg-5 { padding-bottom: 3rem !important; }
  .pl-lg-5, .px-lg-5 { padding-left: 3rem !important; }
  .m-lg-n1 { margin: -0.25rem !important; }
  .mt-lg-n1, .my-lg-n1 { margin-top: -0.25rem !important; }
  .mr-lg-n1, .mx-lg-n1 { margin-right: -0.25rem !important; }
  .mb-lg-n1, .my-lg-n1 { margin-bottom: -0.25rem !important; }
  .ml-lg-n1, .mx-lg-n1 { margin-left: -0.25rem !important; }
  .m-lg-n2 { margin: -0.5rem !important; }
  .mt-lg-n2, .my-lg-n2 { margin-top: -0.5rem !important; }
  .mr-lg-n2, .mx-lg-n2 { margin-right: -0.5rem !important; }
  .mb-lg-n2, .my-lg-n2 { margin-bottom: -0.5rem !important; }
  .ml-lg-n2, .mx-lg-n2 { margin-left: -0.5rem !important; }
  .m-lg-n3 { margin: -1rem !important; }
  .mt-lg-n3, .my-lg-n3 { margin-top: -1rem !important; }
  .mr-lg-n3, .mx-lg-n3 { margin-right: -1rem !important; }
  .mb-lg-n3, .my-lg-n3 { margin-bottom: -1rem !important; }
  .ml-lg-n3, .mx-lg-n3 { margin-left: -1rem !important; }
  .m-lg-n4 { margin: -1.5rem !important; }
  .mt-lg-n4, .my-lg-n4 { margin-top: -1.5rem !important; }
  .mr-lg-n4, .mx-lg-n4 { margin-right: -1.5rem !important; }
  .mb-lg-n4, .my-lg-n4 { margin-bottom: -1.5rem !important; }
  .ml-lg-n4, .mx-lg-n4 { margin-left: -1.5rem !important; }
  .m-lg-n5 { margin: -3rem !important; }
  .mt-lg-n5, .my-lg-n5 { margin-top: -3rem !important; }
  .mr-lg-n5, .mx-lg-n5 { margin-right: -3rem !important; }
  .mb-lg-n5, .my-lg-n5 { margin-bottom: -3rem !important; }
  .ml-lg-n5, .mx-lg-n5 { margin-left: -3rem !important; }
  .m-lg-auto { margin: auto !important; }
  .mt-lg-auto, .my-lg-auto { margin-top: auto !important; }
  .mr-lg-auto, .mx-lg-auto { margin-right: auto !important; }
  .mb-lg-auto, .my-lg-auto { margin-bottom: auto !important; }
  .ml-lg-auto, .mx-lg-auto { margin-left: auto !important; }
}

@media (min-width: 1200px) {
  .m-xl-0 { margin: 0px !important; }
  .mt-xl-0, .my-xl-0 { margin-top: 0px !important; }
  .mr-xl-0, .mx-xl-0 { margin-right: 0px !important; }
  .mb-xl-0, .my-xl-0 { margin-bottom: 0px !important; }
  .ml-xl-0, .mx-xl-0 { margin-left: 0px !important; }
  .m-xl-1 { margin: 0.25rem !important; }
  .mt-xl-1, .my-xl-1 { margin-top: 0.25rem !important; }
  .mr-xl-1, .mx-xl-1 { margin-right: 0.25rem !important; }
  .mb-xl-1, .my-xl-1 { margin-bottom: 0.25rem !important; }
  .ml-xl-1, .mx-xl-1 { margin-left: 0.25rem !important; }
  .m-xl-2 { margin: 0.5rem !important; }
  .mt-xl-2, .my-xl-2 { margin-top: 0.5rem !important; }
  .mr-xl-2, .mx-xl-2 { margin-right: 0.5rem !important; }
  .mb-xl-2, .my-xl-2 { margin-bottom: 0.5rem !important; }
  .ml-xl-2, .mx-xl-2 { margin-left: 0.5rem !important; }
  .m-xl-3 { margin: 1rem !important; }
  .mt-xl-3, .my-xl-3 { margin-top: 1rem !important; }
  .mr-xl-3, .mx-xl-3 { margin-right: 1rem !important; }
  .mb-xl-3, .my-xl-3 { margin-bottom: 1rem !important; }
  .ml-xl-3, .mx-xl-3 { margin-left: 1rem !important; }
  .m-xl-4 { margin: 1.5rem !important; }
  .mt-xl-4, .my-xl-4 { margin-top: 1.5rem !important; }
  .mr-xl-4, .mx-xl-4 { margin-right: 1.5rem !important; }
  .mb-xl-4, .my-xl-4 { margin-bottom: 1.5rem !important; }
  .ml-xl-4, .mx-xl-4 { margin-left: 1.5rem !important; }
  .m-xl-5 { margin: 3rem !important; }
  .mt-xl-5, .my-xl-5 { margin-top: 3rem !important; }
  .mr-xl-5, .mx-xl-5 { margin-right: 3rem !important; }
  .mb-xl-5, .my-xl-5 { margin-bottom: 3rem !important; }
  .ml-xl-5, .mx-xl-5 { margin-left: 3rem !important; }
  .p-xl-0 { padding: 0px !important; }
  .pt-xl-0, .py-xl-0 { padding-top: 0px !important; }
  .pr-xl-0, .px-xl-0 { padding-right: 0px !important; }
  .pb-xl-0, .py-xl-0 { padding-bottom: 0px !important; }
  .pl-xl-0, .px-xl-0 { padding-left: 0px !important; }
  .p-xl-1 { padding: 0.25rem !important; }
  .pt-xl-1, .py-xl-1 { padding-top: 0.25rem !important; }
  .pr-xl-1, .px-xl-1 { padding-right: 0.25rem !important; }
  .pb-xl-1, .py-xl-1 { padding-bottom: 0.25rem !important; }
  .pl-xl-1, .px-xl-1 { padding-left: 0.25rem !important; }
  .p-xl-2 { padding: 0.5rem !important; }
  .pt-xl-2, .py-xl-2 { padding-top: 0.5rem !important; }
  .pr-xl-2, .px-xl-2 { padding-right: 0.5rem !important; }
  .pb-xl-2, .py-xl-2 { padding-bottom: 0.5rem !important; }
  .pl-xl-2, .px-xl-2 { padding-left: 0.5rem !important; }
  .p-xl-3 { padding: 1rem !important; }
  .pt-xl-3, .py-xl-3 { padding-top: 1rem !important; }
  .pr-xl-3, .px-xl-3 { padding-right: 1rem !important; }
  .pb-xl-3, .py-xl-3 { padding-bottom: 1rem !important; }
  .pl-xl-3, .px-xl-3 { padding-left: 1rem !important; }
  .p-xl-4 { padding: 1.5rem !important; }
  .pt-xl-4, .py-xl-4 { padding-top: 1.5rem !important; }
  .pr-xl-4, .px-xl-4 { padding-right: 1.5rem !important; }
  .pb-xl-4, .py-xl-4 { padding-bottom: 1.5rem !important; }
  .pl-xl-4, .px-xl-4 { padding-left: 1.5rem !important; }
  .p-xl-5 { padding: 3rem !important; }
  .pt-xl-5, .py-xl-5 { padding-top: 3rem !important; }
  .pr-xl-5, .px-xl-5 { padding-right: 3rem !important; }
  .pb-xl-5, .py-xl-5 { padding-bottom: 3rem !important; }
  .pl-xl-5, .px-xl-5 { padding-left: 3rem !important; }
  .m-xl-n1 { margin: -0.25rem !important; }
  .mt-xl-n1, .my-xl-n1 { margin-top: -0.25rem !important; }
  .mr-xl-n1, .mx-xl-n1 { margin-right: -0.25rem !important; }
  .mb-xl-n1, .my-xl-n1 { margin-bottom: -0.25rem !important; }
  .ml-xl-n1, .mx-xl-n1 { margin-left: -0.25rem !important; }
  .m-xl-n2 { margin: -0.5rem !important; }
  .mt-xl-n2, .my-xl-n2 { margin-top: -0.5rem !important; }
  .mr-xl-n2, .mx-xl-n2 { margin-right: -0.5rem !important; }
  .mb-xl-n2, .my-xl-n2 { margin-bottom: -0.5rem !important; }
  .ml-xl-n2, .mx-xl-n2 { margin-left: -0.5rem !important; }
  .m-xl-n3 { margin: -1rem !important; }
  .mt-xl-n3, .my-xl-n3 { margin-top: -1rem !important; }
  .mr-xl-n3, .mx-xl-n3 { margin-right: -1rem !important; }
  .mb-xl-n3, .my-xl-n3 { margin-bottom: -1rem !important; }
  .ml-xl-n3, .mx-xl-n3 { margin-left: -1rem !important; }
  .m-xl-n4 { margin: -1.5rem !important; }
  .mt-xl-n4, .my-xl-n4 { margin-top: -1.5rem !important; }
  .mr-xl-n4, .mx-xl-n4 { margin-right: -1.5rem !important; }
  .mb-xl-n4, .my-xl-n4 { margin-bottom: -1.5rem !important; }
  .ml-xl-n4, .mx-xl-n4 { margin-left: -1.5rem !important; }
  .m-xl-n5 { margin: -3rem !important; }
  .mt-xl-n5, .my-xl-n5 { margin-top: -3rem !important; }
  .mr-xl-n5, .mx-xl-n5 { margin-right: -3rem !important; }
  .mb-xl-n5, .my-xl-n5 { margin-bottom: -3rem !important; }
  .ml-xl-n5, .mx-xl-n5 { margin-left: -3rem !important; }
  .m-xl-auto { margin: auto !important; }
  .mt-xl-auto, .my-xl-auto { margin-top: auto !important; }
  .mr-xl-auto, .mx-xl-auto { margin-right: auto !important; }
  .mb-xl-auto, .my-xl-auto { margin-bottom: auto !important; }
  .ml-xl-auto, .mx-xl-auto { margin-left: auto !important; }
}

.stretched-link::after { position: absolute; inset: 0px; z-index: 1; pointe=
r-events: auto; content: ""; background-color: rgba(0, 0, 0, 0); }

.text-monospace { font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Li=
beration Mono", "Courier New", monospace !important; }

.text-justify { text-align: justify !important; }

.text-wrap { white-space: normal !important; }

.text-nowrap { white-space: nowrap !important; }

.text-truncate { overflow: hidden; text-overflow: ellipsis; white-space: no=
wrap; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

@media (min-width: 576px) {
  .text-sm-left { text-align: left !important; }
  .text-sm-right { text-align: right !important; }
  .text-sm-center { text-align: center !important; }
}

@media (min-width: 768px) {
  .text-md-left { text-align: left !important; }
  .text-md-right { text-align: right !important; }
  .text-md-center { text-align: center !important; }
}

@media (min-width: 992px) {
  .text-lg-left { text-align: left !important; }
  .text-lg-right { text-align: right !important; }
  .text-lg-center { text-align: center !important; }
}

@media (min-width: 1200px) {
  .text-xl-left { text-align: left !important; }
  .text-xl-right { text-align: right !important; }
  .text-xl-center { text-align: center !important; }
}

.text-lowercase { text-transform: lowercase !important; }

.text-uppercase { text-transform: uppercase !important; }

.text-capitalize { text-transform: capitalize !important; }

.font-weight-light { font-weight: 300 !important; }

.font-weight-lighter { font-weight: lighter !important; }

.font-weight-normal { font-weight: 400 !important; }

.font-weight-bold { font-weight: 700 !important; }

.font-weight-bolder { font-weight: bolder !important; }

.font-italic { font-style: italic !important; }

.text-white { color: rgb(255, 255, 255) !important; }

.text-primary { color: rgb(0, 123, 255) !important; }

a.text-primary:focus, a.text-primary:hover { color: rgb(0, 86, 179) !import=
ant; }

.text-secondary { color: rgb(108, 117, 125) !important; }

a.text-secondary:focus, a.text-secondary:hover { color: rgb(73, 79, 84) !im=
portant; }

.text-success { color: rgb(40, 167, 69) !important; }

a.text-success:focus, a.text-success:hover { color: rgb(25, 105, 44) !impor=
tant; }

.text-info { color: rgb(23, 162, 184) !important; }

a.text-info:focus, a.text-info:hover { color: rgb(15, 102, 116) !important;=
 }

.text-warning { color: rgb(255, 193, 7) !important; }

a.text-warning:focus, a.text-warning:hover { color: rgb(186, 139, 0) !impor=
tant; }

.text-danger { color: rgb(220, 53, 69) !important; }

a.text-danger:focus, a.text-danger:hover { color: rgb(167, 29, 42) !importa=
nt; }

.text-light { color: rgb(248, 249, 250) !important; }

a.text-light:focus, a.text-light:hover { color: rgb(203, 211, 218) !importa=
nt; }

.text-dark { color: rgb(52, 58, 64) !important; }

a.text-dark:focus, a.text-dark:hover { color: rgb(18, 20, 22) !important; }

.text-body { color: rgb(33, 37, 41) !important; }

.text-muted { color: rgb(108, 117, 125) !important; }

.text-black-50 { color: rgba(0, 0, 0, 0.5) !important; }

.text-white-50 { color: rgba(255, 255, 255, 0.5) !important; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.text-decoration-none { text-decoration: none !important; }

.text-break { overflow-wrap: break-word !important; }

.text-reset { color: inherit !important; }

.visible { visibility: visible !important; }

.invisible { visibility: hidden !important; }

@media print {
  *, ::after, ::before { text-shadow: none !important; box-shadow: none !im=
portant; }
  a:not(.btn) { text-decoration: underline; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  pre { white-space: pre-wrap !important; }
  blockquote, pre { border: 1px solid rgb(173, 181, 189); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  @page { size: a3; }
  body { min-width: 992px !important; }
  .container { min-width: 992px !important; }
  .navbar { display: none; }
  .badge { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, =
230) !important; }
  .table-dark { color: inherit; }
  .table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark th=
ead th { border-color: rgb(222, 226, 230); }
  .table .thead-dark th { color: inherit; border-color: rgb(222, 226, 230);=
 }
}
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cgi.cse.unsw.edu.au/~dp1092/24T2/flask.cgi/static/course.css?209281714483221.0504942=

@charset "utf-8";

:root { --main-color: #fdc82f; }

main[aria-label=3D"Content"] { max-width: 56rem; margin: 1rem auto; }

pre { border: thin solid rgb(238, 238, 238); margin: 0.25rem 0px; padding: =
0.25rem 0.5rem; white-space: pre-wrap; }

blockquote[is=3D"markdown"] { background: rgb(249, 249, 249); border-left: =
10px solid rgb(204, 204, 204); margin: 1.5em 10px; padding: 0.5em 10px; quo=
tes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; }

code { background-color: rgba(27, 31, 35, 0.05); padding: 0.2em 0.4em; bord=
er-radius: 3px; color: initial; white-space: nowrap; }

pre[is=3D"tty"] > kbd { font-weight: bold; font-size: 100%; padding: 0px; b=
ackground: none; border: none; color: black; }

pre[is=3D"tty"] > kbd::before { font-weight: normal; color: var(--gray); }

pre[is=3D"tty"] > kbd[data-prompt]::before { content: attr(data-prompt) " "=
; }

pre[is=3D"tty"] > kbd[is=3D"sh"]::before { content: "$ "; }

pre[is=3D"tty"] > kbd[is=3D"sh,"]::before { content: "> "; }

pre[is=3D"tty"] > kbd[is=3D"sh_comment"]::before { content: "# "; }

pre[is=3D"tty"] > kbd[is=3D"sh-comment"]::before { content: "# "; }

pre[is=3D"tty"] > kbd[is=3D"sh_comment"] { color: grey; }

pre[is=3D"tty"] > kbd[is=3D"sh-comment"] { color: grey; }

pre[is=3D"tty"] > kbd[is=3D"gdb"]::before { content: "(gdb) "; }

pre[is=3D"tty"] > kbd[is=3D"spim"]::before { content: "(spim) "; }

pre[is=3D"tty"] > kbd[is=3D"mipsy"]::before { content: "[mipsy] "; }

pre[is=3D"tty"] > kbd[is=3D"py"]::before { content: ">>> "; }

pre[is=3D"tty"] > kbd[is=3D"py,"]::before { content: "... "; }

pre[is=3D"tty"] > kbd[is=3D"py_help"]::before { content: "help> "; }

pre[is=3D"tty"] > kbd[is=3D"py-help"]::before { content: "help> "; }

pre[is=3D"tty"] > kbd[is=3D"node"]::before { content: " > "; }

pre[is=3D"tty"] > kbd[is=3D"psql"]::before { content: attr(db) "=3D# "; }

pre[is=3D"tty"] > kbd[is=3D"psql,"]::before { content: attr(db) "-# "; }

.eof::before { content: "Ctrl-D"; font-weight: lighter; font-style: italic;=
 border: thin solid; border-radius: 0.25rem; padding: 0.1rem 0.25rem; }

.eof::after { position: relative; content: "Ctrl and D keys pressed"; borde=
r: 2px solid black; background-color: var(--main-color); opacity: 0; width:=
 10px; height: 5em; border-radius: 0.25rem; transition: opacity 0.5s ease 0=
s; }

.eof:hover::after { opacity: 1; }

pre { tab-size: 4; }

pre.mips { tab-size: 8; }

div.highlight.mips pre { tab-size: 8; }

body > ol > li { margin-top: 1rem; }

li > code:nth-child(1) { margin-left: 1ex; }

p { margin-bottom: 0.5rem; }

* + p { margin-top: 0.5rem; }

section.homepage-section { margin-top: 0.5rem; border-top: .25rem solid var=
(--main-color); padding-top: 0.5rem; }

.hidden { display: none; }

aside { border-top-color: ; border-top-style: ; border-top-width: ; border-=
right-color: ; border-right-style: ; border-right-width: ; border-bottom-co=
lor: ; border-bottom-style: ; border-bottom-width: ; border-left-color: ; b=
order-left-style: ; border-image-source: ; border-image-slice: ; border-ima=
ge-width: ; border-image-outset: ; border-image-repeat: ; border-left-width=
: 0.25rem; border-radius: 0.25rem; margin: 1.5rem; padding: 0.5rem; overflo=
w: hidden; }

aside::before { text-transform: uppercase; font-weight: bold; font-size: 80=
%; display: block; color: var(--white); max-width: 6rem; padding: 0.5rem; m=
argin-top: -0.5rem; margin-left: -0.5rem; margin-bottom: 0.5rem; border-bot=
tom-right-radius: 0.25rem; }

aside.hint { border-color: var(--green); }

aside.hint::before { background-color: var(--green); content: "hint: "; }

aside.note { border-color: var(--cyan); }

aside.note::before { background-color: var(--cyan); content: "note: "; }

aside.answer { border-color: var(--blue); }

aside.answer::before { background-color: var(--blue); content: "answer: "; =
}

aside.solution { border-color: var(--blue); }

aside.solution::before { background-color: var(--blue); content: "solution:=
 "; }

aside.warning { border-color: var(--orange); }

aside.warning::before { background-color: var(--orange); content: "warning:=
 "; }

aside.rationale { border-color: var(--purple); }

aside.rationale::before { background-color: var(--purple); content: "ration=
ale: "; }

aside.danger { border-color: var(--red); }

aside.danger::before { background-color: var(--red); content: "danger: "; }

body > nav.navbar { background-color: var(--main-color); }

section { margin-bottom: 2rem; padding-bottom: 1rem; border-bottom: 1px sol=
id rgb(238, 238, 238); }

section > header { padding: 0.75rem 1.25rem; margin-bottom: 1rem; border-wi=
dth: 1px 1px 1px 0.5rem; border-style: solid; border-color: initial; border=
-image: initial; border-radius: 0.25rem; }

section > header > h3 { margin: 0px; }

section.exercise > header { border-color: var(--green); }

section.exercise.pair-exercise > header { border-color: var(--yellow); }

section.exercise.peer_assessed-exercise > header { border-color: var(--oran=
ge); }

section.exercise.challenge-exercise > header { border-color: var(--red); }

section.exercise.test-exercise > header { border-color: var(--blue); }

.login-form { margin: 1rem auto; }

.login-form .form-group { margin-top: 0px; margin-bottom: 0px; }

.login-form button { margin-top: 1rem; }

.login-form div.form-group input[type=3D"text"] { border-radius: 0.3rem 0.3=
rem 0px 0px; }

.login-form div.form-group input[type=3D"password"] { border-radius: 0px 0p=
x 0.3rem 0.3rem; }

.highlight { border: 1px solid rgb(240, 240, 240); border-radius: 0.25rem; =
margin: 0.25rem 1rem; padding: 0.25rem 0.5rem; }

.highlight > pre { border: 0px; margin: 0px; padding: 0px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(248, 248, 248); }

.highlight .c { color: rgb(64, 128, 128); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 128); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 128); font-style: italic; }

.highlight .cp { color: rgb(188, 122, 0); }

.highlight .cpf { color: rgb(64, 128, 128); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 128); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 128); font-style: italic; }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kd { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kn { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kp { color: rgb(0, 128, 0); }

.highlight .kr { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .kt { color: rgb(176, 0, 64); }

.highlight .m { color: rgb(102, 102, 102); }

.highlight .s { color: rgb(186, 33, 33); }

.highlight .na { color: rgb(125, 144, 41); }

.highlight .nb { color: rgb(0, 128, 0); }

.highlight .nc { color: rgb(0, 0, 255); font-weight: bold; }

.highlight .no { color: rgb(136, 0, 0); }

.highlight .nd { color: rgb(170, 34, 255); }

.highlight .ni { color: rgb(153, 153, 153); font-weight: bold; }

.highlight .ne { color: rgb(210, 65, 58); font-weight: bold; }

.highlight .nf { color: rgb(0, 0, 255); }

.highlight .nl { color: rgb(160, 160, 0); }

.highlight .nn { color: rgb(0, 0, 255); font-weight: bold; }

.highlight .nt { color: rgb(0, 128, 0); font-weight: bold; }

.highlight .nv { color: rgb(25, 23, 124); }

.highlight .ow { color: rgb(170, 34, 255); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(102, 102, 102); }

.highlight .mf { color: rgb(102, 102, 102); }

.highlight .mh { color: rgb(102, 102, 102); }

.highlight .mi { color: rgb(102, 102, 102); }

.highlight .mo { color: rgb(102, 102, 102); }

.highlight .sa { color: rgb(186, 33, 33); }

.highlight .sb { color: rgb(186, 33, 33); }

.highlight .sc { color: rgb(186, 33, 33); }

.highlight .dl { color: rgb(186, 33, 33); }

.highlight .sd { color: rgb(186, 33, 33); font-style: italic; }

.highlight .s2 { color: rgb(186, 33, 33); }

.highlight .se { color: rgb(187, 102, 34); font-weight: bold; }

.highlight .sh { color: rgb(186, 33, 33); }

.highlight .si { color: rgb(187, 102, 136); font-weight: bold; }

.highlight .sx { color: rgb(0, 128, 0); }

.highlight .sr { color: rgb(187, 102, 136); }

.highlight .s1 { color: rgb(186, 33, 33); }

.highlight .ss { color: rgb(25, 23, 124); }

.highlight .bp { color: rgb(0, 128, 0); }

.highlight .fm { color: rgb(0, 0, 255); }

.highlight .vc { color: rgb(25, 23, 124); }

.highlight .vg { color: rgb(25, 23, 124); }

.highlight .vi { color: rgb(25, 23, 124); }

.highlight .vm { color: rgb(25, 23, 124); }

.highlight .il { color: rgb(102, 102, 102); }

@media do-not-use-these-styles {
  pre.cspaint-nice { line-height: 1; font-family: monospace; font-size: 1.5=
em; }
  .inverted-color { background-color: rgb(45, 45, 45); color: white; }
  .inverted-color.command_line { background-color: rgb(45, 45, 45); color: =
white; padding: 0.5em; margin-right: 0em; }
  .card-body.thinner { padding: 0.7rem; }
  span.output { margin-top: 0.2em; display: inline-block; }
  kbd.inverted-color.shell { background-color: inherit; color: inherit; fon=
t-family: monospace; font-weight: bold; display: inline-block; margin-botto=
m: 0.2em; line-height: 1.25em; }
  kbd.inverted-color.shell::before { content: "$ "; background-color: inher=
it; color: inherit; font-family: monospace; }
  th.borderless td.borderless .borderless { border-top: 0px; }
  .nav-list > .active { color: rgb(255, 255, 255); text-shadow: rgba(0, 0, =
0, 0.2) 0px -1px 0px; background-color: rgb(0, 136, 204); }
  a.nav-link.visible-tab { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(255, 255, 255); }
  a.nav-link.visible-tab.active { border-color: rgb(206, 206, 206) rgb(206,=
 206, 206) rgb(255, 255, 255); }
  pre { padding: 9.5px; margin: 0px 0px 10px; line-height: 1.42857; color: =
rgb(51, 51, 51); word-break: break-all; overflow-wrap: break-word; backgrou=
nd-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-=
radius: 4px; }
  .card { margin-top: 1em; margin-bottom: 1em; }
  body { font-size: 14px; }
  body { font-family: Verdana, Tahoma, Arial, sans-serif; line-height: 1.6;=
 }
  a { text-decoration: none; }
  #heading { margin-top: 1rem; margin-bottom: 1rem; }
  .heading_button { padding: 10px; }
  #heading, .heading_button { text-align: center; font-size: larger; font-w=
eight: bold; }
  .heading_link { font-weight: lighter; font-size: small; top: 10px; }
  #left_heading_link { left: 10px; }
  #right_heading_link { right: 10px; }
  .program_description { font-size: 110%; font-weight: bold; font-family: c=
ourier; }
  .tut > ol > li, .separated_list > li { margin-top: 2em; }
  .answer { margin: 1em; padding: 16px 8px; border-radius: 10px; }
  .written.answer { margin-top: 0.5em; padding: 4px 8px; }
  .tutlab h2 { text-align: center; }
  .lab h3, .section_heading { margin: 0px; padding: 0px; border-radius: 10p=
x; }
  .command_line { font-family: "Courier New", Courier, monospace; margin: 0=
.5em 1em 0.5em 0em; padding: 4px 8px; border-radius: 10px; white-space: pre=
; font-size: 1.5em; line-height: 125%; border: thin solid rgb(153, 153, 204=
); }
  .command_line kbd { font-size: 85%; font-family: Verdana, Tahoma, Arial, =
sans-serif; padding: 3px; box-shadow: none; }
  kbd.shell::before { content: "$ "; background-color: rgb(244, 244, 255); =
font-family: "Courier New", Courier, monospace; }
  kbd { color: black; background: rgb(224, 224, 224); }
  samp { font-weight: lighter; font-family: "Courier New", Courier, monospa=
ce; }
  .program { font-size: 1em; line-height: 120%; font-family: "Lucida Consol=
e", Courier, "Courier New", monospace; }
  pre.program { border: thin solid rgb(153, 153, 204); margin: 1em; padding=
: 4px 8px; border-radius: 10px; }
  .cp_embed_wrapper { margin: 1em 0em; }
  .answer pre.program { margin: 0.5em; }
  .example_link { font-weight: bold; font-size: 1.2em; font-family: "Courie=
r New", Courier, monospace; }
  .example_header_comment { font-size: 1.2em; font-family: Verdana, Tahoma,=
 Arial, sans-serif; }
  div.date_changed { margin-top: 2em; margin-left: -3em; text-align: center=
; font-family: monospace; font-size: 110%; font-style: italic; }
  .tutors_only::after { content: "(tutors-only)"; font-weight: lighter; fon=
t-size: 50%; }
  .thin_hr { height: 2px; border: none; }
  .thick_hr { height: 5px; border: none; }
  .autotest_results { margin: 0.5em 1em 0em 0em; padding: 4px 8px; border-r=
adius: 10px; border: thin solid rgb(153, 153, 204); font-size: 100%; }
  .autotest_results_individual { font-size: 75%; }
  .autotest_results_emphasis { font-weight: bold; }
  .edit_github { margin: 1em; }
  .edit_github_link { font-weight: bold; font-size: 75%; }
  .cgi_display { width: 100%; display: inline-block; border-top: 1.5em; bor=
der-bottom: 1.5em; }
  .cgi_display_title { width: 100%; float: left; text-align: center; font-w=
eight: bold; }
  .cgi_output_panel { float: left; height: 20em; width: 50%; }
  .cgi_source_display { height: 100%; width: 100%; font-family: "Lucida Con=
sole", Courier, "Courier New", monospace; background: rgb(232, 232, 255); }
  .cgi_output_display { height: 100%; width: 100%; }
  .html_source_panel { float: left; height: 20em; width: 50%; left: 50%; }
  .html_source_display { padding-left: 2px; height: 100%; width: 100%; over=
flow: auto; white-space: pre; background: rgb(240, 240, 255); border: thin =
solid rgb(153, 153, 204); }
  .give_marking { font-family: "Liberation Mono", "DejaVu Sans Mono", "Bits=
tream Vera Sans Mono", "Courier New", monospace, serif; }
  .give_marking_listing_file { border: thin solid rgb(153, 153, 204); margi=
n: 1em; padding: 4px 8px; border-radius: 10px; }
  .highlighted_note { border: solid rgb(153, 153, 204); margin: 1em; paddin=
g: 4px 8px; border-radius: 10px; font-size: 120%; }
  code { border: none; font-size: 120%; }
  .multicolumn_block { white-space: nowrap; }
  .two_column_block { max-height: 64em; overflow: auto; width: 50%; display=
: inline-block; vertical-align: top; }
  .code_link { font-weight: bold; font-size: 0.9em; font-family: "Courier N=
ew", Courier, monospace; text-align: center; }
  .faq { margin-top: 2em; }
  .faq div:nth-child(1) { margin-left: 0em; margin-bottom: 0em; font-size: =
120%; padding: 4px 8px; border-radius: 10px; border: thin solid rgb(153, 15=
3, 204); }
  .faq div:nth-child(1)::before { content: "Question:"; font-weight: bold; =
}
  .faq div:nth-child(2) { margin-top: 0.4em; margin-left: 2em; margin-botto=
m: 0em; }
  .request_path { text-align: center; font-size: larger; font-weight: bold;=
 }
  .survey_message { font-size: larger; font-weight: bold; border-radius: 10=
px; border: thin solid green; margin: 2em; padding: 8px; background-color: =
rgb(241, 250, 241); }
  .survey_preface { border-radius: 10px; border: thin solid; margin: 2em; p=
adding: 8px; background-color: rgb(250, 250, 250); }
  .survey_question { margin-bottom: 2em; }
  .survey_question_description { font-weight: bold; }
  .survey_question_radio { margin-top: 0.3em; }
  a { color: rgb(51, 51, 255); }
  a[href]:hover { background-color: rgb(255, 255, 204); color: rgb(204, 0, =
0); }
  h2 { color: rgb(51, 102, 204); break-before: page; }
  code { color: black; background-color: rgb(255, 255, 255); }
  .command_line { background-color: rgb(248, 248, 255); }
  .command_line kbd { background-color: rgb(248, 248, 255); color: black; }
  .program { background-color: rgb(248, 248, 255); }
  .answer code, .answer { background-color: rgb(234, 250, 234); }
  .answer .command_line, pre.answer, .answer pre { border: thin solid green=
; background-color: rgb(241, 250, 241); }
  .tutors_only { color: red; }
  #heading, .heading_button { color: rgb(68, 119, 221); background-color: r=
gb(255, 255, 255); }
  .written.answer { border: thin solid green; background-color: rgb(241, 25=
0, 241); }
  .lab h3 { color: black; background-color: rgb(255, 248, 160); }
  .tut h3 { color: rgb(68, 119, 221); }
  .heading { color: rgb(68, 119, 221); }
  kbd { color: black; background: rgb(224, 224, 224); }
  .thin_hr { color: var(--main-color); background-color: var(--main-color);=
 }
  .thick_hr { color: var(--main-color); background-color: var(--main-color)=
; }
  .autotest_results { background-color: rgb(255, 248, 208); }
  .edit_github_link { background-color: rgb(255, 224, 80); color: rgb(0, 0,=
 0); }
  .give_marking_listing_file { background-color: rgb(248, 248, 255); }
  .highlighted_note { background-color: rgb(255, 244, 244); }
  .nav-tabs > li.active > a { border-color: var(--main-color); }
  .nav-tabs > .active > a, .nav-tabs > .active > a:hover, .nav-tabs > .acti=
ve > a:focus { border-top-color: ; border-right-color: ; border-left-color:=
 ; border-bottom-color: transparent; }
  .nav-tabs { border-bottom: 1px solid var(--main-color); }
  .faq div:nth-child(1) { background-color: rgb(246, 255, 246); }
  .request_path { color: black; }
}
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.rawgit.com/afeld/bootstrap-toc/v1.0.1/dist/bootstrap-toc.min.css

@charset "utf-8";

nav[data-toggle=3D"toc"] .nav > li > a { display: block; padding: 4px 20px;=
 font-size: 13px; font-weight: 500; color: rgb(118, 118, 118); }

nav[data-toggle=3D"toc"] .nav > li > a:focus, nav[data-toggle=3D"toc"] .nav=
 > li > a:hover { padding-left: 19px; color: rgb(86, 61, 124); text-decorat=
ion: none; background-color: transparent; border-left: 1px solid rgb(86, 61=
, 124); }

nav[data-toggle=3D"toc"] .nav-link.active, nav[data-toggle=3D"toc"] .nav-li=
nk.active:focus, nav[data-toggle=3D"toc"] .nav-link.active:hover { padding-=
left: 18px; font-weight: 700; color: rgb(86, 61, 124); background-color: tr=
ansparent; border-left: 2px solid rgb(86, 61, 124); }

nav[data-toggle=3D"toc"] .nav-link + ul { display: none; padding-bottom: 10=
px; }

nav[data-toggle=3D"toc"] .nav .nav > li > a { padding-top: 1px; padding-bot=
tom: 1px; padding-left: 30px; font-size: 12px; font-weight: 400; }

nav[data-toggle=3D"toc"] .nav .nav > li > a:focus, nav[data-toggle=3D"toc"]=
 .nav .nav > li > a:hover { padding-left: 29px; }

nav[data-toggle=3D"toc"] .nav .nav > li > .active, nav[data-toggle=3D"toc"]=
 .nav .nav > li > .active:focus, nav[data-toggle=3D"toc"] .nav .nav > li > =
.active:hover { padding-left: 28px; font-weight: 500; }

nav[data-toggle=3D"toc"] .nav-link.active + ul { display: block; }
------MultipartBoundary--ZxnVIADcIjUWqYOXYz5p5V0Ug5snS4wLQVkaMK3UXB------
